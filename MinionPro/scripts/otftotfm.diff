--- otftotfm.cc.orig	Mon Jan 31 14:35:21 2005
+++ otftotfm.cc	Thu Feb  3 08:21:22 2005
@@ -87,6 +87,8 @@
 #define DEFAULT_LIGKERN_OPT	329
 #define NO_ECOMMAND_OPT		330
 #define LETTER_FEATURE_OPT	331
+#define FILTER_OPT		332
+#define SPACE_FACTOR_OPT        333
 
 #define AUTOMATIC_OPT		341
 #define FONT_NAME_OPT		342
@@ -125,6 +127,8 @@
     { "feature", 'f', FEATURE_OPT, Clp_ArgString, 0 },
     { "letter-feature", 0, LETTER_FEATURE_OPT, Clp_ArgString, 0 },
     { "lf", 0, LETTER_FEATURE_OPT, Clp_ArgString, 0 },
+    { "filter", 0, FILTER_OPT, Clp_ArgString, 0 },
+    { "space-factor", 0, SPACE_FACTOR_OPT, Clp_ArgDouble, 0 },
     { "encoding", 'e', ENCODING_OPT, Clp_ArgString, 0 },
     { "literal-encoding", 0, LITERAL_ENCODING_OPT, Clp_ArgString, 0 },
     { "extend", 'E', EXTEND_OPT, Clp_ArgDouble, 0 },
@@ -216,7 +220,7 @@
 static int letterspace;
 static double design_size;
 static double minimum_kern = 2.0;
-
+static double space_factor = 1.0;
 static String out_encoding_file;
 static String out_encoding_name;
 
@@ -260,6 +264,9 @@
   -s, --script=SCRIPT[.LANG]   Use features for script SCRIPT[.LANG] [latn].\n\
   -f, --feature=FEAT           Activate feature FEAT.\n\
   --lf, --letter-feature=FEAT  Activate feature FEAT for letters.\n\
+      --filter=PROP            Restrict the following features to symbols\n\
+                               having property PROP.\n\
+  --space-factor=F             Scales the wordspace by a factor of F.\n\
   -E, --extend=F               Widen characters by a factor of F.\n\
   -S, --slant=AMT              Oblique characters by AMT, generally <<1.\n\
   -L, --letterspacing=AMT      Letterspace each character by AMT units.\n\
@@ -493,7 +500,7 @@
     if (char_bounds(bounds, width, family_cff, cmap, ' ', font_xform)) {
 	// advance space width by letterspacing
 	width += letterspace;
-	fprint_real(f, "   (SPACE", width, du);
+	fprint_real(f, "   (SPACE", int(width * space_factor), du);
 	if (family_cff->dict_value(Efont::Cff::oIsFixedPitch, 0, &val) && val) {
 	    // fixed-pitch: no space stretch or shrink
 	    fprint_real(f, "   (STRETCH", 0, du);
@@ -962,9 +969,9 @@
 
     StringAccum command;
     if (vpl)
-	command << "vptovf " << pl_filename << ' ' << vf_filename << ' ' << tfm_filename;
+	command << "vptovf " << pl_filename << ' ' << vf_filename << ' ' << tfm_filename << " >&2";
     else
-	command << "pltotf " << pl_filename << ' ' << tfm_filename;
+	command << "pltotf " << pl_filename << ' ' << tfm_filename << " >&2";
     
     int status = mysystem(command.c_str(), errh);
 
@@ -1434,7 +1441,7 @@
     Vector<String> unicoding;
     bool no_ecommand = false, default_ligkern = false;
     String codingscheme;
-
+    GlyphFilter* current_gf = NULL;
     GlyphFilter current_alternate_filter;
     GlyphFilter* current_alternate_filter_ptr = &null_filter;
     
@@ -1461,6 +1468,17 @@
 	      break;
 	  }
 
+          case SPACE_FACTOR_OPT : {
+            space_factor = clp->val.d;
+            break;
+          }
+
+          case FILTER_OPT: {
+              current_gf = new GlyphFilter;
+              current_gf->add_substitution_filter(clp->arg, false, errh);
+              break;
+          }
+
 	  case FEATURE_OPT: {
 	      OpenType::Tag t(clp->arg);
 	      if (!t.valid())
@@ -1471,7 +1489,13 @@
 		  if (!current_alternate_filter_ptr)
 		      current_alternate_filter_ptr = new GlyphFilter(current_alternate_filter);
 		  interesting_features.push_back(t);
-		  feature_filters.insert(t, current_alternate_filter_ptr);
+                  if (current_gf) {
+                    GlyphFilter *gf = new GlyphFilter(*current_gf);
+                    *gf += *current_alternate_filter_ptr;
+		    feature_filters.insert(t, gf);
+                  }
+                  else
+       		    feature_filters.insert(t, current_alternate_filter_ptr);
 	      }
 	      break;
 	  }
