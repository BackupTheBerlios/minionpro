#!/bin/sh

font=$1

if [ "x$font" = "" ]
then
  echo "No font specified!";
  echo "USAGE: maketfm <font>";
  exit 1
fi

## Detect whether the full set of optical sizes is present.
#opticals=1
#
#if [ ! -e "otf/$font-Capt.otf" ]
#then
#  opticals=0
#fi

make_tfm() {
  echo -n " $3," >&2
  otftotfm --no-dotlessj -fliga -fkern $4 -e enc/mn-$2.enc "otf/$font-$1.otf" "$font-$1-$3"
}

  lf_flags="-flnum -fpnum"
 osf_flags="-fonum -fpnum"
 tlf_flags="-flnum -ftnum"
tosf_flags="-fonum -ftnum"

  lf_ts_flags="-fpnum --filter=<Number> -fonum --filter=!<Number> -flnum"
 osf_ts_flags="-ftnum --filter=<Number> -fonum --filter=!<Number> -flnum"
 tlf_ts_flags="-fpnum --filter=<Number> -flnum --filter=!<Number> -fonum"
tosf_ts_flags="-ftnum --filter=<Number> -flnum --filter=!<Number> -fonum"

  lf_sc_flags="-flnum -fpnum --filter=<Letter> -fsmcp"
 osf_sc_flags="-fonum -fpnum -fsmcp"
 tlf_sc_flags="-flnum -ftnum --filter=<Letter> -fsmcp"
tosf_sc_flags="-fonum -ftnum -fsmcp"

  lf_sc_ts_flags="-fpnum --filter=<Number> -fonum --filter=!<Number> -flnum --filter=<Letter> -fsmcp"
 osf_sc_ts_flags="-ftnum -fsmcp --filter=<Number> -fonum --filter=!<Number> -flnum"
 tlf_sc_ts_flags="-fpnum --filter=<Number> -flnum --filter=!<Number> -fonum --filter=<Letter> -fsmcp"
tosf_sc_ts_flags="-ftnum -fsmcp --filter=<Number> -flnum --filter=!<Number> -fonum"

make_normal_metrics() {

     flags=$(eval echo '$'$2_flags)
  ts_flags=$(eval echo '$'$2_ts_flags)
  sc_flags=$(eval echo '$'$2_sc_flags)

  make_tfm "$1" t1     $2-t1        "$flags"
  make_tfm "$1" ot1    $2-ot1       "$flags"
  make_tfm "$1" lgr    $2-lgr       "-sgrek $flags"
  make_tfm "$1" ly1    $2-ly1       "$flags"
  make_tfm "$1" t2a    $2-t2a       "-scyrl $flags"
  make_tfm "$1" t2b    $2-t2b       "-scyrl $flags"
  make_tfm "$1" t2c    $2-t2c       "-scyrl $flags"
  make_tfm "$1" x2     $2-x2        "-scyrl $flags"

  make_tfm "$1" ts1    $2-ts1       "$ts_flags"
  make_tfm "$1" ts1    $2-sc-ts1    "$sc_ts_flags"
  make_tfm "$1" ts1    $2-sc-l2-ts1 "-L 80 $sc_ts_flags"

  make_tfm "$1" t1     $2-sc-t1     "$sc_flags"
  make_tfm "$1" ot1    $2-sc-ot1    "$sc_flags"

  make_tfm "$1" t1     $2-sc-l2-t1  "-L 80 $sc_flags"
  make_tfm "$1" ot1    $2-sc-l2-ot1 "-L 80 $sc_flags"
}

#make_normal_ts1_metrics() {
#
#  make_tfm "$1" ts1 $2-ts1       "$3"
#  make_tfm "$1" ts1 $2-sc-ts1    "$3 -fsmcp"
#  make_tfm "$1" ts1 $2-sc-l2-ts1 "-L 80 $3 -fsmcp"
#}

make_oml_metrics() {

  make_tfm "$1" oml $2-oml       "$3"
  make_tfm "$1" oml $2-l1-oml    "-L 40 $3"
  make_tfm "$1" integral $2-cn1-integral    "-E 0.85 $3"  # -E .90 ??
  make_tfm "$1" integral $2-cn2-integral    "-E 0.75 -S 0.04 $3"  # -E .90 ??
#  make_tfm "$1" integral $2-cn-l1-integral "-E 0.85 -L 40 $3"  # -E .90 ??
}

make_spread_metrics() {

     flags=$(eval echo '$'$2_flags)
  ts_flags=$(eval echo '$'$2_ts_flags)
  sc_flags=$(eval echo '$'$2_sc_flags)

  make_tfm "$1" t1     $2-l1-t1     "-L 40        $flags"
  make_tfm "$1" ot1    $2-l1-ot1    "-L 40        $flags"
  make_tfm "$1" lgr    $2-l1-lgr    "-L 40 -sgrek $flags"
  make_tfm "$1" ly1    $2-ly1       "-L 40        $flags"
  make_tfm "$1" t2a    $2-l1-t2a    "-L 40 -scyrl $flags"
  make_tfm "$1" t2b    $2-l1-t2b    "-L 40 -scyrl $flags"
  make_tfm "$1" t2c    $2-l1-t2c    "-L 40 -scyrl $flags"
  make_tfm "$1" x2     $2-l1-x2     "-L 40 -scyrl $flags"
  make_tfm "$1" ts1    $2-l1-ts1    "-L 40        $ts_flags"
  make_tfm "$1" ts1    $2-sc-l1-ts1 "-L 40        $sc_ts_flags"
  make_tfm "$1" sc-t1  $2-sc-l1-t1  "-L 40        $sc_flags"
  make_tfm "$1" sc-ot1 $2-sc-l1-ot1 "-L 40        $sc_flags"
}

#make_spread_ts1_metrics() {
#
#  make_tfm "$1" ts1 $2-l1-ts1    "-L 40 $3"
#  make_tfm "$1" ts1 $2-sc-l1-ts1 "-L 40 $3 -fsmcp"
#}

make_metrics() {

  echo -n "Processing font $font-$1 ..." >&2

  make_normal_metrics     "$1" lf   "-flnum -fpnum"
  make_normal_metrics     "$1" tlf  "-flnum -ftnum"
  make_normal_metrics     "$1" osf  "-fonum -fpnum"
  make_normal_metrics     "$1" tosf "-fonum -ftnum"

#  make_normal_ts1_metrics "$1" lf   "-fpnum --filter=<Number> -fonum --filter=!<Number> -flnum"
#  make_normal_ts1_metrics "$1" tlf  "-ftnum --filter=<Number> -fonum --filter=!<Number> -flnum"
#  make_normal_ts1_metrics "$1" osf  "-fpnum --filter=<Number> -flnum --filter=!<Number> -fonum"
#  make_normal_ts1_metrics "$1" tosf "-ftnum --filter=<Number> -flnum --filter=!<Number> -fonum"

  make_oml_metrics        "$1" lf   "-flnum -ftnum"
  make_oml_metrics        "$1" tlf  "-flnum -fpnum"
  make_oml_metrics        "$1" osf  "-fonum -ftnum"
  make_oml_metrics        "$1" tosf "-fonum -fpnum"

  make_tfm "$1" orn-u orn-u ""

  echo " done." >&2
}

make_spaced_metrics() {

  echo -n "Processing font $font-$1 ..." >&2

  make_spread_metrics     "$1" lf   "-flnum -fpnum"
  make_spread_metrics     "$1" tlf  "-flnum -ftnum"
  make_spread_metrics     "$1" osf  "-fonum -fpnum"
  make_spread_metrics     "$1" tosf "-fonum -ftnum"

#  make_spread_ts1_metrics "$1" lf   "-fpnum --filter=<Number> -fonum --filter=!<Number> -flnum"
#  make_spread_ts1_metrics "$1" tlf  "-ftnum --filter=<Number> -fonum --filter=!<Number> -flnum"
#  make_spread_ts1_metrics "$1" osf  "-fpnum --filter=<Number> -flnum --filter=!<Number> -fonum"
#  make_spread_ts1_metrics "$1" tosf "-ftnum --filter=<Number> -flnum --filter=!<Number> -fonum"

  echo " done." >&2
}

make_swash_metrics() {

  echo -n "Processing font $font-$1 ..." >&2

  make_tfm "$1" t1  lf-swash-t1    "-flnum -fpnum -fswsh"
  make_tfm "$1" ot1 lf-swash-ot1   "-flnum -fpnum -fswsh"
  make_tfm "$1" t1  osf-swash-t1   "-fonum -fpnum -fswsh"
  make_tfm "$1" ot1 osf-swash-ot1  "-fonum -fpnum -fswsh"
  make_tfm "$1" t1  tlf-swash-t1   "-flnum -ftnum -fswsh"
  make_tfm "$1" ot1 tlf-swash-ot1  "-flnum -ftnum -fswsh"
  make_tfm "$1" t1  tosf-swash-t1  "-fonum -ftnum -fswsh"
  make_tfm "$1" ot1 tosf-swash-ot1 "-fonum -ftnum -fswsh"

  echo " done." >&2
}

make_spaced_swash_metrics() {

  echo -n "Processing font $font-$1 ..." >&2

  make_tfm "$1" t1  lf-swash-l1-t1    "-L 40 -flnum -fpnum -fswsh"
  make_tfm "$1" ot1 lf-swash-l1-ot1   "-L 40 -flnum -fpnum -fswsh"
  make_tfm "$1" t1  osf-swash-l1-t1   "-L 40 -fonum -fpnum -fswsh"
  make_tfm "$1" ot1 osf-swash-l1-ot1  "-L 40 -fonum -fpnum -fswsh"
  make_tfm "$1" t1  tlf-swash-l1-t1   "-L 40 -flnum -ftnum -fswsh"
  make_tfm "$1" ot1 tlf-swash-l1-ot1  "-L 40 -flnum -ftnum -fswsh"
  make_tfm "$1" t1  tosf-swash-l1-t1  "-L 40 -fonum -ftnum -fswsh"
  make_tfm "$1" ot1 tosf-swash-l1-ot1 "-L 40 -fonum -ftnum -fswsh"

  echo " done." >&2
}

make_series() {

  for sub in "" Capt Disp Subh
  do
    if [ "x$1$sub" = "x" ]
    then
      make_metrics Regular
    else
      make_metrics "$1$sub"
    fi
  done

  make_spaced_metrics "$1Capt"

  if [ "x$1" = "x" ]
  then 
    make_spaced_metrics Regular
  else
    make_spaced_metrics "$1"
  fi
}

make_additional_italic() {

  for sub in "" Capt Disp Subh
  do
    make_swash_metrics "$1$sub"
  done

  make_spaced_swash_metrics "$1"
  make_spaced_swash_metrics "$1Capt"
}

for series in "" Semibold Bold
do
  make_series "$series" &
  make_series "${series}It"

  make_additional_italic  "${series}It"
done

