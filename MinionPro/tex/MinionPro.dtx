%\iffalse meta-comment
%<*driver>
           \ProvidesFile{MinionPro.dtx}       [2005/01/23 v2.0 MinionPro support for LaTeX]
%</driver>
%<style>   \NeedsTeXFormat{LaTeX2e}
%<style>   \ProvidesPackage{MinionPro}        [2005/01/23 v2.0 MinionPro support for LaTeX]
%<mtcfg>   \ProvidesFile{mt-MinionPro.cfg}    [2005/02/07 v1.0 microtype config file for MinionPro]
%<fontdef>\ProvidesFile{MinionPro-FontDef.sty}[2005/04/13 v2.1 font definition macros]
%<Uorn> \ProvidesFile{UMinionPro-Ornaments.fd}[2005/01/23 v2.0 font definitions for U/MinionPro-Ornaments.]
%<LGR&lf>  \ProvidesFile{LGRMinionPro-LF.fd}  [2005/01/23 v2.0 font definitions for LGR/MinionPro-LF.]
%<LGR&osf> \ProvidesFile{LGRMinionPro-OsF.fd} [2005/01/23 v2.0 font definitions for LGR/MinionPro-OsF.]
%<LGR&tlf> \ProvidesFile{LGRMinionPro-TLF.fd} [2005/01/23 v2.0 font definitions for LGR/MinionPro-TLF.]
%<LGR&tosf>\ProvidesFile{LGRMinionPro-TOsF.fd}[2005/01/23 v2.0 font definitions for LGR/MinionPro-TOsF.]
%<OML&lf>  \ProvidesFile{OMLMinionPro-LF.fd}  [2005/01/23 v2.0 font definitions for OML/MinionPro-LF.]
%<OML&osf> \ProvidesFile{OMLMinionPro-OsF.fd} [2005/01/23 v2.0 font definitions for OML/MinionPro-OsF.]
%<OML&tlf> \ProvidesFile{OMLMinionPro-TLF.fd} [2005/01/23 v2.0 font definitions for OML/MinionPro-TLF.]
%<OML&tosf>\ProvidesFile{OMLMinionPro-TOsF.fd}[2005/01/23 v2.0 font definitions for OML/MinionPro-TOsF.]
%<OT1&lf>  \ProvidesFile{OT1MinionPro-LF.fd}  [2005/01/23 v2.0 font definitions for OT1/MinionPro-LF.]
%<OT1&osf> \ProvidesFile{OT1MinionPro-OsF.fd} [2005/01/23 v2.0 font definitions for OT1/MinionPro-OsF.]
%<OT1&tlf> \ProvidesFile{OT1MinionPro-TLF.fd} [2005/01/23 v2.0 font definitions for OT1/MinionPro-TLF.]
%<OT1&tosf>\ProvidesFile{OT1MinionPro-TOsF.fd}[2005/01/23 v2.0 font definitions for OT1/MinionPro-TOsF.]
%<T1&lf>   \ProvidesFile{T1MinionPro-LF.fd}   [2005/01/23 v2.0 font definitions for T1/MinionPro-LF.]
%<T1&osf>  \ProvidesFile{T1MinionPro-OsF.fd}  [2005/01/23 v2.0 font definitions for T1/MinionPro-OsF.]
%<T1&tlf>  \ProvidesFile{T1MinionPro-TLF.fd}  [2005/01/23 v2.0 font definitions for T1/MinionPro-TLF.]
%<T1&tosf> \ProvidesFile{T1MinionPro-TOsF.fd} [2005/01/23 v2.0 font definitions for T1/MinionPro-TOsF.]
%<LY1&lf>  \ProvidesFile{LY1MinionPro-LF.fd}  [2005/01/23 v2.0 font definitions for LY1/MinionPro-LF.]
%<LY1&osf> \ProvidesFile{LY1MinionPro-OsF.fd} [2005/01/23 v2.0 font definitions for LY1/MinionPro-OsF.]
%<LY1&tlf> \ProvidesFile{LY1MinionPro-TLF.fd} [2005/01/23 v2.0 font definitions for LY1/MinionPro-TLF.]
%<LY1&tosf>\ProvidesFile{LY1MinionPro-TOsF.fd}[2005/01/23 v2.0 font definitions for LY1/MinionPro-TOsF.]
%<T5&lf>   \ProvidesFile{T5MinionPro-LF.fd}   [2005/01/23 v2.0 font definitions for T5/MinionPro-LF.]
%<T5&osf>  \ProvidesFile{T5MinionPro-OsF.fd}  [2005/01/23 v2.0 font definitions for T5/MinionPro-OsF.]
%<T5&tlf>  \ProvidesFile{T5MinionPro-TLF.fd}  [2005/01/23 v2.0 font definitions for T5/MinionPro-TLF.]
%<T5&tosf> \ProvidesFile{T5MinionPro-TOsF.fd} [2005/01/23 v2.0 font definitions for T5/MinionPro-TOsF.]
%<T2A&lf>  \ProvidesFile{T2AMinionPro-LF.fd}  [2005/01/23 v2.0 font definitions for T2A/MinionPro-LF.]
%<T2A&osf> \ProvidesFile{T2AMinionPro-OsF.fd} [2005/01/23 v2.0 font definitions for T2A/MinionPro-OsF.]
%<T2A&tlf> \ProvidesFile{T2AMinionPro-TLF.fd} [2005/01/23 v2.0 font definitions for T2A/MinionPro-TLF.]
%<T2A&tosf>\ProvidesFile{T2AMinionPro-TOsF.fd}[2005/01/23 v2.0 font definitions for T2A/MinionPro-TOsF.]
%<T2B&lf>  \ProvidesFile{T2BMinionPro-LF.fd}  [2005/01/23 v2.0 font definitions for T2B/MinionPro-LF.]
%<T2B&osf> \ProvidesFile{T2BMinionPro-OsF.fd} [2005/01/23 v2.0 font definitions for T2B/MinionPro-OsF.]
%<T2B&tlf> \ProvidesFile{T2BMinionPro-TLF.fd} [2005/01/23 v2.0 font definitions for T2B/MinionPro-TLF.]
%<T2B&tosf>\ProvidesFile{T2BMinionPro-TOsF.fd}[2005/01/23 v2.0 font definitions for T2B/MinionPro-TOsF.]
%<T2C&lf>  \ProvidesFile{T2CMinionPro-LF.fd}  [2005/01/23 v2.0 font definitions for T2C/MinionPro-LF.]
%<T2C&osf> \ProvidesFile{T2CMinionPro-OsF.fd} [2005/01/23 v2.0 font definitions for T2C/MinionPro-OsF.]
%<T2C&tlf> \ProvidesFile{T2CMinionPro-TLF.fd} [2005/01/23 v2.0 font definitions for T2C/MinionPro-TLF.]
%<T2C&tosf>\ProvidesFile{T2CMinionPro-TOsF.fd}[2005/01/23 v2.0 font definitions for T2C/MinionPro-TOsF.]
%<TS1&lf>  \ProvidesFile{TS1MinionPro-LF.fd}  [2005/01/23 v2.0 font definitions for TS1/MinionPro-LF.]
%<TS1&osf> \ProvidesFile{TS1MinionPro-OsF.fd} [2005/01/23 v2.0 font definitions for TS1/MinionPro-OsF.]
%<TS1&tlf> \ProvidesFile{TS1MinionPro-TLF.fd} [2005/01/23 v2.0 font definitions for TS1/MinionPro-TLF.]
%<TS1&tosf>\ProvidesFile{TS1MinionPro-TOsF.fd}[2005/01/23 v2.0 font definitions for TS1/MinionPro-TOsF.]
%<X2&lf>   \ProvidesFile{X2MinionPro-LF.fd}   [2005/01/23 v2.0 font definitions for X2/MinionPro-LF.]
%<X2&osf>  \ProvidesFile{X2MinionPro-OsF.fd}  [2005/01/23 v2.0 font definitions for X2/MinionPro-OsF.]
%<X2&tlf>  \ProvidesFile{X2MinionPro-TLF.fd}  [2005/01/23 v2.0 font definitions for X2/MinionPro-TLF.]
%<X2&tosf> \ProvidesFile{X2MinionPro-TOsF.fd} [2005/01/23 v2.0 font definitions for X2/MinionPro-TOsF.]
%<OT2&lf>  \ProvidesFile{OT2MinionPro-LF.fd}  [2005/01/23 v2.0 font definitions for OT2/MinionPro-LF.]
%<OT2&osf> \ProvidesFile{OT2MinionPro-OsF.fd} [2005/01/23 v2.0 font definitions for OT2/MinionPro-OsF.]
%<OT2&tlf> \ProvidesFile{OT2MinionPro-TLF.fd} [2005/01/23 v2.0 font definitions for OT2/MinionPro-TLF.]
%<OT2&tosf>\ProvidesFile{OT2MinionPro-TOsF.fd}[2005/01/23 v2.0 font definitions for OT2/MinionPro-TOsF.]
%<*driver>
\documentclass{ltxdoc}
\usepackage[T1]{fontenc}
\usepackage[smallfamily,minionint]{MinionPro}
\usepackage{microtype}
\usepackage[british]{babel}
\usepackage{array,ifthen,booktabs,pifont}

\newcommand*\pkg[1]{\mbox{\textsf{#1}}}
\newcommand*\file[1]{\textsf{#1}}
\makeatletter
\newcommand*\option{\@ifstar\option@default\option@}
\newcommand*\option@default[1]{\option@{#1}*}
\newcommand*\option@[1]{\textsf{#1}}
\makeatother
\newcommand*\acro[1]{\textsc{\MakeLowercase{#1}}}
\newcommand*\?{\kern0.08em}

\newlength\optionswidth

\newcommand\tabindent{\noindent\hspace{2em}}
\newenvironment{options}{%
  \par\medskip\tabindent
  \begin{tabular}{@{}p{\optionswidth}l@{}}%
}{%
  \end{tabular}%
  \par\medskip
}
\renewcommand\theCodelineNo{%
  \normalfont\scriptsize\figureversion{tabular}\arabic{CodelineNo}}

\setcounter{secnumdepth}{2}
\setcounter{tocdepth}{2}

\begin{document}
\DocInput{MinionPro.dtx}
\end{document}
%</driver>
%\fi
%
% \GetFileInfo{MinionPro.dtx}
%
% \title{MinionPro Support for \LaTeX}
% \author{Achim Blumensath \and Andreas B\"uhmann \and Michael Zedler}
% \date{\fileversion\ -- \filedate}
% \maketitle
%
% \tableofcontents
%
% \section{Overview}
%
% The \pkg{MinionPro} package provides support for the MinionPro
% font family from Adobe.
% To use these fonts in a \LaTeX\ document you can issue the command
% \begin{quote}
%   |\usepackage{MinionPro}|
% \end{quote}
%
% \section{Interference with other packages}
% \label{sec:dcolumn}
%
% The \pkg{MinionPro} package automatically loads the following packages\?:
% \pkg{textcomp}, \pkg{amsmath}, and \pkg{MnSymbol}.
% If you want to pass options to these packages you can
% either put the corresponding |\usepackage| command before the
% |\usepackage{MinionPro}| or you can include the options in the
% |\documentclass| command. The \pkg{MinionPro} package is \emph{not}
% compatible with \pkg{amssymb} and \pkg{amsfonts}. Please see also the
% corresponding section in the \pkg{MnSymbol} documentation.
%
% The MinionPro package includes support files for the \pkg{microtype}
% package. To enable character protrusion add the command
% \begin{quote}
%   |\usepackage{microtype}|
% \end{quote}
% \emph{after} the command |\usepackage{MinionPro}|.
%
% There is also a slight incompatibility with the \pkg{dcolumn} package
% which expects all figures to have the same size. If you want to use this
% package you either have to specify the \option{mathtabular} option (this is
% the brute force solution, not recommended), or you can use the
% |\figureversion{tabular}| command to switch to tabular figures in front of
% every table (much better, but also more work).
%
% \section{Options}
%
% \subsubsection*{Selection of the fonts to be used}
%
% The following options specify which version of the fonts you want to use.
% The default settings are marked with an asterisk*.
%
% \settowidth{\optionswidth}{\option{proportional}, \option{prop}}\relax
% \begin{options}
%   \option{smallfamily} & use only regular and bold face\\
%   \option*{medfamily} &  use semibold face in addition to \option{smallfamily} \\
%   \option{fullfamily} &  use medium face in addition to \option{medfamily}\\
%   \option*{opticals}  &  use the optical sizes Caption/Subhead/Display\\
%   \option{noopticals} &  use only the Text optical size\\
%   \option{slides}     &  use only the Caption optical shape (useful for slides)
% \end{options}
%
% \subsubsection*{Figure selection}
%
% \begin{options}
%   \option{textosf}     & use text figures in text mode\\
%   \option{mathosf}     & use text figures in math mode\\
%   \option*{osf}        & use text figures in text and math mode\\
%   \option{textlf}      & use lining figures in text mode\\
%   \option{mathlf}      & use lining figures in math mode\\
%   \option{lf}          & use lining figures in text and math mode\\
%   \option{mathtabular} & tabular figures in math mode
% \end{options}
%
% \noindent
% Inside the document the |\figureversion| command can be used to switch between
% different figure versions. Possible parameters are\?:
%
% \begin{options}
%   \option{text}, \option{osf}          & textstyle figures\\
%   \option{lining}, \option{lf}         & lining figures\\
%   \option{tabular}, \option{tab}       & tabular figures\\
%   \option{proportional}, \option{prop} & proportional figures
% \end{options}
%
% \subsubsection*{Calligraphic Fonts}
%
% \begin{options}
%   \option*{mnsy} & use the calligraphic font from MnSymbol\\
%   \option{cmsy}  & take the calligraphic symbols from Computer Modern\\
%   \option{swash} & use the swash captials from MinionPro\\
%   \option{abx}   & use the calligraphic symbols provided by mathabx\?; \\
%                  & this font contains also lower case letters, but it is not quite finished.
% \end{options}
%
% \subsubsection*{Blackboard and fraktur letters}
%
% \begin{options}
%   \option*{amsbb}  & use the AMS blackboard font\\
%   \option{pazobb}  & use the Pazo blackboard font (does not fit very well to MinionPro)\\
%   \option{eufrak}* & use the Euler fraktur font
% \end{options}
%
% \subsubsection*{Greek letters}
%
% The following options specify whether you want to use upright or italic Greek
% letters in math mode.
%
% \begin{options}
%   \option*{mixedgreek} & uppercase Greek upright, lowercase Greek italic\\
%   \option{romangreek}  & all Greek letters upright\\
%   \option{italicgreek} & all Greek letters italic
% \end{options}
%
% \noindent
% Upright and italic greek letters are also directly accessible via the commands
% |\upgamma|, |\itgamma|, |\upGamma|, |\itGamma|, etc.
%
% \subsubsection*{Miscellaneous options}
%
% \begin{options}
% \iffalse  \option{protrude} &    enable character protrusion with pdflatex\\ \fi
%   \option{minionint}
%      & take the integral symbols from MinionPro, not from MnSymbol\?:\\
%      & $\displaystyle\int$ instead of $\displaystyle\varint$
% \end{options}
%
% \section{Additional font shapes and symbols}
%
% In addition to the normal small caps shape |sc| there is a letterspaced
% version called~|ssc|. It is accessible via the commands |\sscshape| and
% |\textssc|. In order to use the |ssc| shape throughout your document specify
% |\renewcommand{\scdefault}{ssc}| in the preamble of your document.
%
% Swash capitals like \textsw{`Canadian Mountain Holidays'} are acessed
% via the |sw| fontshape and the commands |\swshape| and |\textsw|.
%
% \begin{options}
%   |sc|  & \textsc {This is a Sample Text}\\
%   |ssc| & \textssc{This is a Sample Text}\\
%   |sw|  & \textsw {This is a Sample Text}
% \end{options}
%
% \noindent
% \iffalse In order to make non-standard ligatures searchable in the \acro{PDF} generated by pdflatex,
% \file{cmapex.sty} needs to be loaded before \file{fontenc.sty}.
% \fi
% The \pkg{MinionPro} package provides all symbols from the \pkg{MnSymbol} package.
% Additionally, the following math symbols are made available\?:
% 
% \medskip\tabindent
% \begingroup
% \newcommand*\sym[1]{$#1$ & \ttfamily\string#1}%
% \begin{tabular}{@{}*2{ll@{\qquad}}ll@{}}
%   \sym\digamma & \sym\varkappa & \sym\varbeta \\
%   \sym\backepsilon & \sym\varbackepsilon & \sym\hbar \\
%   \sym\jmath & \sym\eth & \sym\lozenge \\
%   \sym\slashedzero \\
% \end{tabular}
% \endgroup
% \par\medskip
%
% \noindent
% Split fractions can be typeset either using the individual glyphs
% |\text|\meta{number}|numerator|, |\text|\meta{number}|denominator|, and
% |\textfractionsolidus| or using the following pre-composed fractions\?:
%
% \medskip\tabindent
% \begingroup
% \newcommand*\sym[1]{#1 & \ttfamily\string#1}%
% \begin{tabular}{@{}*1{ll@{\qquad}}ll@{}}
% \sym\textonehalf & \sym\textonethird \\
% \sym\texttwothirds & \sym\textonequarter \\
% \sym\textthreequarters & \sym\textoneeighth \\ 
% \sym\textthreeeighths & \sym\textfiveeighths \\
% \sym\textseveneighths \\
% \end{tabular}
% \endgroup
% \par\medskip
%
% \noindent
% Ornaments can be accessed via the \pkg{pifont} package using the command
% \begin{quote}
%   |\Pisymbol{MinionPro-Ornaments}|\marg{int}
% \end{quote}
% The available glyphs are listed in the table below. Version 1.000 of the
% MinionPro font provides only ornaments 1--23.
%
% \medskip\noindent
% {\figureversion{tabular}\centering
% \newcommand*\orn[1]{#1 & \Pisymbol{MinionPro-Ornaments}{#1}}\relax
% \begin{tabular}{@{}*{3}{rl@{\qquad}}rl@{}}
% \toprule
%  number & glyph & number & glyph & number & glyph & number & glyph\\
% \midrule
% \orn{1}  & \orn{14} & \orn{27} & \orn{40}\\
% \orn{2}  & \orn{15} & \orn{28} & \orn{41}\\
% \orn{3}  & \orn{16} & \orn{29} & \orn{42}\\
% \orn{4}  & \orn{17} & \orn{30} & \orn{43}\\
% \orn{5}  & \orn{18} & \orn{31} & \orn{44}\\
% \orn{6}  & \orn{19} & \orn{32} & \orn{45}\\
% \orn{7}  & \orn{20} & \orn{33} & \orn{46}\\
% \orn{8}  & \orn{21} & \orn{34} & \orn{47}\\
% \orn{9}  & \orn{22} & \orn{35} & \orn{48}\\
% \orn{10} & \orn{23} & \orn{36} & \orn{49}\\
% \orn{11} & \orn{24} & \orn{37} & \orn{50}\\
% \orn{12} & \orn{25} & \orn{38} & \orn{51}\\
% \orn{13} & \orn{26} & \orn{39} & \\
% \bottomrule
% \end{tabular}\par}
%
% \section{Language support}
%
% The following encodings are supported\?:
%
% \medskip\tabindent
% \begin{tabular}{@{}ll@{}}
%   latin    & \acro{OT1}, \acro{T1}, \acro{TS1}, \acro{LY1}, \acro{T5}\\
%   cyrillic & \acro{T2A}, \acro{T2B}, \acro{T2C}, \acro{X2}, \acro{OT2}\\
%   greek    & \acro{LGR} (to be used with babel, including polutonikogreek)
% \end{tabular}
%
% \StopEventually{}
%
% \section{The main style file}
%
%    \begin{macrocode}
%<*style>
%\RequirePackage{MinionPro-Protrude}
%
%\DeclareOption{protrude}{\enableprotruding}
%    \end{macrocode}
%
% \subsection{Options}
%
% \subsubsection{Font sets}
% The package \pkg{MinionPro-FontDef} adapts the font definitions to the
% requested font set. So we simply pass on the relevant options\?; only
% MinionPro integrals are handled here in \pkg{MinionPro}.
%    \begin{macrocode}
\newcommand\Mn@minionint@opticals{}
\newcommand\Mn@minionint@bold{-Semibold}
\DeclareOption{slides}{\PassOptionsToPackage{slides}{MinionPro-FontDef}}
\DeclareOption{opticals}{\PassOptionsToPackage{opticals}{MinionPro-FontDef}}
\DeclareOption{noopticals}{%
  \PassOptionsToPackage{noopticals}{MinionPro-FontDef}%
  \def\Mn@minionint@opticals{-NoOpticals}}%
\DeclareOption{smallfamily}{%
%    \end{macrocode}
% In the case of \option{smallfamily} it is unlikely that opticals are
% available.
%    \begin{macrocode}
  \ExecuteOptions{noopticals}%
  \def\Mn@minionint@bold{-Bold}%
  \PassOptionsToPackage{smallfamily}{MinionPro-FontDef}}
\DeclareOption{medfamily}{\PassOptionsToPackage{medfamily}{MinionPro-FontDef}}
\DeclareOption{fullfamily}{\PassOptionsToPackage{fullfamily}{MinionPro-FontDef}}
%    \end{macrocode}
%
% \subsubsection{Figure style}
%
%    \begin{macrocode}
\newcommand\Mn@Text@FigA{}
\newcommand\Mn@Text@FigB{OsF}
\newcommand\Mn@Text@Fig{\Mn@Text@FigA\Mn@Text@FigB}
\newcommand\Mn@Math@Fig{OsF}
\newcommand\Mn@Text@Family{MinionPro-\Mn@Text@Fig}
\newcommand\Mn@Math@Family{MinionPro-\Mn@Math@Fig}
\newcommand\Mn@Math@TFamily{MinionPro-T\Mn@Math@Fig}
%    \end{macrocode}
% 
%    \begin{macrocode}
\DeclareOption{textosf}{\def\Mn@Text@FigB{OsF}}
\DeclareOption{textlf} {\def\Mn@Text@FigB{LF}}
\DeclareOption{mathosf}{\def\Mn@Math@Fig{OsF}}
\DeclareOption{mathlf} {\def\Mn@Math@Fig{LF}}
\DeclareOption{osf}{\ExecuteOptions{textosf,mathosf}}
\DeclareOption{lf} {\ExecuteOptions{textlf,mathlf}}
\DeclareOption{mathtabular}{\let\Mn@Math@Family\Mn@Math@TFamily}
%    \end{macrocode}
%
% \subsubsection{Calligraphic fonts}
%
% Most options are handled by \pkg{MnSymbol}.
%    \begin{macrocode}
\DeclareOption{mnsy}{\PassOptionsToPackage{mnsy}{MnSymbol}}
\DeclareOption{cmsy}{\PassOptionsToPackage{cmsy}{MnSymbol}}
\DeclareOption{abx}{\PassOptionsToPackage{abx}{MnSymbol}}
%    \end{macrocode}
% This hook is going to be executed once the math versions have been set up.
%    \begin{macrocode}
\newcommand\Mn@load@cal{}
\DeclareOption{swash}{
  \def\Mn@load@cal{
    \DeclareMathAlphabet\mathcal     {T1}{\Mn@Math@Family} {m}{sw}
    \SetMathAlphabet\mathcal{bold}   {T1}{\Mn@Math@Family} {b}{sw}
    \SetMathAlphabet\mathcal{tabular}{T1}{\Mn@Math@TFamily}{m}{sw}
    \SetMathAlphabet\mathcal{boldtabular}{T1}{\Mn@Math@TFamily}{b}{sw}}
}
%    \end{macrocode}
%
% \subsubsection{Greek letters}
%
% |\Mn@Greek@Rm|, |\Mn@Greek@Mix|, and |\Mn@Greek@It| are defined below in
% section~\ref{sec:greek} before |\Mn@Greek@Shape| is executed.
%    \begin{macrocode}
\newcommand\Mn@Greek@Shape{}
\DeclareOption{romangreek}{\def\Mn@Greek@Shape{\Mn@Greek@Rm}}
\DeclareOption{mixedgreek}{\def\Mn@Greek@Shape{\Mn@Greek@Mix}}
\DeclareOption{italicgreek}{\def\Mn@Greek@Shape{\Mn@Greek@It}}
%    \end{macrocode}
%
% \subsubsection{Blackbord bold and fraktur fonts}
%
%    \begin{macrocode}
\newcommand\Mn@load@amsbb{
  \let\mathbb\undefined
  \DeclareMathAlphabet\mathbb{U}{msb}{m}{n}}
\newcommand\Mn@load@pazobb{
  \let\mathbb\undefined
  \DeclareFontFamily{T1}{fplmbb}{}
  \DeclareFontShape{T1}{fplmbb}{m}{n}{ <->s*[0.92] fplmbb }{}
  \DeclareMathAlphabet\mathbb{T1}{fplmbb}{m}{n}}
%    \end{macrocode}
%
%    \begin{macrocode}
\newcommand\Mn@load@wbfrak{
  \let\mathfrak\undefined
  \DeclareMathAlphabet\mathfrak     {T1}{DS-Wartburg-Fraktur}{m}{n}
  \SetMathAlphabet\mathfrak{bold}   {T1}{DS-Wartburg-Fraktur}{b}{n}
  \SetMathAlphabet\mathfrak{tabular}{T1}{DS-Wartburg-Fraktur}{m}{n}
  \SetMathAlphabet\mathfrak{boldtabular}{T1}{DS-Wartburg-Fraktur}{b}{n}}
\newcommand\Mn@load@eufrak{
  \RequirePackage{eufrak}}
%    \end{macrocode}
%
%    \begin{macrocode}
\DeclareOption{amsbb} {\let\Mn@load@bb\Mn@load@amsbb}
\DeclareOption{pazobb}{\let\Mn@load@bb\Mn@load@pazobb}
\DeclareOption{wbfrak}{\let\Mn@load@frak\Mn@load@wbfrak}
\DeclareOption{eufrak}{\let\Mn@load@frak\Mn@load@eufrak}
%    \end{macrocode}
%
% \subsubsection{Integrals}
%
%    \begin{macrocode}
\newcommand\Mn@load@integrals{}
\DeclareOption{minionint}{\def\Mn@load@integrals{\Mn@Decl@Minion@Ints}}
%    \end{macrocode}
% 
% \subsubsection{Defaults}
%
%    \begin{macrocode}
\ExecuteOptions{osf,mixedgreek,amsbb,eufrak}
\ProcessOptions\relax
%    \end{macrocode}
%
% \subsection{Font declarations}
%
%    \begin{macrocode}
\RequirePackage{MnSymbol,MinionPro-FontDef}
%    \end{macrocode}
% By default, we use |sb| for the bold series. If |MinionPro-Semibold| is not
% available this might internally be mapped to |MinionPro-Bold| (see
% \pkg{MinionPro-FontDef}). 
%    \begin{macrocode}
\renewcommand\rmdefault{\Mn@Text@Family}
\renewcommand\bfdefault{sb}
%    \end{macrocode}
%
% \subsubsection{Math versions}
%
% Redefine the standard math versions |normal| and |bold|.
%    \begin{macrocode}
\DeclareSymbolFont{operators}      {T1}{\Mn@Math@Family} {m}{n}
\DeclareSymbolFont{letters}       {OML}{\Mn@Math@Family} {m}{it}
\DeclareSymbolFont{rmletters}     {OML}{\Mn@Math@Family} {m}{n}
\SetSymbolFont{operators}{bold}    {T1}{\Mn@Math@Family} {b}{n}
\SetSymbolFont{letters}  {bold}   {OML}{\Mn@Math@Family} {b}{it}
\SetSymbolFont{rmletters}{bold}   {OML}{\Mn@Math@Family} {b}{n}
\DeclareMathAlphabet\mathbf        {T1}{\Mn@Math@Family} {b}{n}
\DeclareMathAlphabet\mathit        {T1}{\Mn@Math@Family} {m}{it}
\SetMathAlphabet\mathit  {bold}    {T1}{\Mn@Math@Family} {b}{it}
%    \end{macrocode}
% Extra math versions |tabular| and |boldtabular|, which use tabular figures
% instead of proportional ones. These math versions can be useful in tables
% (cf.\ section~\ref{sec:dcolumn}).
%    \begin{macrocode}
\DeclareMathVersion{tabular}
\SetSymbolFont{operators}{tabular} {T1}{\Mn@Math@TFamily}{m}{n}
\SetSymbolFont{letters}  {tabular}{OML}{\Mn@Math@TFamily}{m}{it}
\SetSymbolFont{rmletters}{tabular}{OML}{\Mn@Math@TFamily}{m}{n}
\DeclareMathVersion{boldtabular}
\SetSymbolFont{operators}{boldtabular} {T1}{\Mn@Math@TFamily}{b}{n}
\SetSymbolFont{letters}  {boldtabular}{OML}{\Mn@Math@TFamily}{b}{it}
\SetSymbolFont{rmletters}{boldtabular}{OML}{\Mn@Math@TFamily}{b}{n}
\SetMathAlphabet\mathit  {boldtabular} {T1}{\Mn@Math@TFamily}{b}{it}
%    \end{macrocode}
%
%    \begin{macrocode}
\DeclareMathAccent{\grave}   {\mathalpha}{operators}{0}
\DeclareMathAccent{\acute}   {\mathalpha}{operators}{1}
\DeclareMathAccent{\hat}     {\mathalpha}{operators}{2}
\DeclareMathAccent{\tilde}   {\mathalpha}{operators}{3}
\DeclareMathAccent{\ddot}    {\mathalpha}{operators}{4}
\DeclareMathAccent{\mathring}{\mathalpha}{operators}{6}
\DeclareMathAccent{\check}   {\mathalpha}{operators}{7}
\DeclareMathAccent{\breve}   {\mathalpha}{operators}{8}
\DeclareMathAccent{\bar}     {\mathalpha}{operators}{9}
\DeclareMathAccent{\dot}     {\mathalpha}{operators}{10}
%    \end{macrocode}
% Execute the hooks set up above to load the various math alphabets.
%    \begin{macrocode}
\Mn@load@bb
\Mn@load@frak
\Mn@load@cal
%    \end{macrocode}
%
% \subsection{Font selection}
%
% The font selection commands such as |\figureversion|, |\textsw|, and
% |\textssc| are provided by the companion package \pkg{fontaxes}, which may be
% useful for other font families as well.
%
%    \begin{macrocode}
\RequirePackage{fontaxes}[2005/05/04]
%    \end{macrocode}
% We define an additional short hand for compatabilities sake.
%    \begin{macrocode}
\let\oldstylenums\textfigures
%    \end{macrocode}
%
% \subsection{Greek letters}
% \label{sec:greek}
%
% We provide math-mode commands for each greek letter, both italic and upright.
% Furthermore, there are three commands to select the default version of the
% letters (all upright, all italic, or capitals upright and lowercase italic).
%
% While delaring the greek letters we collect the uppercase and lowercase letters
% in two lists. (We distinguish them by the first letter of their name.)
% These lists are used to select the different versions.
%    \begin{macrocode}
\newcommand\Mn@greek@list@upper{}
\newcommand\Mn@greek@list@lower{}
\let\Mn@greek@list@upper\@gobble
\let\Mn@greek@list@lower\@gobble
%    \end{macrocode}
% This macro holds one of the two list names. 
%    \begin{macrocode}
\newcommand\Mn@greek@list{}
\newcommand*\Mn@greek@letter[2]{%
  \expandafter\DeclareMathSymbol
  \expandafter{\csname it#1\endcsname}{\mathord}{letters}{#2}%
  \expandafter\DeclareMathSymbol
  \expandafter{\csname up#1\endcsname}{\mathord}{rmletters}{#2}%
  \edef\@tempa{`\@car#1\@nil}%
  \edef\Mn@greek@list{\expandafter\noexpand\csname
    Mn@greek@list@\ifnum\uccode\@tempa=\@tempa upper\else lower\fi\endcsname}%
  \expandafter\edef\Mn@greek@list{\Mn@greek@list,#1}%
}
%    \end{macrocode}
% We can now declare the greek letters.
%    \begin{macrocode}
\Mn@greek@letter{Gamma}         {"00}
\Mn@greek@letter{Delta}         {"01}
\Mn@greek@letter{Theta}         {"02}
\Mn@greek@letter{Lambda}        {"03}
\Mn@greek@letter{Xi}            {"04}
\Mn@greek@letter{Pi}            {"05}
\Mn@greek@letter{Sigma}         {"06}
\Mn@greek@letter{Upsilon}       {"07}
\Mn@greek@letter{Phi}           {"08}
\Mn@greek@letter{Psi}           {"09}
\Mn@greek@letter{Omega}         {"0A}
\Mn@greek@letter{alpha}         {"0B}
\Mn@greek@letter{beta}          {"0C}
\Mn@greek@letter{gamma}         {"0D}
\Mn@greek@letter{delta}         {"0E}
\Mn@greek@letter{epsilon}       {"0F}
\Mn@greek@letter{zeta}          {"10}
\Mn@greek@letter{eta}           {"11}
\Mn@greek@letter{theta}         {"12}
\Mn@greek@letter{iota}          {"13}
\Mn@greek@letter{kappa}         {"14}
\Mn@greek@letter{lambda}        {"15}
\Mn@greek@letter{mu}            {"16}
\Mn@greek@letter{nu}            {"17}
\Mn@greek@letter{xi}            {"18}
\Mn@greek@letter{pi}            {"19}
\Mn@greek@letter{rho}           {"1A}
\Mn@greek@letter{sigma}         {"1B}
\Mn@greek@letter{tau}           {"1C}
\Mn@greek@letter{upsilon}       {"1D}
\Mn@greek@letter{phi}           {"1E}
\Mn@greek@letter{chi}           {"1F}
\Mn@greek@letter{psi}           {"20}
\Mn@greek@letter{omega}         {"21}
\Mn@greek@letter{varepsilon}    {"22}
\Mn@greek@letter{vartheta}      {"23}
\Mn@greek@letter{varpi}         {"24}
\Mn@greek@letter{varrho}        {"25}
\Mn@greek@letter{varsigma}      {"26}
\Mn@greek@letter{varphi}        {"27}
%    \end{macrocode}
% Some of the following symbols are not really greek letters but are treated in
% the same way.
%    \begin{macrocode}
\Mn@greek@letter{hbar}          {"81}
\Mn@greek@letter{digamma}       {"82}
\Mn@greek@letter{varkappa}      {"83}
\Mn@greek@letter{varbeta}       {"84}
\Mn@greek@letter{backepsilon}   {"85}
\Mn@greek@letter{varbackepsilon}{"86}
\Mn@greek@letter{eth}           {"87}
%    \end{macrocode}
% Go through a list of greek letters |#2| and |\let| them be their
% |#1|-prefixed variants.
%    \begin{macrocode}
\newcommand*\Mn@greek@select[2]{%
  \expandafter\let\expandafter\Mn@greek@list\csname Mn@greek@list@#2\endcsname
  \@for\@tempa:=\Mn@greek@list\do{%
    \expandafter\let\csname\@tempa\expandafter\endcsname
    \csname#1\@tempa\endcsname
  }%
}
\newcommand*\Mn@Greek@Rm{%
  \Mn@greek@select{up}{upper}%
  \Mn@greek@select{up}{lower}%
}
\newcommand*\Mn@Greek@It{%
  \Mn@greek@select{it}{upper}%
  \Mn@greek@select{it}{lower}%
}
\newcommand*\Mn@Greek@Mix{%
  \Mn@greek@select{up}{upper}%
  \Mn@greek@select{it}{lower}%
}
%    \end{macrocode}
% Finally initialize the greek letters.
%    \begin{macrocode}
\Mn@Greek@Shape
%    \end{macrocode}
%
% \subsection{Additional symbols}
%
% Some symbols missing from MnSymbol can be taken from MinionPro.
%
%    \begin{macrocode}
\DeclareMathSymbol{\varsmallint}{\mathord}{letters}{"80}
\DeclareMathSymbol{\lozenge}    {\mathord}{rmletters}{"88}
\DeclareMathSymbol{\slashedzero}{\mathord}{rmletters}{"89}
%    \end{macrocode}
%    \begin{macrocode}
\DeclareTextCommand{\textcelsius}{TS1}{\textdegree C}

\newcommand*\Mn@fraction[2]{%
  \DeclareTextSymbol       {#1}{TS1}{#2}%
  \DeclareTextSymbolDefault{#1}{TS1}%
}

\Mn@fraction{\textzeronumerator}        {192}
\Mn@fraction{\textonenumerator}         {193}
\Mn@fraction{\texttwonumerator}         {194}
\Mn@fraction{\textthreenumerator}       {195}
\Mn@fraction{\textfournumerator}        {196}
\Mn@fraction{\textfivenumerator}        {197}
\Mn@fraction{\textsixnumerator}         {198}
\Mn@fraction{\textsevennumerator}       {199}
\Mn@fraction{\texteightnumerator}       {200}
\Mn@fraction{\textninenumerator}        {201}
\Mn@fraction{\textzerodenominator}      {202}
\Mn@fraction{\textonedenominator}       {203}
\Mn@fraction{\texttwodenominator}       {204}
\Mn@fraction{\textthreedenominator}     {205}
\Mn@fraction{\textfourdenominator}      {206}
\Mn@fraction{\textfivedenominator}      {207}
\Mn@fraction{\textsixdenominator}       {208}
\Mn@fraction{\textsevendenominator}     {209}
\Mn@fraction{\texteightdenominator}     {210}
\Mn@fraction{\textninedenominator}      {211}
\Mn@fraction{\textcommanumerator}       {216}
\Mn@fraction{\textperiodnumerator}      {217}
\Mn@fraction{\textparenleftnumerator}   {218}
\Mn@fraction{\textparenrightnumerator}  {219}
\Mn@fraction{\textcommadenominator}     {220}
\Mn@fraction{\textperioddenominator}    {221}
\Mn@fraction{\textparenleftdenominator} {222}
\Mn@fraction{\textparenrightdenominator}{223}
\Mn@fraction{\textonethird}             {224}
\Mn@fraction{\texttwothirds}            {225}
\Mn@fraction{\textoneeighth}            {226}
\Mn@fraction{\textthreeeighths}         {227}
\Mn@fraction{\textfiveeighths}          {228}
\Mn@fraction{\textseveneighths}         {229}

%    \end{macrocode}
% Archaic greek letters not provided by MinionPro
%    \begin{macrocode}
%\def\Qoppa{\reflectbox{P}}
%\def\Sampi{\begingroup\fontfamily{cmr}\fontencoding{LGR}\selectfont\char23\endgroup}
\let\Stigma\stigma
\AtBeginDocument{
  \UndeclareTextCommand{\textvisiblespace}{T1}%
  \UndeclareTextCommand{\textcompwordmark}{T1}%
  \UndeclareTextCommand{\textsterling}{T1}%
  \UndeclareTextCommand{\j}{T1}%
  \UndeclareTextCommand{\j}{LY1}%
}
%    \end{macrocode}
%
% \subsection{Integral symbols}
%
% We can also replace the integral signs from MnSymbol by those of MinionPro.
% The following definitions provide this as an option.
%    \begin{macrocode}
\newcommand\Mn@Decl@Minion@Ints{%
%    \end{macrocode}
% Replace |MnSymbolF| by |MnSymbolFI|.
%    \begin{macrocode}
  \DeclareFontFamily{U}{MnSymbolFI}{}
  \DeclareFontShape{U}{MnSymbolFI}{m}{it}{
      <-6>  MnSymbolFI\Mn@minionint@opticals5
     <6-7>  MnSymbolFI\Mn@minionint@opticals6
     <7-8>  MnSymbolFI\Mn@minionint@opticals7
     <8-9>  MnSymbolFI\Mn@minionint@opticals8
     <9-10> MnSymbolFI\Mn@minionint@opticals9
    <10-12> MnSymbolFI\Mn@minionint@opticals10
    <12->   MnSymbolFI\Mn@minionint@opticals12
  }{}
  \DeclareFontShape{U}{MnSymbolFI}{b}{it}{
      <-6>  MnSymbolFI\Mn@minionint@bold\Mn@minionint@opticals5
     <6-7>  MnSymbolFI\Mn@minionint@bold\Mn@minionint@opticals6
     <7-8>  MnSymbolFI\Mn@minionint@bold\Mn@minionint@opticals7
     <8-9>  MnSymbolFI\Mn@minionint@bold\Mn@minionint@opticals8
     <9-10> MnSymbolFI\Mn@minionint@bold\Mn@minionint@opticals9
    <10-12> MnSymbolFI\Mn@minionint@bold\Mn@minionint@opticals10
    <12->   MnSymbolFI\Mn@minionint@bold\Mn@minionint@opticals12
  }{}
%    \end{macrocode}
%
%    \begin{macrocode}
  \DeclareSymbolFont{symbols}  {U}{MnSymbolFI}{m}{it}
  \SetSymbolFont{symbols}{bold}{U}{MnSymbolFI}{b}{it}
%    \end{macrocode}
% Make the original integral symbols available as |\var|\dots.
%    \begin{macrocode}
  \let\varint\tint
  \let\variint\tiint
  \let\variiint\tiiint
  \let\variiiint\tiiiint
  \let\varidotsint\tidotsint
  \let\varlandupint\tlandupint
  \let\varlanddownint\tlanddownint
  \let\varstrokedint\tstrokedint
  \let\varoint\toint
  \let\varoiint\toiint
  \let\varrcirclerightint\trcirclerightint
  \let\varlcirclerightint\tlcirclerightint
  \let\varrcircleleftint\trcircleleftint
  \let\varlcircleleftint\tlcircleleftint
  \let\varsumint\tsumint
%    \end{macrocode}
% Replace the symbols with the new integrals.
%    \begin{macrocode}
  \DeclareMathSymbol\tint            \mathop{symbols}{112}
  \DeclareMathSymbol\tiint           \mathop{symbols}{114}
  \DeclareMathSymbol\tiiint          \mathop{symbols}{116}
  \DeclareMathSymbol\tiiiint         \mathop{symbols}{118}
  \DeclareMathSymbol\tidotsint       \mathop{symbols}{120}
  \DeclareMathSymbol\tlandupint      \mathop{symbols}{122}
  \DeclareMathSymbol\tlanddownint    \mathop{symbols}{124}
  \DeclareMathSymbol\tstrokedint     \mathop{symbols}{126}
  \DeclareMathSymbol\toint           \mathop{symbols}{128}
  \DeclareMathSymbol\toiint          \mathop{symbols}{130}
  \DeclareMathSymbol\trcirclerightint\mathop{symbols}{132}
  \DeclareMathSymbol\tlcirclerightint\mathop{symbols}{134}
  \DeclareMathSymbol\trcircleleftint \mathop{symbols}{136}
  \DeclareMathSymbol\tlcircleleftint \mathop{symbols}{138}
  \DeclareMathSymbol\tsumint         \mathop{symbols}{140}
  \let\intop\tint
  \let\ointop\toint
}
%    \end{macrocode}
%
%    \begin{macrocode}
\Mn@load@integrals
%    \end{macrocode}
%
% \subsection{Logos}
%
% Correct logos.
%    \begin{macrocode}
\def\TeX{T\kern-.1667em\lower.4ex\hbox{E}\kern-.125emX\@}
\DeclareRobustCommand{\LaTeX}{L\kern-.32em%
        {\sbox\z@ T%
         \vbox to\ht\z@{\hbox{\check@mathfonts
                              \fontsize\sf@size\z@
                              \math@fontsfalse\selectfont
                              A}%
                        \vss}%
        }%
        \kern-.15em%
        \TeX}
%    \end{macrocode}
%
% \subsection{AMS}
%
% Fix a bug in \pkg{amsmath.sty} which does not support
% math fonts without a skew char.
%    \begin{macrocode}
\def\macc@set@skewchar#1{%
  \begingroup
  \ifnum\mathgroup=\m@ne \let\@tempa\@ne
  \else
    \ifnum\skewchar\textfont\mathgroup=\m@ne \let\@tempa\@ne
    \else \let\@tempa\mathgroup
    \fi
  \fi
  \count@=\skewchar\textfont\@tempa
  \ifnum\count@=\m@ne
    \endgroup
    \def\macc@skewchar{}
  \else
    \advance\count@"7100
    \edef\@tempa{\endgroup
      \mathchardef\noexpand\macc@skewchar=\number\count@\relax}%
    \@tempa
  \fi
  #1%
}
%    \end{macrocode}
% Make the changes take effect. This concludes the main style file.
%    \begin{macrocode}
\normalfont
%</style>
%    \end{macrocode}
%
% \section{Support for character protrusion}
%
% \subsection{Homebrewn code}
%
% This code is currently unused. It has been replaced by the \pkg{microtype} package.
%    \begin{macrocode}
%<*protruding>
% We allow this file to be included multiple times.
\ifx\MinionProProtrudeLoaded\undefined
\gdef\MinionProProtrudeLoaded{}
\ProvidesFile{MinionPro-Protrude}[2005/01/23 v2.0 support for margin kerning]%
%
\newcommand*\ProtrudeCommand[4]{%
  \csname Protrude@#1@#2@#3@#4@\endcsname}
\newcommand*\DefineProtrudeCommand[5]{%
  \expandafter\newcommand\expandafter*\csname Protrude@#1@#2@#3@#4@\endcsname{}%
  \expandafter\gdef\csname Protrude@#1@#2@#3@#4@\endcsname{#5}}
%
\ifx\pdfprotrudechars\undefined
%
\newcommand*\enableprotruding{}%
\newcommand*\OToneRomanProtruding{}%
\newcommand*\ToneRomanProtruding{}%
\newcommand*\OToneItalicProtruding{}%
\newcommand*\ToneItalicProtruding{}%
\newcommand*\OToneSmallcapsProtruding{}%
\newcommand*\ToneSmallcapsProtruding{}%
\newcommand*\OToneSmallcapsItalicProtruding{}%
\newcommand*\ToneSmallcapsItalicProtruding{}%
%
\else
%
\newcommand*\enableprotruding{\pdfprotrudechars=2}%
%
\newcommand*\SetProtruding[3]{%
  \lpcode\font#1=#2%
  \rpcode\font#1=#3}%
\newcommand*\inheritProtruding[2]{%
  \SetProtruding{#1}{\lpcode\font#2}{\rpcode\font#2}}%
%
\newcommand*\OToneRomanProtruding{%
  \SetProtruding{`!}{020}{050}%
  \SetProtruding{`'}{100}{150}%
  \SetProtruding{``}{150}{100}%
  \SetProtruding{`(}{020}{010}%
  \SetProtruding{`)}{010}{020}%
  \SetProtruding{`[}{035}{055}%
  \SetProtruding{`]}{055}{035}%
  \SetProtruding{`,}{100}{160}%
  \SetProtruding{`-}{250}{250}%
  \SetProtruding{`.}{150}{160}%
  \SetProtruding{`:}{090}{110}%
  \SetProtruding{`;}{080}{100}%
  \SetProtruding{13}{160}{160}% quote single base
  \SetProtruding{14}{140}{100}% guillemot single left
  \SetProtruding{15}{100}{140}% guillemot single right
  \SetProtruding{16}{150}{100}% quote double left
  \SetProtruding{17}{100}{150}% qoute double right
  \SetProtruding{18}{160}{160}% qoute double base
  \SetProtruding{19}{140}{100}% guillemot left
  \SetProtruding{20}{100}{140}% guillemot right
  \SetProtruding{21}{200}{250}% en-dash
  \SetProtruding{22}{200}{250}% em-dash
  \SetProtruding{`A}{030}{030}%
  \SetProtruding{`F}{000}{030}%
  \SetProtruding{`J}{030}{000}%
  \SetProtruding{`K}{000}{030}%
  \SetProtruding{`L}{000}{030}%
  \SetProtruding{`T}{030}{030}%
  \SetProtruding{`V}{030}{030}%
  \SetProtruding{`W}{030}{030}%
  \SetProtruding{`X}{030}{030}%
  \SetProtruding{`Y}{030}{030}%
  \SetProtruding{`k}{000}{030}%
  \SetProtruding{`r}{000}{030}%
  \SetProtruding{`t}{000}{030}%
  \SetProtruding{`v}{030}{030}%
  \SetProtruding{`w}{030}{030}%
  \SetProtruding{`x}{030}{030}%
  \SetProtruding{`y}{030}{030}}%
%
\newcommand*\ToneRomanProtruding{%
  \OToneRomanProtruding
  \SetProtruding{24}{000}{030}% ft ligature
  \SetProtruding{26}{030}{030}% Th ligature
  \SetProtruding{32}{000}{030}% fft ligature
  \SetProtruding{127}{220}{250}% hyphen
  \SetProtruding{128}{030}{030}% Abreve
  \SetProtruding{129}{030}{030}% Aogonek
  \SetProtruding{192}{030}{030}% Agrave
  \SetProtruding{193}{030}{030}% Aacute
  \SetProtruding{194}{030}{030}% Acircumflex
  \SetProtruding{195}{030}{030}% Atilde
  \SetProtruding{196}{030}{030}% Adieresis
  \SetProtruding{197}{030}{030}% Aring
  \SetProtruding{198}{030}{000}% AE
  \SetProtruding{136}{000}{030}% Lacute
  \SetProtruding{137}{000}{030}% Lcaron
  \SetProtruding{138}{000}{030}% Lslash
  \SetProtruding{148}{030}{030}% Tcaron
  \SetProtruding{152}{030}{030}% Ydieresis
  \SetProtruding{221}{030}{030}% Yacute
%  \SetProtruding{173}{000}{030}% ffk ligature
%  \SetProtruding{180}{000}{030}% fk ligature
  \SetProtruding{167}{000}{030}% racute
  \SetProtruding{168}{000}{030}% rcaron
  \SetProtruding{184}{030}{030}% ydieresis
  \SetProtruding{253}{030}{030}% yacute
}%
%
\newcommand*\OToneItalicProtruding{%
  \SetProtruding{13}{ 50}{160}% quote single base
  \SetProtruding{14}{140}{050}% guillemot single left
  \SetProtruding{15}{100}{100}% guillemot single right
  \SetProtruding{16}{200}{050}% quote double left
  \SetProtruding{17}{200}{050}% qoute double right
  \SetProtruding{18}{050}{160}% qoute double base
  \SetProtruding{19}{140}{050}% guillemot left
  \SetProtruding{20}{100}{100}% guillemot right
  \SetProtruding{21}{200}{250}% en-dash
  \SetProtruding{22}{200}{250}% em-dash
  \SetProtruding{`!}{050}{010}%
  \SetProtruding{34}{200}{050}% quote double
  \SetProtruding{`'}{100}{050}%
  \SetProtruding{``}{150}{030}%
  \SetProtruding{`(}{030}{000}%
  \SetProtruding{`)}{030}{000}%
  \SetProtruding{`[}{030}{030}%
  \SetProtruding{`]}{040}{020}%
  \SetProtruding{`,}{050}{160}%
  \SetProtruding{`-}{250}{250}%
  \SetProtruding{`.}{150}{160}%
  \SetProtruding{`:}{090}{100}%
  \SetProtruding{`;}{000}{100}%
  \SetProtruding{`A}{080}{030}%
  \SetProtruding{`B}{050}{-30}%
  \SetProtruding{`C}{030}{-40}%
  \SetProtruding{`D}{050}{-20}%
  \SetProtruding{`E}{050}{-30}%
  \SetProtruding{`F}{050}{-20}%
  \SetProtruding{`G}{030}{-40}%
  \SetProtruding{`H}{050}{-30}%
  \SetProtruding{`I}{050}{-30}%
  \SetProtruding{`J}{080}{-40}%
  \SetProtruding{`K}{050}{-30}%
  \SetProtruding{`L}{050}{030}%
  \SetProtruding{`M}{050}{-30}%
  \SetProtruding{`N}{050}{-30}%
  \SetProtruding{`O}{050}{-20}%
  \SetProtruding{`P}{040}{-60}%
  \SetProtruding{`Q}{030}{-30}%
  \SetProtruding{`R}{050}{-30}%
  \SetProtruding{`S}{030}{-30}%
  \SetProtruding{`T}{080}{000}%
  \SetProtruding{`U}{050}{-30}%
  \SetProtruding{`V}{080}{020}%
  \SetProtruding{`W}{080}{020}%
  \SetProtruding{`X}{030}{000}%
  \SetProtruding{`Y}{100}{000}%
  \SetProtruding{`Z}{030}{-30}%
  \SetProtruding{`d}{030}{-30}%
  \SetProtruding{`f}{000}{-50}%
  \SetProtruding{27}{000}{-50}% ff ligature
  \SetProtruding{`g}{-30}{-30}%
  \SetProtruding{`i}{000}{-30}%
  \SetProtruding{25}{000}{-30}% dotlessi
  \SetProtruding{28}{000}{-30}% fi ligature
  \SetProtruding{30}{000}{-30}% ffi ligature
  \SetProtruding{`j}{-25}{-40}%
  \SetProtruding{`p}{-20}{000}%
  \SetProtruding{`r}{000}{030}%
  \SetProtruding{`t}{000}{030}%
  \SetProtruding{`v}{040}{000}%
  \SetProtruding{`w}{040}{005}%
  \SetProtruding{`x}{040}{000}}%
%
\newcommand*\ToneItalicProtruding{%
  \OToneItalicProtruding
  \SetProtruding{24}{000}{030}% ft ligature
  \SetProtruding{26}{080}{030}% Th ligature
  \SetProtruding{32}{000}{030}% fft ligature
  \SetProtruding{127}{220}{250}% hyphen
  \SetProtruding{128}{080}{030}% Abreve
  \SetProtruding{129}{080}{030}% Aogonek
  \SetProtruding{192}{080}{030}% Agrave
  \SetProtruding{193}{080}{030}% Aacute
  \SetProtruding{194}{080}{030}% Acircumflex
  \SetProtruding{195}{080}{030}% Atilde
  \SetProtruding{196}{080}{030}% Adieresis
  \SetProtruding{197}{080}{030}% Aring
  \SetProtruding{198}{080}{-30}% AE
  \SetProtruding{130}{030}{-40}% Cacute
  \SetProtruding{131}{030}{-40}% Ccaron
  \SetProtruding{199}{030}{-40}% Ccedilla
  \SetProtruding{131}{050}{-20}% Dcaron
  \SetProtruding{132}{050}{-30}% Ecaron
  \SetProtruding{133}{050}{-30}% Eogonek
  \SetProtruding{200}{050}{-30}% Egrave
  \SetProtruding{201}{050}{-30}% Eacute
  \SetProtruding{202}{050}{-30}% Ecircumflex
  \SetProtruding{203}{050}{-30}% Edieresis
  \SetProtruding{135}{030}{-40}% Gbreve
  \SetProtruding{156}{050}{-40}% IJ
  \SetProtruding{157}{050}{-30}% Idotaccent
  \SetProtruding{204}{050}{-30}% Igrave
  \SetProtruding{205}{050}{-30}% Iacute
  \SetProtruding{206}{050}{-30}% Icircumflex
  \SetProtruding{207}{050}{-30}% Idieresis
  \SetProtruding{136}{050}{030}% Lacute
  \SetProtruding{137}{050}{030}% Lcaron
  \SetProtruding{138}{050}{030}% Lslash
  \SetProtruding{139}{050}{-30}% Nacute
  \SetProtruding{140}{050}{-30}% Ncaron
  \SetProtruding{209}{050}{-30}% Ntilde
  \SetProtruding{142}{050}{-20}% Ohungarumlaut
  \SetProtruding{210}{050}{-20}% Ograve
  \SetProtruding{211}{050}{-20}% Oacute
  \SetProtruding{212}{050}{-20}% Ocircumflex
  \SetProtruding{213}{050}{-20}% Otilde
  \SetProtruding{214}{050}{-20}% Odieresis
  \SetProtruding{215}{050}{-30}% OE
  \SetProtruding{216}{050}{-20}% Oslash
  \SetProtruding{143}{050}{-30}% Racute
  \SetProtruding{144}{050}{-30}% Rcaron
  \SetProtruding{145}{030}{-30}% Sacute
  \SetProtruding{146}{030}{-30}% Scaron
  \SetProtruding{147}{030}{-30}% Scedilla
  \SetProtruding{148}{080}{000}% Tcaron
  \SetProtruding{150}{050}{-30}% Uhungarumlaut
  \SetProtruding{151}{050}{-30}% Uring
  \SetProtruding{217}{050}{-30}% Ugrave
  \SetProtruding{218}{050}{-30}% Uacute
  \SetProtruding{219}{050}{-30}% Ucircumflex
  \SetProtruding{220}{050}{-30}% Udieresis
  \SetProtruding{152}{100}{000}% Ydieresis
  \SetProtruding{221}{100}{000}% Yacute
  \SetProtruding{153}{030}{-30}% Zacute
  \SetProtruding{154}{030}{-30}% Zcaron
  \SetProtruding{155}{030}{-30}% Zdotaccent
  \SetProtruding{164}{030}{-30}% dcaron
%  \SetProtruding{173}{000}{030}% ffk ligature
%  \SetProtruding{180}{000}{030}% fk ligature
  \SetProtruding{167}{-30}{-30}% gbreve
  \SetProtruding{188}{000}{-40}% ij
  \SetProtruding{236}{000}{-30}% igrave
  \SetProtruding{237}{000}{-30}% iacute
  \SetProtruding{238}{000}{-30}% icircumflex
  \SetProtruding{239}{000}{-30}% idieresis
  \SetProtruding{167}{000}{030}% racute
  \SetProtruding{168}{000}{030}% rcaron
  \SetProtruding{184}{030}{030}% ydieresis
  \SetProtruding{253}{030}{030}% yacute
}%
%
% We have no protruding values for small caps yet.
%
\newcommand*\OToneSmallcapsProtruding{}%
\newcommand*\ToneSmallcapsProtruding{}%
\newcommand*\OToneSmallcapsItalicProtruding{}%
\newcommand*\ToneSmallcapsItalicProtruding{}%
%
%\newcommand*\mathprotruding{%
%  \SetProtruding{ 0}{700}{750}% Gamma
%  \SetProtruding{ 1}{000}{000}% Delta
%  \SetProtruding{ 2}{000}{000}% Theta
%  \SetProtruding{ 3}{000}{000}% Lambda
%  \SetProtruding{ 4}{000}{000}% Xi
%  \SetProtruding{ 5}{000}{000}% Pi
%  \SetProtruding{ 6}{000}{000}% Sigma
%  \SetProtruding{ 7}{000}{000}% Upsilon
%  \SetProtruding{ 8}{000}{000}% Phi
%  \SetProtruding{ 9}{000}{000}% Psi
%  \SetProtruding{10}{000}{000}% Omega
%  \SetProtruding{11}{000}{000}% alpha
%  \SetProtruding{12}{000}{000}% beta
%  \SetProtruding{13}{000}{000}% gamma
%  \SetProtruding{14}{000}{000}% delta
%  \SetProtruding{15}{000}{000}% epsilon
%  \SetProtruding{16}{000}{000}% zeta
%  \SetProtruding{17}{000}{000}% eta
%  \SetProtruding{18}{000}{000}% theta
%  \SetProtruding{19}{000}{000}% iota
%  \SetProtruding{20}{000}{000}% kappa
%  \SetProtruding{21}{000}{000}% lambda
%  \SetProtruding{22}{000}{000}% mu
%  \SetProtruding{23}{000}{000}% nu
%  \SetProtruding{24}{000}{000}% xi
%  \SetProtruding{25}{000}{000}% pi
%  \SetProtruding{26}{000}{000}% rho
%  \SetProtruding{27}{000}{000}% sigma
%  \SetProtruding{28}{000}{000}% tau
%  \SetProtruding{29}{000}{000}% upsilon
%  \SetProtruding{30}{000}{000}% phi
%  \SetProtruding{31}{000}{000}% chi
%  \SetProtruding{32}{000}{000}% psi
%  \SetProtruding{33}{000}{000}% omega
%  \SetProtruding{34}{000}{000}% varepsilon
%  \SetProtruding{35}{000}{000}% vartheta
%  \SetProtruding{36}{000}{000}% varpi
%  \SetProtruding{37}{000}{000}% varrho
%  \SetProtruding{38}{000}{000}% varsigma
%  \SetProtruding{39}{000}{000}% varphi
%  \SetProtruding{58}{050}{160}% period
%  \SetProtruding{59}{150}{160}% comma
%  \SetProtruding{`A}{080}{030}%
%  \SetProtruding{`B}{050}{-30}%
%  \SetProtruding{`C}{030}{-40}%
%  \SetProtruding{`D}{050}{-20}%
%  \SetProtruding{`E}{050}{-30}%
%  \SetProtruding{`F}{050}{-20}%
%  \SetProtruding{`G}{030}{-40}%
%  \SetProtruding{`H}{050}{-30}%
%  \SetProtruding{`I}{050}{-30}%
%  \SetProtruding{`J}{080}{-40}%
%  \SetProtruding{`K}{050}{-30}%
%  \SetProtruding{`L}{050}{030}%
%  \SetProtruding{`M}{050}{-30}%
%  \SetProtruding{`N}{050}{-30}%
%  \SetProtruding{`O}{050}{-20}%
%  \SetProtruding{`P}{040}{-60}%
%  \SetProtruding{`Q}{030}{-30}%
%  \SetProtruding{`R}{050}{-30}%
%  \SetProtruding{`S}{030}{-30}%
%  \SetProtruding{`T}{080}{000}%
%  \SetProtruding{`U}{050}{-30}%
%  \SetProtruding{`V}{080}{020}%
%  \SetProtruding{`W}{080}{020}%
%  \SetProtruding{`X}{030}{000}%
%  \SetProtruding{`Y}{100}{000}%
%  \SetProtruding{`Z}{030}{-30}%
%  \SetProtruding{`d}{030}{-30}%
%  \SetProtruding{`f}{000}{-50}%
%  \SetProtruding{`g}{-30}{-30}%
%  \SetProtruding{`i}{000}{-30}%
%  \SetProtruding{`j}{-25}{-40}%
%  \SetProtruding{`p}{-20}{000}%
%  \SetProtruding{`r}{000}{030}%
%  \SetProtruding{`t}{000}{030}%
%  \SetProtruding{`v}{040}{000}%
%  \SetProtruding{`w}{040}{005}%
%  \SetProtruding{`x}{040}{000}}%
\fi
%
% We might be called within a group, but these commands need to be global.
%
\global\let\enableprotruding\enableprotruding
\global\let\ProtrudeCommand\ProtrudeCommand
\global\let\DefineProtrudeCommand\DefineProtrudeCommand
\global\let\SetProtruding\SetProtruding
\global\let\OToneRomanProtruding\OToneRomanProtruding
\global\let\ToneRomanProtruding\ToneRomanProtruding
\global\let\OToneItalicProtruding\OToneItalicProtruding
\global\let\ToneItalicProtruding\ToneItalicProtruding
\global\let\OToneSmallcapsProtruding\OToneSmallcapsProtruding
\global\let\ToneSmallcapsProtruding\ToneSmallcapsProtruding
\global\let\OToneSmallcapsItalicProtruding\OToneSmallcapsItalicProtruding
\global\let\ToneSmallcapsItalicProtruding\ToneSmallcapsItalicProtruding
%
\expandafter\newcommand\expandafter*\csname Mn@Encoding@OT1\endcsname{}%
\expandafter\newcommand\expandafter*\csname Mn@Encoding@T1\endcsname{}%
\expandafter\gdef\csname Mn@Encoding@OT1\endcsname{0}%
\expandafter\gdef\csname Mn@Encoding@T1\endcsname{1}%
%
\newcommand*\ChooseProtruding[3]{%
  \expandafter\ifx\csname Mn@Encoding@#1\endcsname\relax
  \else
    \ifcase\csname Mn@Encoding@#1\endcsname
      #2%
    \or #3%
    \fi
  \fi
}%
\newcommand*\RomanProtruding[1]{\ChooseProtruding{#1}\OToneRomanProtruding\ToneRomanProtruding}%
\newcommand*\ItalicProtruding[1]{\ChooseProtruding{#1}\OToneItalicProtruding\ToneItalicProtruding}%
\newcommand*\SmallcapsProtruding[1]{\ChooseProtruding{#1}\OToneSmallcapsProtruding\ToneSmallcapsProtruding}%
\newcommand*\SmallcapsItalicProtruding[1]{\ChooseProtruding{#1}\OToneSmallcapsItalicProtruding\ToneSmallcapsItalicProtruding}%
%
\global\let\ChooseProtruding\ChooseProtruding
\global\let\RomanProtruding\RomanProtruding
\global\let\ItalicProtruding\ItalicProtruding
\global\let\SmallcapsProtruding\SmallcapsProtruding
\global\let\SmallcapsItalicProtruding\SmallcapsItalicProtruding
%
\fi
%</protruding>
%    \end{macrocode}
%
% \subsection{\pkg{microtype} support}
%
% The \pkg{microtype} configuration. All four MinionPro families use the same
% file (cf.\ section~\ref{sec:fontdef}).
%    \begin{macrocode}
%<*mtcfg>
\SetProtrusion
  [ name     = MinionPro-OT1-Roman ]
  { encoding = OT1,
    family   = {MinionPro-OsF,MinionPro-LF,MinionPro-TOsF,MinionPro-TLF},
    shape    = n }
  {
      A = {40,40},
      F = {  ,60},
      J = {90,  },
      K = {  ,50},
      L = {  ,60},
      T = {50,50},
      V = {40,40},
      W = {30,30},
      X = {50,50},
      Y = {50,50},
      k = {  ,60},
      r = {  ,80},
      t = {  ,100},
      v = {70,70},
      w = {40,40},
      x = {60,60},
      y = {70,70},
      ! = {70,180},
      ( = {60,30},    ) = {30,60},
      [ = {100,160},  ] = {160,100},
    {,} = {440,700},
      . = {660,700},
      : = {400,480},
      ; = {350,440},
      - = {700,700},
    \textendash       = {390,480},  \textemdash        = {220,270},
    \textquotedblleft = {380,250},  \textquotedblright = {250,380},
    \textquoteleft    = {670,450},  \textquoteright    = {450,670},
  }
%    \end{macrocode}
%
%    \begin{macrocode}
\SetProtrusion
  [ name     = MinionPro-T1-Roman,
    load     = MinionPro-OT1-Roman ]
  { encoding = T1,
    family   = {MinionPro-OsF,MinionPro-LF,MinionPro-TOsF,MinionPro-TLF},
    shape    = n }
  {
    023 = {  ,40}, % fft ligature
    032 = {  ,50}, % ft ligature
    191 = {30,30}, % Th ligature
    127 = {620,700}, % hyphen
    \AE = {40,  }, % AE
    \quotesinglbase = {670,670},  \quotedblbase   = {370,370},
    \guilsinglleft  = {500,360},  \guilsinglright = {360,500},
    \guillemotleft  = {320,230},  \guillemotright = {230,320},
  }
%    \end{macrocode}
%
%    \begin{macrocode}
\SetProtrusion
  [ name     = MinionPro-OT1-Italic]
  { encoding = OT1,
    family   = {MinionPro-OsF,MinionPro-LF,MinionPro-TOsF,MinionPro-TLF},
    shape    = {it,sl,sw} }
  {
      A = {120,50},
      B = {90,-50},
      C = {50,-60},
      D = {70,-30},
      E = {90,-50},
      F = {100,-40},
      G = {50,-60},
      H = {70,-40},
      I = {150,-90},
      J = {250,-130},
      K = {80,-50},
      L = {90,60},
      M = {60,-40},
      N = {70,-40},
      O = {70,-30},
      P = {70,-110},
      Q = {40,-40},
      R = {80,-50},
      S = {70,-70},
      T = {130,  },
      U = {70,-40},
      V = {120,30},
      W = {90,20},
      X = {50,  },
      Y = {160,  },
      Z = {50,-50},
      d = {60,-60},
      f = {  ,-190},
    027 = {  ,-70}, % ff ligature
      g = {-70,-70},
      i = {  ,-110},
    025 = {  ,-60}, % dotlessi
    028 = {  ,-60}, % fi ligature
    030 = {  ,-30}, % ffi ligature
      j = {-90,-150},
      p = {-40,  },
      r = {  ,80},
      t = {  ,100},
      v = {90,  },
      w = {60,10},
      x = {90,  },
      ! = {190,40},
      ( = {90,  },    ) = {90,  },
      [ = {90,90},    ] = {120,60},
    {,} = {210,680},
      . = {640,680},
      : = {380,430},
      ; = {   ,430},
      - = {750,750},
    \textquoteleft    = {690,140},  \textquoteright    = {470,230},
    \textendash       = {400,500},  \textemdash        = {220,280},
    \textquotedblleft = {520,130},  \textquotedblright = {520,130},
  }
%    \end{macrocode}
%
%    \begin{macrocode}
\SetProtrusion
  [ name     = MinionPro-T1-Italic,
    load     = MinionPro-OT1-Italic ]
  { encoding = T1,
    family   = {MinionPro-OsF,MinionPro-LF,MinionPro-TOsF,MinionPro-TLF},
    shape    = {it,sl,sw} }
  {
    023 = {  ,40}, % fft ligature
    032 = {  ,50}, % ft ligature
    191 = {80,30}, % Th ligature
    127 = {660,750}, % hyphen
    \AE = {90,-40}, % AE
    131 = {80,-30}, % Dcaron
    132 = {70,-40}, % Ecaron
    156 = {80,-60}, % IJ
    \OE = {50,-30}, % OE
    188 = {  ,-80}, % ij
    184 = {70,70}, % ydieresis
    253 = {70,70}, % yacute
    \quotesinglbase = {220,700},  \quotedblbase   = {130,400},
    \guilsinglleft  = {500,180},  \guilsinglright = {350,350},
    \guillemotleft  = {310,110},  \guillemotright = {230,230},
  }
%    \end{macrocode}
%
% We have no protruding values for small caps yet. The following stubs are
% unnecessary at the moment, but they are here as a reminder.
%
%    \begin{macrocode}
\SetProtrusion
  [ name     = MinionPro-OT1-Smallcaps ]
  { encoding = OT1,
    family   = {MinionPro-OsF,MinionPro-LF,MinionPro-TOsF,MinionPro-TLF},
    shape    = {sc,ssc} }
  {}
%    \end{macrocode}
%
%    \begin{macrocode}
\SetProtrusion
  [ name     = MinionPro-T1-Smallcaps,
    load     = MinionPro-OT1-Smallcaps ]
  { encoding = T1,
    family   = {MinionPro-OsF,MinionPro-LF,MinionPro-TOsF,MinionPro-TLF},
    shape    = {sc,ssc} }
  {}
%    \end{macrocode}
%
%    \begin{macrocode}
\SetProtrusion
  [ name     = MinionPro-OT1-SmallcapsItalic ]
  { encoding = OT1,
    family   = {MinionPro-OsF,MinionPro-LF,MinionPro-TOsF,MinionPro-TLF},
    shape    = {scit,sscit} }
  {}
%    \end{macrocode}
%
%    \begin{macrocode}
\SetProtrusion
  [ name     = MinionPro-T1-SmallcapsItalic,
    load     = MinionPro-OT1-SmallcapsItalic ]
  { encoding = T1,
    family   = {MinionPro-OsF,MinionPro-LF,MinionPro-TOsF,MinionPro-TLF},
    shape    = {scit,sscit} }
  {}
%</mtcfg>
%    \end{macrocode}
%
% \section{Font definition files}
%
% Since alle the font definitions look the same we introduce macros to ease the
% configuration. These macros are stored in the file
% \file{MinionPro-FontDef.sty} which is included by every \acro{FD} file.
% Note that \file{MinionPro-FontDef.sty} will be included several times and
% that we do not know in which context the code is executed. Therefore, we have
% to define all non-private commands as globals.
%
% \subsection{The rewritten font definition package}
% \label{sec:fontdef}
%
% \makeatletter
% \newcommand*\exampleconfig[2]{%
%   \begin{quote}\ttfamily
%   \expandafter\string\csname Mn@config@#1@#2\endcsname\par
%   \expandafter\expandafter\expandafter\strip@prefix
%   \expandafter\meaning\csname Mn@config@#1@#2\endcsname\par
%   \edef\@tempa{\Mn@UseConfig{#1}{#2}}%
%   \expandafter\strip@prefix\meaning\@tempa
%   \end{quote}%
% }%
% \makeatother
%
% Since this package should be loadable in an \acro{FD} file we have to
% avoid all |\preambleonly| commands.
% Therefore, we use |\ProvidesFile| instead of |\ProvidesPackage|.
%
% We add a guard so that this file is executed only once even if it is included
% multiple times.
%    \begin{macrocode}
%<*fontdef>
\ifx\Mn@DeclareFontShape\@undefined\else\endinput\fi
%    \end{macrocode}
% We distinguish between being loaded directly or via |\usepackage| in the
% preamble by checking |\@nodocument|.
%    \begin{macrocode}
\ifx\@nodocument\relax
  \input{otfontdef.sty}
\else
  \NeedsTeXFormat{LaTeX2e}
  \RequirePackage{otfontdef}
\fi
%    \end{macrocode}
% Reset |\escapechar| (which is set to $-1$ in \acro{FD} files) to make
% |\newcommand| work. The additional group does not harm\?; we have to
% make the important commands global anyway.
%    \begin{macrocode}
\ifx\@nodocument\relax
  \begingroup\escapechar`\\
\fi
%    \end{macrocode}
% These are the default values if it is impossible to process options.
%    \begin{macrocode}
\newcommand\Mn@option@opticals{opticals}
\newcommand\Mn@option@fontset{medfamily}
\newdimen\Mn@option@normalsize
\global\Mn@option@normalsize10pt
%    \end{macrocode}
%
%    \begin{macrocode}
\ifx\@nodocument\relax\else
  \DeclareOption{slides}     {\let\Mn@option@opticals\CurrentOption}
  \DeclareOption{opticals}   {\let\Mn@option@opticals\CurrentOption}
  \DeclareOption{noopticals} {\let\Mn@option@opticals\CurrentOption}
  \DeclareOption{smallfamily}{\let\Mn@option@fontset\CurrentOption}
  \DeclareOption{medfamily}  {\let\Mn@option@fontset\CurrentOption}
  \DeclareOption{fullfamily} {\let\Mn@option@fontset\CurrentOption}
%    \end{macrocode}
% The method to determine the main font size is inspired by \pkg{microtype}'s
% implementation.
%    \begin{macrocode}
  \DeclareOption{normalsize}{%
    \begingroup
    \def\set@fontsize#1#2#3#4\@nil{%
      \@defaultunits\global\Mn@option@normalsize#2pt\relax\@nnil}%
    \normalsize\@nil
    \endgroup
  }
  \ExecuteOptions{medfamily,opticals}
  \ProcessOptions\relax
\fi
%    \end{macrocode}
% We use |\otf@makeglobal| from \pkg{otfontdef} to ``export'' the definitions
% that are needed globally.
%    \begin{macrocode}
\otf@makeglobal{Mn@option@opticals}
\otf@makeglobal{Mn@option@fontset}
%    \end{macrocode}
% 
% \subsubsection{Configuration database}
%
%    \begin{macrocode}
\newcount\Mn@config@cnt
\Mn@config@cnt=0
\newcommand\Mn@curr@config{Mn@config@\romannumeral\Mn@config@cnt}
%    \end{macrocode}
% These commands help in setting up the configuration database. They do not
% need to be global. But the config database itself has to be.
%
% |#3| is added to all instances listed in |#2| of configuration class |#1|.
% |#3| is read with \acro{NFSS} catcodes.
%    \begin{macrocode}
\newcommand\Mn@AddToConfig{%
  \begingroup
  \nfss@catcodes
  \expandafter\endgroup
  \Mn@AddToConfig@
}
\newcommand\Mn@AddToConfig@[3]{%
  \advance\Mn@config@cnt\@ne
  \@namedef{\Mn@curr@config}{#3}%
  \otf@makeglobal{\Mn@curr@config}
%<debug&show>\expandafter\show\csname\Mn@curr@config\endcsname
  \@for\Mn@tempa:=#2\do{%
    \@ifundefined{Mn@config@#1@\Mn@tempa}{%
      \@temptokena{}%
    }{%
      \@temptokena\expandafter\expandafter\expandafter
        {\csname Mn@config@#1@\Mn@tempa\endcsname}%
    }%
    \@expandtwoargs\@namedef{Mn@config@#1@\Mn@tempa}{%
      \the\@temptokena
      \expandafter\noexpand\csname\Mn@curr@config\endcsname
    }%
    \otf@makeglobal{Mn@config@#1@\Mn@tempa}% perhaps defer to only execute once
%<debug&show>\expandafter\show\csname Mn@config@#1@\Mn@tempa\endcsname
  }%
}
%    \end{macrocode}
% Let us look at an example how the configuration database looks internally for
% $(|shape|, |sw|)$, which is specified below in three steps. The following
% lines show different depths of expansion of the macro |\Mn@config@shape@sw|,
% which finally yields the complete configuration\?:
% \exampleconfig{shape}{sw}
% 
% The following commands are used in the |Declare...Family| commands to access
% the previously built configuration database. They must be expandable. |#3| is
% used as a default if no entry is found in the database.
%    \begin{macrocode}
\newcommand\Mn@UseConfig[2]{%
  \Mn@UseConfigOrDefault{#1}{#2}{}%
}
\newcommand\Mn@UseConfigOrDefault[3]{%
  \@ifundefined{Mn@config@#1@#2}{#3}%
    {\@nameuse{Mn@config@#1@#2}}%
}
\otf@makeglobal{Mn@UseConfig}
\otf@makeglobal{Mn@UseConfigOrDefault}
%    \end{macrocode}
% Here comes the configuration.
%    \begin{macrocode}
\Mn@AddToConfig{opticals}{opticals}{
      <-8.5>  otf* [optical=Capt]
   <8.5-13.1> otf* [optical=Text]
  <13.1-20>   otf* [optical=Subh]
    <20->     otf* [optical=Disp]
}
\Mn@AddToConfig{opticals}{noopticals}{
      <->     otf* [optical=Text]
}
\Mn@AddToConfig{opticals}{slides}{
      <->     otf* [optical=Capt]
}
%    \end{macrocode}
%
%    \begin{macrocode}
\ifdim\Mn@option@normalsize<10.1pt
  \Mn@AddToConfig{fontset/weight}{fullfamily/m}{
        <-6>    otf* [weight=Semibold]
       <6-8.5>  otf* [weight=Medium]
     <8.5->     otf* [weight=Regular]
  }
\else
  \Mn@AddToConfig{fontset/weight}{fullfamily/m}{
        <-6>    otf* [weight=Semibold]
       <6-10.1> otf* [weight=Medium]
    <10.1->     otf* [weight=Regular]
  }
\fi
\Mn@AddToConfig{fontset/weight}{medfamily/m}{
      <-6>    otf* [weight=Semibold]
     <6->     otf* [weight=Regular]
}
\Mn@AddToConfig{fontset/weight}{smallfamily/m}{
      <->     otf* [weight=Regular]
}
%
\Mn@AddToConfig{fontset/weight}{fullfamily/sb,medfamily/sb}{
      <-6>    otf* [weight=Bold]
     <6->     otf* [weight=Semibold]
}
\Mn@AddToConfig{fontset/weight}{smallfamily/sb}{
      <->     otf* [weight=Bold]
}
%
\Mn@AddToConfig{weight}{b}{
      <->     otf* [weight=Bold]
}
%    \end{macrocode}
%
%    \begin{macrocode}
\Mn@AddToConfig{shape}{ssc,sscit}{
      <->     otf* [spacing=l2]
}
\Mn@AddToConfig{shape}{n,it,sw,sc,scit}{
      <-8>    otf* [spacing=l1]
}
%
\Mn@AddToConfig{shape}{sc,ssc,scit,sscit}{
      <->     otf* [variant=sc]
}
\Mn@AddToConfig{shape}{sw}{
      <->     otf* [variant=swash]
}
%    \end{macrocode}
%
%    \begin{macrocode}
\Mn@AddToConfig{shape}{it,scit,sscit,sw}{
      <->     otf* MinionPro-It
}
\Mn@AddToConfig{shape}{n,sc,ssc}{
      <->     otf* MinionPro
}
%    \end{macrocode}
%    
%    \begin{macrocode}
\Mn@AddToConfig{series-sub}{bx}{b}
\Mn@AddToConfig{shape-sub}{sl}{it}
\Mn@AddToConfig{shape-sub}{scsl}{scit}
\Mn@AddToConfig{shape-sub}{sscsl}{sscit}
\Mn@AddToConfig{shape-sub}{scsw}{scit}
\Mn@AddToConfig{shape-sub}{sscsw}{sscit}
%    \end{macrocode}
% 
% \subsubsection{Declaration of font families and shapes}
%
%    \begin{macrocode}
\newcommand\Mn@DeclareFontShape[6][]{%
  \edef\@tempa{%
    \Mn@UseConfig{series-sub}{#4}\Mn@UseConfig{shape-sub}{#5}}%
  \ifx\@tempa\@empty
    \DeclareFontShape{#2}{#3-#6}{#4}{#5}{%
      \Mn@UseConfig{opticals}      {\Mn@option@opticals}%
      \Mn@UseConfig{fontset/weight}{\Mn@option@fontset/#4}%
      \Mn@UseConfig{weight}        {#4}%
      \Mn@UseConfig{shape}         {#5}%
    }{}%
  \else
    \DeclareFontShape{#2}{#3-#6}{#4}{#5}{%
      <->ssub*#3-#6%
      /\Mn@UseConfigOrDefault{series-sub}{#4}{#4}%
      /\Mn@UseConfigOrDefault{shape-sub}{#5}{#5}%
    }{}%
  \fi
}
\otf@makeglobal{Mn@DeclareFontShape}
\otf@makeglobal{\string\Mn@DeclareFontShape}
%    \end{macrocode}
% |#2| contains the encoding, |#3| the family, and |#1| a list of figure
% versions (or |Ornament|).
%    \begin{macrocode}
\newcommand*\Mn@DeclareLargeFontFamily[3][LF,OsF,TLF,TOsF]{%
  \Mn@DeclareFontFamily{#1}{#2}{#3}
    {m,sb,b,bx} {n,it,sc,ssc,scit,sscit,sw,scsl,scsw,sscsl,sscsw,sl}%
}
\newcommand*\Mn@DeclareSmallFontFamily[3][LF,OsF,TLF,TOsF]{%
  \Mn@DeclareFontFamily{#1}{#2}{#3}
    {m,sb,b,bx} {n,it,sl}%
}
\newcommand*\Mn@DeclareMathFontFamily[3][LF,OsF,TLF,TOsF]{%
  \Mn@DeclareFontFamily{#1}{#2}{#3}
    {m,sb,b,bx} {n,it,sc,scit,scsl,scsw,sl}%
}
%    \end{macrocode}
% An additional macro |\\foo| is generated by |\newcommand| for processing an
% optional argument of |\foo|.
%    \begin{macrocode}
\otf@makeglobal{Mn@DeclareLargeFontFamily}
\otf@makeglobal{\string\Mn@DeclareLargeFontFamily}
\otf@makeglobal{Mn@DeclareSmallFontFamily}
\otf@makeglobal{\string\Mn@DeclareSmallFontFamily}
\otf@makeglobal{Mn@DeclareMathFontFamily}
\otf@makeglobal{\string\Mn@DeclareMathFontFamily}
%    \end{macrocode}
%
%    \begin{macrocode}
\newcommand*\Mn@DeclareFontFamily[5]{%
  \@for\Mn@variant:=#1\do{%
    \DeclareFontFamily {#2}{#3-\Mn@variant}{}%
  }%
  \Mn@DeclareFontShapes{#2}{#3}
    {#4} {#5} {#1}%
}
\otf@makeglobal{Mn@DeclareFontFamily}
%    \end{macrocode}
%
%    \begin{macrocode}
\newcommand*\Mn@DeclareFontShapes[5]{%
  \@for\Mn@series:=#3\do{%
    \@for\Mn@shape:=#4\do{%
      \@for\Mn@variant:=#5\do{%
	\Mn@DeclareFontShape{#1}{#2}{\Mn@series}{\Mn@shape}{\Mn@variant}%
      }%
    }%
  }%
}
\otf@makeglobal{Mn@DeclareFontShapes}
%    \end{macrocode}
%
%    \begin{macrocode}
\ifx\@nodocument\relax
  \endgroup
\fi
%    \end{macrocode}
%    \begin{macrocode}
%<*debug>
\newcommand\old@DeclareFontFamily{}
\let\old@DeclareFontFamily\DeclareFontFamily
\renewcommand\DeclareFontFamily[3]{
  \begingroup\escapechar`\\%
  \edef\@tempa{\noexpand\DeclareFontFamily{#1}{#2}}%
  \@temptokena\expandafter{\@tempa{#3}}%
  \message{\the\@temptokena}%
  \endgroup
  \old@DeclareFontFamily{#1}{#2}{#3}%
}
\newcommand\old@DeclareFontShape{}
\let\old@DeclareFontShape\DeclareFontShape
\renewcommand\DeclareFontShape[6]{
  \begingroup\escapechar`\\%
  \edef\@tempa{\noexpand\DeclareFontShape{#1}{#2}{#3}{#4}{#5}}%
  \@temptokena\expandafter{\@tempa{#6}}%
  \message{\the\@temptokena}%
  \endgroup
  \old@DeclareFontShape{#1}{#2}{#3}{#4}{#5}{#6}%
}
%</debug>
%    \end{macrocode}
%
% We define font family aliases so that we can place all configurations for
% the MinionPro family variants into one \pkg{microtype} file\?:
% \file{mt-MinionPro.cfg}. We use \pkg{microtype}'s hook if \pkg{microtype}
% has not been loaded yet (which it should not have been)\?; otherwise we can
% execute the alias definitions directly.
%    \begin{macrocode}
\gdef\Mn@MicroType@Aliases{%
  \DeclareMicroTypeAlias{MinionPro-LF}{MinionPro}%
  \DeclareMicroTypeAlias{MinionPro-OsF}{MinionPro}%
  \DeclareMicroTypeAlias{MinionPro-TLF}{MinionPro}%
  \DeclareMicroTypeAlias{MinionPro-TOsF}{MinionPro}%
}
\@ifundefined{MicroType@Hook}{%
  \global\let\MicroType@Hook\Mn@MicroType@Aliases
}{%
  \g@addto@macro\MicroType@Hook{\Mn@MicroType@Aliases}%
}%
\@ifundefined{DeclareMicroTypeAlias}{}{\Mn@MicroType@Aliases}%
%</fontdef>
%    \end{macrocode}
%
% \subsection{The old font definition package}
%
% This is the old \pkg{MinionPro-FontDef} package. This code will go away eventually.
%
% We allow this file to be included multiple times.
%    \begin{macrocode}
%<*oldfontdef>
\ifx\Mn@DeclareFont\undefined\else\endinput\fi
%
%\input{MinionPro-Protrude.sty}%
%    \end{macrocode}
% The following definitions are temporary\?; they are only needed to construct
% the global font definition macros.
%
% Reset the escapechar so that newcommand does not break.
%    \begin{macrocode}
\begingroup
\escapechar`\\%
\newcommand*\Mn@DeclareFont[7]{
    <-6>    MinionPro-#1-#6
   <6-8>    MinionPro-#2-#6
   <8-8.5>  MinionPro-#2-#7
 <8.5-13.1> MinionPro-#3-#7
<13.1-20>   MinionPro-#4-#7
  <20->     MinionPro-#5-#7
}%
%    \end{macrocode}
% The font declaration commands must be global.
%    \begin{macrocode}
\newcommand*\Mn@DefineFontDeclarationCommand[6]{%
  \gdef#1##1##2##3##4##5##6##7{%
    \DeclareFontShape{##1}{##2}{##3}{##4}{%
      \Mn@DeclareFont{#2}{#3}{#4}{#5}{#6}{##5}{##6}%
       }{##7}%
  }%
}%
%    \end{macrocode}
% The names of the fonts follow a simple pattern -- with a single exception\?:
% If weight, shape and optical size are all empty (regular), |Regular| is
% used instead of their empty concatenation.
%    \begin{macrocode}
\newcommand*\Mn@FontSuffix[1]{%
  \if!#1!Regular\else #1\fi
}
%    \end{macrocode}
% Some parts of the configuration only take effect if the chosen option
% |#1| matches the configuration's restriction |#2|, that is, if they
% are equal or if there is no restriction.
%    \begin{macrocode}
\newcommand*\Mn@ifmatch[2]{%
  \begingroup
  \edef\@tempa{#1}%
  \edef\@tempb{#2}%
  \@tempswafalse
  \ifx\@tempa\@tempb\@tempswatrue
  \else\ifx\@tempb\@empty\@tempswatrue
  \fi\fi
  \expandafter\endgroup
  \if@tempswa
    \expandafter\@firstoftwo
  \else
    \expandafter\@secondoftwo
  \fi
}
%    \end{macrocode}
% Store the optical size suffixes in order to append them to a font name
% later.
%    \begin{macrocode}
\newcommand*\Mn@AppendOpticals[5]{}
\newcommand*\Mn@SetOpticals[6][]{%
  \Mn@ifmatch\Mn@OpticalsSwitch{#1}{%
    \def\Mn@AppendOpticals##1##2##3##4##5{%
      {\Mn@FontSuffix{##1#2}}%
      {\Mn@FontSuffix{##2#3}}%
      {\Mn@FontSuffix{##3#4}}%
      {\Mn@FontSuffix{##4#5}}%
      {\Mn@FontSuffix{##5#6}}%
    }%
  }\relax
}
%    \end{macrocode}
% Another exception occurs in building the names of italic shapes.
%    \begin{macrocode}
\newcommand*\Mn@Italic[1]{%
  \@ifundefined{Mn@Italic@#1}{#1Italic}{\@nameuse{Mn@Italic@#1}}%
}
\newcommand*\Mn@Italic@Regular{Italic}
%    \end{macrocode}
% Define font declaration commands for regular and italic shape. The optical
% sizes must have been declared in advance.
%    \begin{macrocode}
\newcommand*\Mn@SetWeights[7][]{%
  \Mn@ifmatch\Mn@FamilySwitch{#1}{%
    \edef\Mn@args{\Mn@AppendOpticals{#3}{#4}{#5}{#6}{#7}}%
    \expandafter\Mn@DefineFontDeclarationCommand
    \csname Mn@DeclareFont@#2\expandafter\endcsname\Mn@args
    \edef\Mn@args{\Mn@AppendOpticals{#3It}{#4It}{#5It}{#6It}{#7It}}%
    \expandafter\Mn@DefineFontDeclarationCommand
    \csname Mn@DeclareFont@\Mn@Italic{#2}\expandafter\endcsname\Mn@args
  }\relax
}
%    \end{macrocode}
% Just in case \dots
%    \begin{macrocode}
\newcommand*\Mn@SetException[8]{%
  \Mn@ifmatch\Mn@OpticalsSwitch{#1}{%
    \Mn@ifmatch\Mn@FamilySwitch{#2}{%
      \expandafter\Mn@DefineFontDeclarationCommand
      \csname Mn@DeclareFont@#3\endcsname{#4}{#5}{#6}{#7}{#8}%
    }\relax
  }\relax
}
%    \end{macrocode}
% These main macros put together a configuration for a complete family.
%    \begin{macrocode}
\newcommand*\Mn@DeclareLargeFontFamily[4]{%
  \DeclareFontFamily{#1}{#2}{}%
%
%  \DefineProtrudeCommand{#1}{#2}{m}{n}     {\RomanProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{m}{it}    {\ItalicProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{m}{sc}    {\SmallcapsProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{m}{ssc}   {\SmallcapsProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{m}{scit}  {\SmallcapsItalicProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{m}{sscit} {\SmallcapsItalicProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{m}{sw}    {\ItalicProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{sb}{n}    {\RomanProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{sb}{it}   {\ItalicProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{sb}{sc}   {\SmallcapsProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{sb}{ssc}  {\SmallcapsProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{sb}{scit} {\SmallcapsItalicProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{sb}{sscit}{\SmallcapsItalicProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{sb}{sw}   {\ItalicProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{b}{n}     {\RomanProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{b}{it}    {\ItalicProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{b}{sc}    {\SmallcapsProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{b}{ssc}   {\SmallcapsProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{b}{scit}  {\SmallcapsItalicProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{b}{sscit} {\SmallcapsItalicProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{b}{sw}    {\ItalicProtruding{#1}}%
%
  \Mn@DeclareFont@Regular       {#1}{#2}{m}{n}     {#3-l1-#4}      {#3-#4}        {}%
  \Mn@DeclareFont@Italic        {#1}{#2}{m}{it}    {#3-l1-#4}      {#3-#4}        {}%
  \Mn@DeclareFont@Regular       {#1}{#2}{m}{sc}    {#3-sc-l1-#4}   {#3-sc-#4}     {}%
  \Mn@DeclareFont@Regular       {#1}{#2}{m}{ssc}   {#3-sc-l2-#4}   {#3-sc-l2-#4}  {}%
  \Mn@DeclareFont@Italic        {#1}{#2}{m}{scit}  {#3-sc-l1-#4}   {#3-sc-#4}     {}%
  \Mn@DeclareFont@Italic        {#1}{#2}{m}{sscit} {#3-sc-l2-#4}   {#3-sc-l2-#4}  {}%
  \Mn@DeclareFont@Italic        {#1}{#2}{m}{sw}    {#3-swash-l1-#4}{#3-swash-#4}  {}%
  \Mn@DeclareFont@Semibold      {#1}{#2}{sb}{n}    {#3-l1-#4}      {#3-#4}        {}%
  \Mn@DeclareFont@SemiboldItalic{#1}{#2}{sb}{it}   {#3-l1-#4}      {#3-#4}        {}%
  \Mn@DeclareFont@Semibold      {#1}{#2}{sb}{sc}   {#3-sc-l1-#4}   {#3-sc-#4}     {}%
  \Mn@DeclareFont@Semibold      {#1}{#2}{sb}{ssc}  {#3-sc-l2-#4}   {#3-sc-l2-#4}  {}%
  \Mn@DeclareFont@SemiboldItalic{#1}{#2}{sb}{scit} {#3-sc-l1-#4}   {#3-sc-#4}     {}%
  \Mn@DeclareFont@SemiboldItalic{#1}{#2}{sb}{sscit}{#3-sc-l2-#4}   {#3-sc-l2-#4}  {}%
  \Mn@DeclareFont@SemiboldItalic{#1}{#2}{sb}{sw}   {#3-swash-l1-#4}{#3-swash-#4}  {}%
  \Mn@DeclareFont@Bold          {#1}{#2}{b}{n}     {#3-l1-#4}      {#3-#4}        {}%
  \Mn@DeclareFont@BoldItalic    {#1}{#2}{b}{it}    {#3-l1-#4}      {#3-#4}        {}%
  \Mn@DeclareFont@Bold          {#1}{#2}{b}{sc}    {#3-sc-l1-#4}   {#3-sc-#4}     {}%
  \Mn@DeclareFont@Bold          {#1}{#2}{b}{ssc}   {#3-sc-l2-#4}   {#3-sc-l2-#4}  {}%
  \Mn@DeclareFont@BoldItalic    {#1}{#2}{b}{scit}  {#3-sc-l1-#4}   {#3-sc-#4}     {}%
  \Mn@DeclareFont@BoldItalic    {#1}{#2}{b}{sscit} {#3-sc-l2-#4}   {#3-sc-l2-#4}  {}%
  \Mn@DeclareFont@BoldItalic    {#1}{#2}{b}{sw}    {#3-swash-l1-#4}{#3-swash-#4}  {}%
%
  \DeclareFontShape{#1}{#2}{bx}{n}{<->ssub*#2/b/n}{}%
  \DeclareFontShape{#1}{#2}{bx}{it}{<->ssub*#2/b/it}{}%
  \DeclareFontShape{#1}{#2}{m}{sl}{<->ssub*#2/m/it}{}%
  \DeclareFontShape{#1}{#2}{sb}{sl}{<->ssub*#2/sb/it}{}%
  \DeclareFontShape{#1}{#2}{b}{sl}{<->ssub*#2/b/it}{}%
  \DeclareFontShape{#1}{#2}{bx}{sl}{<->ssub*#2/b/it}{}%
}%
\newcommand*\Mn@DeclareSmallFontFamily[4]{%
  \DeclareFontFamily{#1}{#2}{}%
%
%  \DefineProtrudeCommand{#1}{#2}{m}{n}  {\RomanProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{m}{it} {\ItalicProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{sb}{n} {\RomanProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{sb}{it}{\ItalicProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{b}{n}  {\RomanProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{b}{it} {\ItalicProtruding{#1}}%
%
  \Mn@DeclareFont@Regular       {#1}{#2}{m}{n}  {#3-l1-#4}{#3-#4} {}%
  \Mn@DeclareFont@Italic        {#1}{#2}{m}{it} {#3-l1-#4}{#3-#4} {}%
  \Mn@DeclareFont@Semibold      {#1}{#2}{sb}{n} {#3-l1-#4}{#3-#4} {}%
  \Mn@DeclareFont@SemiboldItalic{#1}{#2}{sb}{it}{#3-l1-#4}{#3-#4} {}%
  \Mn@DeclareFont@Bold          {#1}{#2}{b}{n}  {#3-l1-#4}{#3-#4} {}%
  \Mn@DeclareFont@BoldItalic    {#1}{#2}{b}{it} {#3-l1-#4}{#3-#4} {}%
%
  \DeclareFontShape{#1}{#2}{bx}{n}{<->ssub*#2/b/n}{}%
  \DeclareFontShape{#1}{#2}{bx}{it}{<->ssub*#2/b/it}{}%
  \DeclareFontShape{#1}{#2}{m}{sl}{<->ssub*#2/m/it}{}%
  \DeclareFontShape{#1}{#2}{sb}{sl}{<->ssub*#2/sb/it}{}%
  \DeclareFontShape{#1}{#2}{b}{sl}{<->ssub*#2/b/it}{}%
  \DeclareFontShape{#1}{#2}{bx}{sl}{<->ssub*#2/b/it}{}%
}%
\newcommand*\Mn@DeclareMathFontFamily[4]{%
  \DeclareFontFamily{#1}{#2}{\skewchar\font=255}%
%
%  \DefineProtrudeCommand{#1}{#2}{m}{n}    {\RomanProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{m}{it}   {\ItalicProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{m}{sc}   {\SmallcapsProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{m}{scit} {\SmallcapsItalicProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{sb}{n}   {\RomanProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{sb}{it}  {\ItalicProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{sb}{sc}  {\SmallcapsProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{sb}{scit}{\SmallcapsItalicProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{b}{n}    {\RomanProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{b}{it}   {\ItalicProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{b}{sc}   {\SmallcapsProtruding{#1}}%
%  \DefineProtrudeCommand{#1}{#2}{b}{scit} {\SmallcapsItalicProtruding{#1}}%
%
  \Mn@DeclareFont@Regular       {#1}{#2}{m}{n}    {#3-l1-#4}   {#3-l1-#4}   {}%
  \Mn@DeclareFont@Italic        {#1}{#2}{m}{it}   {#3-l1-#4}   {#3-l1-#4}   {}%
  \Mn@DeclareFont@Regular       {#1}{#2}{m}{sc}   {#3-sc-l1-#4}{#3-sc-l1-#4}{}%
  \Mn@DeclareFont@Italic        {#1}{#2}{m}{scit} {#3-sc-l1-#4}{#3-sc-l1-#4}{}%
  \Mn@DeclareFont@Semibold      {#1}{#2}{sb}{n}   {#3-l1-#4}   {#3-l1-#4}   {}%
  \Mn@DeclareFont@SemiboldItalic{#1}{#2}{sb}{it}  {#3-l1-#4}   {#3-l1-#4}   {}%
  \Mn@DeclareFont@Semibold      {#1}{#2}{sb}{sc}  {#3-sc-l1-#4}{#3-sc-l1-#4}{}%
  \Mn@DeclareFont@SemiboldItalic{#1}{#2}{sb}{scit}{#3-sc-l1-#4}{#3-sc-l1-#4}{}%
  \Mn@DeclareFont@Bold          {#1}{#2}{b}{n}    {#3-l1-#4}   {#3-l1-#4}   {}%
  \Mn@DeclareFont@BoldItalic    {#1}{#2}{b}{it}   {#3-l1-#4}   {#3-l1-#4}   {}%
  \Mn@DeclareFont@Bold          {#1}{#2}{b}{sc}   {#3-sc-l1-#4}{#3-sc-l1-#4}{}%
  \Mn@DeclareFont@BoldItalic    {#1}{#2}{b}{scit} {#3-sc-l1-#4}{#3-sc-l1-#4}{}%
%
  \DeclareFontShape{#1}{#2}{bx}{n}{<->ssub*#2/b/n}{}%
  \DeclareFontShape{#1}{#2}{bx}{it}{<->ssub*#2/b/it}{}%
  \DeclareFontShape{#1}{#2}{m}{sl}{<->ssub*#2/m/it}{}%
  \DeclareFontShape{#1}{#2}{sb}{sl}{<->ssub*#2/sb/it}{}%
  \DeclareFontShape{#1}{#2}{b}{sl}{<->ssub*#2/b/it}{}%
  \DeclareFontShape{#1}{#2}{bx}{sl}{<->ssub*#2/b/it}{}%
}%
%    \end{macrocode}
% All font declaration commands are needed later but only need to be defined
% once\?; therefore we make them global.
%    \begin{macrocode}
\global\let\Mn@DeclareLargeFontFamily\Mn@DeclareLargeFontFamily
\global\let\Mn@DeclareSmallFontFamily\Mn@DeclareSmallFontFamily
\global\let\Mn@DeclareMathFontFamily\Mn@DeclareMathFontFamily
\global\let\Mn@DeclareFont\Mn@DeclareFont
%    \end{macrocode}
% Now we can configure the actual weights and optical sizes that are used at
% different font sizes. This mapping must adapt to the available fonts.
%
% Later declarations override earlier (generic) ones.
% We use |\providecommand| to allow the experienced user to supply a different
% configuration in advance.
%    \begin{macrocode}
\providecommand*\Mn@FontDefinitions{
  \Mn@SetOpticals[opticals]      {Capt}    {Capt}  {}      {Subh}  {Disp}
  \Mn@SetOpticals[noopticals]    {}        {}      {}      {}      {}
  \Mn@SetOpticals[slides]        {Capt}    {Capt}  {Capt}  {Capt}  {Capt}

  \Mn@SetWeights[full] {Regular} {Semibold}{Medium}{}      {}      {}
  \Mn@SetWeights[med]  {Regular} {Semibold}{}      {}      {}      {}
  \Mn@SetWeights[small]{Regular} {}        {}      {}      {}      {}

  \Mn@SetWeights       {Semibold}{Bold}{Semibold}{Semibold}{Semibold}{Semibold}
  \Mn@SetWeights[small]{Semibold}{Bold}    {Bold}  {Bold}  {Bold}  {Bold}

  \Mn@SetWeights       {Bold}    {Bold}    {Bold}  {Bold}  {Bold}  {Bold}
%    \end{macrocode}
% This is how an exception could look like for |BoldItalic| when the |small|
% family is used with optical sizes for |slides|.
%    \begin{macrocode}
% \Mn@SetException{slides}{small}{BoldItalic}
%                             {a}       {b}       {c}       {d}       {e}
}
%    \end{macrocode}
% If we are called in the preamble we provide package options.
% Otherwise, the following defaults are used.
%    \begin{macrocode}
\providecommand*\Mn@OpticalsSwitch{opticals}%
\providecommand*\Mn@FamilySwitch{med}%

\ifx\@nodocument\relax\else
  \DeclareOption{slides}{\renewcommand*\Mn@OpticalsSwitch{slides}}%
  \DeclareOption{opticals}{\renewcommand*\Mn@OpticalsSwitch{opticals}}%
  \DeclareOption{noopticals}{\renewcommand*\Mn@OpticalsSwitch{noopticals}}%
  \DeclareOption{smallfamily}{\renewcommand*\Mn@FamilySwitch{small}}%
  \DeclareOption{medfamily}{\renewcommand*\Mn@FamilySwitch{med}}%
  \DeclareOption{fullfamily}{\renewcommand*\Mn@FamilySwitch{full}}%
  %
  \ProcessOptions
\fi
%    \end{macrocode}
% Generate the font definition macros from the configuration.
%    \begin{macrocode}
\Mn@FontDefinitions
%    \end{macrocode}
%
% We define font family aliases so that we can place all configurations for
% the MinionPro family variants into one \pkg{microtype} file\?:
% \file{mt-MinionPro.cfg}. We use \pkg{microtype}'s hook if \pkg{microtype}
% has not been loaded yet (which it should not have been)\?; otherwise we can
% execute the alias definitions directly.
%    \begin{macrocode}
\gdef\Mn@MicroType@Aliases{%
  \DeclareMicroTypeAlias{MinionPro-LF}{MinionPro}%
  \DeclareMicroTypeAlias{MinionPro-OsF}{MinionPro}%
  \DeclareMicroTypeAlias{MinionPro-TLF}{MinionPro}%
  \DeclareMicroTypeAlias{MinionPro-TOsF}{MinionPro}%
}
\@ifundefined{MicroType@Hook}{%
  \global\let\MicroType@Hook\Mn@MicroType@Aliases
}{%
  \g@addto@macro\MicroType@Hook{\Mn@MicroType@Aliases}%
}%
\@ifundefined{DeclareMicroTypeAlias}{}{\Mn@MicroType@Aliases}%
%\endgroup
%</oldfontdef>
%    \end{macrocode}
%
% Using these macros the various \acro{FD} files become simple one-liners.
%
%    \begin{macrocode}
%<*fd>
\input{MinionPro-FontDef.sty}%
%<Uorn> \Mn@DeclareSmallFontFamily[Ornaments]{U}{MinionPro}
%<LGR>  \Mn@DeclareSmallFontFamily{LGR}{MinionPro}
%<OML>  \Mn@DeclareMathFontFamily{OML}{MinionPro}
%<OT1>  \Mn@DeclareLargeFontFamily{OT1}{MinionPro}
%<T1>   \Mn@DeclareLargeFontFamily{T1}{MinionPro}
%<LY1>  \Mn@DeclareLargeFontFamily{LY1}{MinionPro}
%<T5>   \Mn@DeclareLargeFontFamily{T5}{MinionPro}
%<T2A>  \Mn@DeclareSmallFontFamily{T2A}{MinionPro}
%<T2B>  \Mn@DeclareSmallFontFamily{T2B}{MinionPro}
%<T2C>  \Mn@DeclareSmallFontFamily{T2C}{MinionPro}
%<TS1>  \Mn@DeclareLargeFontFamily{TS1}{MinionPro}
%<X2>   \Mn@DeclareSmallFontFamily{X2}{MinionPro}
%<OT2>  \Mn@DeclareSmallFontFamily{OT2}{MinionPro}
%</fd>
%<*oldfd>
\input{MinionPro-FontDef.sty}%
%<LGR&lf>  \Mn@DeclareSmallFontFamily{LGR}{MinionPro-LF}{lf}{lgr}
%<LGR&osf> \Mn@DeclareSmallFontFamily{LGR}{MinionPro-OsF}{osf}{lgr}
%<LGR&tlf> \Mn@DeclareSmallFontFamily{LGR}{MinionPro-TLF}{tlf}{lgr}
%<LGR&tosf>\Mn@DeclareSmallFontFamily{LGR}{MinionPro-TOsF}{tosf}{lgr}
%<OML&lf>  \Mn@DeclareMathFontFamily{OML}{MinionPro-LF}{lf}{oml}
%<OML&osf> \Mn@DeclareMathFontFamily{OML}{MinionPro-OsF}{osf}{oml}
%<OML&tlf> \Mn@DeclareMathFontFamily{OML}{MinionPro-TLF}{tlf}{oml}
%<OML&tosf>\Mn@DeclareMathFontFamily{OML}{MinionPro-TOsF}{tosf}{oml}
%<OT1&lf>  \Mn@DeclareLargeFontFamily{OT1}{MinionPro-LF}{lf}{ot1}
%<OT1&osf> \Mn@DeclareLargeFontFamily{OT1}{MinionPro-OsF}{osf}{ot1}
%<OT1&tlf> \Mn@DeclareLargeFontFamily{OT1}{MinionPro-TLF}{tlf}{ot1}
%<OT1&tosf>\Mn@DeclareLargeFontFamily{OT1}{MinionPro-TOsF}{tosf}{ot1}
%<T1&lf>   \Mn@DeclareLargeFontFamily{T1}{MinionPro-LF}{lf}{t1}
%<T1&osf>  \Mn@DeclareLargeFontFamily{T1}{MinionPro-OsF}{osf}{t1}
%<T1&tlf>  \Mn@DeclareLargeFontFamily{T1}{MinionPro-TLF}{tlf}{t1}
%<T1&tosf> \Mn@DeclareLargeFontFamily{T1}{MinionPro-TOsF}{tosf}{t1}
%<LY1&lf>  \Mn@DeclareLargeFontFamily{LY1}{MinionPro-LF}{lf}{ly1}
%<LY1&osf> \Mn@DeclareLargeFontFamily{LY1}{MinionPro-OsF}{osf}{ly1}
%<LY1&tlf> \Mn@DeclareLargeFontFamily{LY1}{MinionPro-TLF}{tlf}{ly1}
%<LY1&tosf>\Mn@DeclareLargeFontFamily{LY1}{MinionPro-TOsF}{tosf}{ly1}
%<T5&lf>   \Mn@DeclareLargeFontFamily{T5}{MinionPro-LF}{lf}{t5}
%<T5&osf>  \Mn@DeclareLargeFontFamily{T5}{MinionPro-OsF}{osf}{t5}
%<T5&tlf>  \Mn@DeclareLargeFontFamily{T5}{MinionPro-TLF}{tlf}{t5}
%<T5&tosf> \Mn@DeclareLargeFontFamily{T5}{MinionPro-TOsF}{tosf}{t5}
%<T2A&lf>  \Mn@DeclareSmallFontFamily{T2A}{MinionPro-LF}{lf}{t2a}
%<T2A&osf> \Mn@DeclareSmallFontFamily{T2A}{MinionPro-OsF}{osf}{t2a}
%<T2A&tlf> \Mn@DeclareSmallFontFamily{T2A}{MinionPro-TLF}{tlf}{t2a}
%<T2A&tosf>\Mn@DeclareSmallFontFamily{T2A}{MinionPro-TOsF}{tosf}{t2a}
%<T2B&lf>  \Mn@DeclareSmallFontFamily{T2B}{MinionPro-LF}{lf}{t2b}
%<T2B&osf> \Mn@DeclareSmallFontFamily{T2B}{MinionPro-OsF}{osf}{t2b}
%<T2B&tlf> \Mn@DeclareSmallFontFamily{T2B}{MinionPro-TLF}{tlf}{t2b}
%<T2B&tosf>\Mn@DeclareSmallFontFamily{T2B}{MinionPro-TOsF}{tosf}{t2b}
%<T2C&lf>  \Mn@DeclareSmallFontFamily{T2C}{MinionPro-LF}{lf}{t2c}
%<T2C&osf> \Mn@DeclareSmallFontFamily{T2C}{MinionPro-OsF}{osf}{t2c}
%<T2C&tlf> \Mn@DeclareSmallFontFamily{T2C}{MinionPro-TLF}{tlf}{t2c}
%<T2C&tosf>\Mn@DeclareSmallFontFamily{T2C}{MinionPro-TOsF}{tosf}{t2c}
%<TS1&lf>  \Mn@DeclareLargeFontFamily{TS1}{MinionPro-LF}{lf}{ts1}
%<TS1&osf> \Mn@DeclareLargeFontFamily{TS1}{MinionPro-OsF}{osf}{ts1}
%<TS1&tlf> \Mn@DeclareLargeFontFamily{TS1}{MinionPro-TLF}{tlf}{ts1}
%<TS1&tosf>\Mn@DeclareLargeFontFamily{TS1}{MinionPro-TOsF}{tosf}{ts1}
%<Uorn>    \Mn@DeclareSmallFontFamily{U}{MinionPro-Ornaments}{orn}{u}
%<X2&lf>   \Mn@DeclareSmallFontFamily{X2}{MinionPro-LF}{lf}{x2}
%<X2&osf>  \Mn@DeclareSmallFontFamily{X2}{MinionPro-OsF}{osf}{x2}
%<X2&tlf>  \Mn@DeclareSmallFontFamily{X2}{MinionPro-TLF}{tlf}{x2}
%<X2&tosf> \Mn@DeclareSmallFontFamily{X2}{MinionPro-TOsF}{tosf}{x2}
%<OT2&lf>  \Mn@DeclareSmallFontFamily{OT2}{MinionPro-LF}{lf}{ot2}
%<OT2&osf> \Mn@DeclareSmallFontFamily{OT2}{MinionPro-OsF}{osf}{ot2}
%<OT2&tlf> \Mn@DeclareSmallFontFamily{OT2}{MinionPro-TLF}{tlf}{ot2}
%<OT2&tosf>\Mn@DeclareSmallFontFamily{OT2}{MinionPro-TOsF}{tosf}{ot2}
%</oldfd>
%    \end{macrocode}
%
% \CheckSum{0}
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
% \Finale
\endinput
% vim:set ft=tex:
