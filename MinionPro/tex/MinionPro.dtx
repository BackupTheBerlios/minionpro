%\iffalse meta-comment
%<*driver>
           \ProvidesFile{MinionPro.dtx}       [2005/01/23 v2.0 MinionPro support for LaTeX]
%</driver>
%<style>   \NeedsTeXFormat{LaTeX2e}
%<style>   \ProvidesPackage{MinionPro}        [2005/01/23 v2.0 MinionPro support for LaTeX]
%<mtcfg>   \ProvidesFile{mt-MinionPro.cfg}    [2005/02/07 v1.0 microtype config file for MinionPro]
%<fontdef>\ProvidesFile{MinionPro-FontDef.sty}[2005/04/13 v2.1 font definition macros]
%<Uorn> \ProvidesFile{UMinionPro-Ornaments.fd}[2005/01/23 v2.0 font definitions for U/MinionPro-Ornaments.]
%<LGR&lf>  \ProvidesFile{LGRMinionPro-LF.fd}  [2005/01/23 v2.0 font definitions for LGR/MinionPro-LF.]
%<LGR&osf> \ProvidesFile{LGRMinionPro-OsF.fd} [2005/01/23 v2.0 font definitions for LGR/MinionPro-OsF.]
%<LGR&tlf> \ProvidesFile{LGRMinionPro-TLF.fd} [2005/01/23 v2.0 font definitions for LGR/MinionPro-TLF.]
%<LGR&tosf>\ProvidesFile{LGRMinionPro-TOsF.fd}[2005/01/23 v2.0 font definitions for LGR/MinionPro-TOsF.]
%<OML&lf>  \ProvidesFile{OMLMinionPro-LF.fd}  [2005/01/23 v2.0 font definitions for OML/MinionPro-LF.]
%<OML&osf> \ProvidesFile{OMLMinionPro-OsF.fd} [2005/01/23 v2.0 font definitions for OML/MinionPro-OsF.]
%<OML&tlf> \ProvidesFile{OMLMinionPro-TLF.fd} [2005/01/23 v2.0 font definitions for OML/MinionPro-TLF.]
%<OML&tosf>\ProvidesFile{OMLMinionPro-TOsF.fd}[2005/01/23 v2.0 font definitions for OML/MinionPro-TOsF.]
%<OT1&lf>  \ProvidesFile{OT1MinionPro-LF.fd}  [2005/01/23 v2.0 font definitions for OT1/MinionPro-LF.]
%<OT1&osf> \ProvidesFile{OT1MinionPro-OsF.fd} [2005/01/23 v2.0 font definitions for OT1/MinionPro-OsF.]
%<OT1&tlf> \ProvidesFile{OT1MinionPro-TLF.fd} [2005/01/23 v2.0 font definitions for OT1/MinionPro-TLF.]
%<OT1&tosf>\ProvidesFile{OT1MinionPro-TOsF.fd}[2005/01/23 v2.0 font definitions for OT1/MinionPro-TOsF.]
%<T1&lf>   \ProvidesFile{T1MinionPro-LF.fd}   [2005/01/23 v2.0 font definitions for T1/MinionPro-LF.]
%<T1&osf>  \ProvidesFile{T1MinionPro-OsF.fd}  [2005/01/23 v2.0 font definitions for T1/MinionPro-OsF.]
%<T1&tlf>  \ProvidesFile{T1MinionPro-TLF.fd}  [2005/01/23 v2.0 font definitions for T1/MinionPro-TLF.]
%<T1&tosf> \ProvidesFile{T1MinionPro-TOsF.fd} [2005/01/23 v2.0 font definitions for T1/MinionPro-TOsF.]
%<LY1&lf>  \ProvidesFile{LY1MinionPro-LF.fd}  [2005/01/23 v2.0 font definitions for LY1/MinionPro-LF.]
%<LY1&osf> \ProvidesFile{LY1MinionPro-OsF.fd} [2005/01/23 v2.0 font definitions for LY1/MinionPro-OsF.]
%<LY1&tlf> \ProvidesFile{LY1MinionPro-TLF.fd} [2005/01/23 v2.0 font definitions for LY1/MinionPro-TLF.]
%<LY1&tosf>\ProvidesFile{LY1MinionPro-TOsF.fd}[2005/01/23 v2.0 font definitions for LY1/MinionPro-TOsF.]
%<T5&lf>   \ProvidesFile{T5MinionPro-LF.fd}   [2005/01/23 v2.0 font definitions for T5/MinionPro-LF.]
%<T5&osf>  \ProvidesFile{T5MinionPro-OsF.fd}  [2005/01/23 v2.0 font definitions for T5/MinionPro-OsF.]
%<T5&tlf>  \ProvidesFile{T5MinionPro-TLF.fd}  [2005/01/23 v2.0 font definitions for T5/MinionPro-TLF.]
%<T5&tosf> \ProvidesFile{T5MinionPro-TOsF.fd} [2005/01/23 v2.0 font definitions for T5/MinionPro-TOsF.]
%<T2A&lf>  \ProvidesFile{T2AMinionPro-LF.fd}  [2005/01/23 v2.0 font definitions for T2A/MinionPro-LF.]
%<T2A&osf> \ProvidesFile{T2AMinionPro-OsF.fd} [2005/01/23 v2.0 font definitions for T2A/MinionPro-OsF.]
%<T2A&tlf> \ProvidesFile{T2AMinionPro-TLF.fd} [2005/01/23 v2.0 font definitions for T2A/MinionPro-TLF.]
%<T2A&tosf>\ProvidesFile{T2AMinionPro-TOsF.fd}[2005/01/23 v2.0 font definitions for T2A/MinionPro-TOsF.]
%<T2B&lf>  \ProvidesFile{T2BMinionPro-LF.fd}  [2005/01/23 v2.0 font definitions for T2B/MinionPro-LF.]
%<T2B&osf> \ProvidesFile{T2BMinionPro-OsF.fd} [2005/01/23 v2.0 font definitions for T2B/MinionPro-OsF.]
%<T2B&tlf> \ProvidesFile{T2BMinionPro-TLF.fd} [2005/01/23 v2.0 font definitions for T2B/MinionPro-TLF.]
%<T2B&tosf>\ProvidesFile{T2BMinionPro-TOsF.fd}[2005/01/23 v2.0 font definitions for T2B/MinionPro-TOsF.]
%<T2C&lf>  \ProvidesFile{T2CMinionPro-LF.fd}  [2005/01/23 v2.0 font definitions for T2C/MinionPro-LF.]
%<T2C&osf> \ProvidesFile{T2CMinionPro-OsF.fd} [2005/01/23 v2.0 font definitions for T2C/MinionPro-OsF.]
%<T2C&tlf> \ProvidesFile{T2CMinionPro-TLF.fd} [2005/01/23 v2.0 font definitions for T2C/MinionPro-TLF.]
%<T2C&tosf>\ProvidesFile{T2CMinionPro-TOsF.fd}[2005/01/23 v2.0 font definitions for T2C/MinionPro-TOsF.]
%<TS1&lf>  \ProvidesFile{TS1MinionPro-LF.fd}  [2005/01/23 v2.0 font definitions for TS1/MinionPro-LF.]
%<TS1&osf> \ProvidesFile{TS1MinionPro-OsF.fd} [2005/01/23 v2.0 font definitions for TS1/MinionPro-OsF.]
%<TS1&tlf> \ProvidesFile{TS1MinionPro-TLF.fd} [2005/01/23 v2.0 font definitions for TS1/MinionPro-TLF.]
%<TS1&tosf>\ProvidesFile{TS1MinionPro-TOsF.fd}[2005/01/23 v2.0 font definitions for TS1/MinionPro-TOsF.]
%<X2&lf>   \ProvidesFile{X2MinionPro-LF.fd}   [2005/01/23 v2.0 font definitions for X2/MinionPro-LF.]
%<X2&osf>  \ProvidesFile{X2MinionPro-OsF.fd}  [2005/01/23 v2.0 font definitions for X2/MinionPro-OsF.]
%<X2&tlf>  \ProvidesFile{X2MinionPro-TLF.fd}  [2005/01/23 v2.0 font definitions for X2/MinionPro-TLF.]
%<X2&tosf> \ProvidesFile{X2MinionPro-TOsF.fd} [2005/01/23 v2.0 font definitions for X2/MinionPro-TOsF.]
%<OT2&lf>  \ProvidesFile{OT2MinionPro-LF.fd}  [2005/01/23 v2.0 font definitions for OT2/MinionPro-LF.]
%<OT2&osf> \ProvidesFile{OT2MinionPro-OsF.fd} [2005/01/23 v2.0 font definitions for OT2/MinionPro-OsF.]
%<OT2&tlf> \ProvidesFile{OT2MinionPro-TLF.fd} [2005/01/23 v2.0 font definitions for OT2/MinionPro-TLF.]
%<OT2&tosf>\ProvidesFile{OT2MinionPro-TOsF.fd}[2005/01/23 v2.0 font definitions for OT2/MinionPro-TOsF.]
%<*driver>
\documentclass{ltxdoc}
\usepackage[T1]{fontenc}
\usepackage[minionint]{MinionPro}
\usepackage[british]{babel}
\usepackage{array,ifthen,booktabs,pifont}
\IfFileExists{lmodern.sty}{%
  \renewcommand{\sfdefault}{lmss}%
  \renewcommand{\ttdefault}{lmtt}%
  \DeclareMathAlphabet\mathsf    {T1}{lmss}{m}{n}%
}{}
\usepackage[expansion=false]{microtype}

\newcommand*\pkg[1]{\mbox{\textsf{#1}}}
\newcommand*\file[1]{\textsf{#1}}
\makeatletter
\newcommand*\option{\@ifstar\option@default\option@}
\newcommand*\option@default[1]{\option@{#1}*}
\newcommand*\option@[1]{\textsf{#1}}
\makeatother
\newcommand*\acro[1]{\textsc{\MakeLowercase{#1}}}
\newcommand*\?{\kern0.08em}

\newlength\optionswidth

\newcommand\tabindent{\noindent\hspace{2em}}
\newenvironment{options}{%
  \par\medskip\tabindent
  \begin{tabular}{@{}p{\optionswidth}l@{}}%
}{%
  \end{tabular}%
  \par\medskip
}
\renewcommand\theCodelineNo{%
  \normalfont\scriptsize\figureversion{tabular}\arabic{CodelineNo}}

\setcounter{secnumdepth}{2}
\setcounter{tocdepth}{2}

\begin{document}
\DocInput{MinionPro.dtx}
\end{document}
%</driver>
%\fi
%
% \GetFileInfo{MinionPro.dtx}
%
% \title{MinionPro Support for \LaTeX}
% \author{Achim Blumensath \and Andreas B\"uhmann \and Michael Zedler}
% \date{\fileversion\ -- \filedate}
% \maketitle
%
% \begingroup
% \figureversion{tabular}%
% \renewcommand\familydefault{MinionPro-TOsF}%
% \tableofcontents
% \endgroup
%
% \section{Overview}
%
% The \pkg{MinionPro} package provides support for the MinionPro
% font family from Adobe.
% To use these fonts in a \LaTeX\ document you can issue the command
% \begin{quote}
%   |\usepackage{MinionPro}|
% \end{quote}
%
% \section{Interference with other packages}
% \label{sec:dcolumn}
%
% The \pkg{MinionPro} package automatically loads the following packages\?:
% \pkg{textcomp}, \pkg{amsmath}, and \pkg{MnSymbol}.
% If you want to pass options to these packages you can
% either put the corresponding |\usepackage| command before the
% |\usepackage{MinionPro}| or you can include the options in the
% |\documentclass| command. The \pkg{MinionPro} package is \emph{not}
% compatible with \pkg{amssymb} and \pkg{amsfonts}. Please see also the
% corresponding section in the \pkg{MnSymbol} documentation.
%
% The MinionPro package includes support files for the \pkg{microtype}
% package. To enable character protrusion add the command
% \begin{quote}
%   |\usepackage{microtype}|
% \end{quote}
% \emph{after} the command |\usepackage{MinionPro}|.
%
% There is also a slight incompatibility with the \pkg{dcolumn} package
% which expects all figures to have the same width. If you want to use this
% package you either have to specify the \option{mathtabular} option (this is
% the brute force solution, not recommended), or you can use the
% |\figureversion{tabular}| command to switch to tabular figures in front of
% every table (much better, but also more work).
%
% \section{Options}
%
% \subsubsection*{Selection of the fonts to be used}
%
% The following options specify which version of the fonts you want to use.
% The default settings are marked with an asterisk*.
%
% \settowidth{\optionswidth}{\option{proportional}, \option{prop}}\relax
% \begin{options}
%   \option*{smallfamily} & use only regular and bold face\\
%   \option{medfamily}    & use semibold face in addition to \option{smallfamily} \\
%   \option{fullfamily}   & use medium face in addition to \option{medfamily}\\
%   \option*{noopticals}  & use only the Text optical size\\
%   \option{opticals}     & use the optical sizes Caption/Subhead/Display\\
%   \option{slides}       & use only the Caption optical shape (useful for slides)
% \end{options}
%
% \subsubsection*{Figure selection}
%
% MinionPro offers four different figure version. One can choose between
% \emph{text figures} (i.e., lowercase figures) and \emph{lining figures} (i.e., uppercase figures)
% and one can choose between \emph{proportional} figures (figures have different widths)
% and \emph{tabular} figures (all figures have the same width, useful mainly for tables).
%
% \medskip
% \begin{tabular}{lll}
% \toprule
%                & text figures & lining figures \\
% \midrule
%   proportional & {\figureversion{text}0123456789}         & {\figureversion{lining}0123456789}         \\
%   tabular      & {\figureversion{text,tabular}0123456789} & {\figureversion{lining,tabular}0123456789} \\
% \bottomrule
% \end{tabular}
%
% \medskip\noindent
% The default version can be selected by the following options\?:
%
% \begin{options}
%   \option{textosf}     & use text figures in text mode\\
%   \option{mathosf}     & use text figures in math mode\\
%   \option*{osf}        & use text figures in text and math mode\\
%   \option{textlf}      & use lining figures in text mode\\
%   \option{mathlf}      & use lining figures in math mode\\
%   \option{lf}          & use lining figures in text and math mode\\
%   \option{mathtabular} & use tabular figures in math mode\\
% \end{options}
%
% \noindent
% Inside the document the |\figureversion| command can be used to switch between
% different figure versions. Possible parameters are\?:
%
% \begin{options}
%   \option{text}, \option{osf}          & textstyle figures\\
%   \option{lining}, \option{lf}         & lining figures\\
%   \option{tabular}, \option{tab}       & tabular figures\\
%   \option{proportional}, \option{prop} & proportional figures
% \end{options}
%
% \subsubsection*{Calligraphic fonts}
%
% \begin{options}
%   \option*{mnsy} & use the calligraphic font from MnSymbol\\
%   \option{cmsy}  & take the calligraphic symbols from Computer Modern\\
%   \option{swash} & use the swash captials from MinionPro\\
%   \option{abx}   & use the calligraphic symbols provided by mathabx\?; \\
%                  & this font contains also lower case letters, but it is not quite finished.
% \end{options}
%
% \subsubsection*{Blackboard and fraktur letters}
%
% \begin{options}
%   \option*{amsbb}  & use the AMS blackboard font\\
%   \option{pazobb}  & use the Pazo blackboard font (does not fit very well to MinionPro)\\
%   \option{eufrak}* & use the Euler fraktur font
% \end{options}
%
% \subsubsection*{Greek letters}
%
% The following options specify whether you want to use upright or italic Greek
% letters in math mode.
%
% \begin{options}
%   \option*{mixedgreek} & uppercase Greek upright, lowercase Greek italic\\
%   \option{italicgreek} & all Greek letters italic\\
%   \option{frenchmath}  & all Greek and uppercase Roman letters upright
% \end{options}
%
% \noindent
% Upright and italic Greek letters are also directly accessible via the commands
% |\upgamma|, |\itgamma|, |\upGamma|, |\itGamma|, etc.
%
% \subsubsection*{Miscellaneous options}
%
% \begin{options}
%   \option{minionint}
%      & take the integral symbols from MinionPro, not from MnSymbol\?:\\
%      & $\displaystyle\int$ instead of $\displaystyle\varint$ \\
%   \option{opticalfootnotes}
%      & use optical figures for footnotemarks, \\
%      & i.e., example\begingroup\fontfamily{MinionPro-Ornaments}\fontencoding{U}\selectfont
%        6,9\endgroup\ instead of example\textsuperscript{\figureversion{lf}6,9}.
%        This option can\\
%      & be used if \emph{only} figures are used as footnotemarks.
% \end{options}
%
% \section{Additional font shapes and symbols}
%
% In addition to the normal small caps shape |sc| there is a letterspaced
% version called~|ssc|. It is accessible via the commands |\sscshape| and
% |\textssc|. In order to use the |ssc| shape throughout your document specify
% |\renewcommand{\scdefault}{ssc}| in the preamble of your document.
%
% Swash capitals like \textsw{`Canadian Mountain Holidays'} are acessed
% via the |sw| fontshape and the commands |\swshape| and |\textsw|.
%
% \begin{options}
%   |sc|  & \textsc {This is a Sample Text}\\
%   |ssc| & \textssc{This is a Sample Text}\\
%   |sw|  & \textsw {This is a Sample Text}
% \end{options}
%
% \noindent
% \iffalse In order to make non-standard ligatures searchable in the \acro{PDF} generated by pdflatex,
% \file{cmapex.sty} needs to be loaded before \file{fontenc.sty}.
% \fi
% The \pkg{MinionPro} package provides all symbols from the \pkg{MnSymbol} package.
% Additionally, the following math symbols are made available\?:
% 
% \medskip\tabindent
% \begingroup
% \newcommand*\sym[1]{$#1$ & \ttfamily\string#1}%
% \begin{tabular}{@{}*2{ll@{\qquad}}ll@{}}
%   \sym\digamma & \sym\varkappa & \sym\varbeta \\
%   \sym\backepsilon & \sym\varbackepsilon & \sym\hbar \\
%   \sym\jmath & \sym\eth & \sym\lozenge \\
%   \sym\slashedzero \\
% \end{tabular}
% \endgroup
% \par\medskip
%
% \noindent
% Split fractions can be typeset either using the individual glyphs
% |\text|\meta{number}|numerator|, |\text|\meta{number}|denominator|, and
% |\textfractionsolidus| or using the following pre-composed fractions\?:
%
% \medskip\tabindent
% \begingroup
% \newcommand*\sym[1]{#1 & \ttfamily\string#1}%
% \begin{tabular}{@{}*1{ll@{\qquad}}ll@{}}
% \sym\textonehalf & \sym\textonethird \\
% \sym\texttwothirds & \sym\textonequarter \\
% \sym\textthreequarters & \sym\textoneeighth \\ 
% \sym\textthreeeighths & \sym\textfiveeighths \\
% \sym\textseveneighths \\
% \end{tabular}
% \endgroup
% \par\medskip
%
% \noindent
% Ornaments can be accessed via the \pkg{pifont} package using the command
% \begin{quote}
%   |\Pisymbol{MinionPro-Ornaments}|\marg{number}
% \end{quote}
% The available glyphs are listed in the table below. Version 1.000 of the
% MinionPro font provides only ornaments 100--122.
%
% \medskip\noindent
% {\figureversion{tabular}\centering
% \newcommand*\orn[1]{#1 & \Pisymbol{MinionPro-Ornaments}{#1}}\relax
% \begin{tabular}{@{}*{3}{rl@{\qquad}}rl@{}}
% \toprule
%  number & glyph & number & glyph & number & glyph & number & glyph\\
% \midrule
% \orn{100} & \orn{113} & \orn{126} & \orn{139}\\
% \orn{101} & \orn{114} & \orn{127} & \orn{140}\\
% \orn{102} & \orn{115} & \orn{128} & \orn{141}\\
% \orn{103} & \orn{116} & \orn{129} & \orn{142}\\
% \orn{104} & \orn{117} & \orn{130} & \orn{143}\\
% \orn{105} & \orn{118} & \orn{131} & \orn{144}\\
% \orn{106} & \orn{119} & \orn{132} & \orn{145}\\
% \orn{107} & \orn{120} & \orn{133} & \orn{146}\\
% \orn{108} & \orn{121} & \orn{134} & \orn{147}\\
% \orn{109} & \orn{122} & \orn{135} & \orn{148}\\
% \orn{110} & \orn{123} & \orn{136} & \orn{149}\\
% \orn{111} & \orn{124} & \orn{137} & \orn{150}\\
% \orn{112} & \orn{125} & \orn{138} & \\
% \bottomrule
% \end{tabular}\par}
%
% \section{Language support}
%
% The following encodings are supported\?:
%
% \medskip\tabindent
% \begin{tabular}{@{}ll@{}}
%   Latin    & \acro{OT1,} \acro{T1,} \acro{TS1,} \acro{LY1,} \acro{T5}\\
%   Cyrillic & \acro{T2A,} \acro{T2B,} \acro{T2C,} \acro{X2,} \acro{OT2}\\
%   Greek    & \acro{LGR} (to be used with \pkg{babel}, including polutonikogreek)
% \end{tabular}
%
% \section{\acro{NFSS} classification}
%
% Parenthesised combinations are provided via substitutions.
%
% \medskip\noindent
% {\centering\let\>=\\%
%   \begin{tabular}{@{}p{5em}p{9.5em}lp{9em}@{}}
%     \toprule 
%     encoding & family & series & shape \\
%     \midrule
%     \raggedright \acro{OT1,} \acro{T1,} \acro{TS1,} \acro{LY1,} \acro{T5} &
%     MinionPro-OsF, MinionPro-LF, MinionPro-TOsF, MinionPro-TLF &
%     m, sb, b (bx) &
%     n, it (sl), sw,\> sc, scit (scsl, scsw),\> ssc, sscit (sscsl, sscsw) \\
%     \addlinespace
%     \raggedright \acro{LGR,} \acro{T2A,} \acro{T2B,} \acro{T2C,} \acro{X2,} \acro{OT2} &
%     MinionPro-OsF, MinionPro-LF, MinionPro-TOsF, MinionPro-TLF &
%     m, sb, b (bx) &
%     n, it (sl) \\
%     \addlinespace
%     \acro{OML} &
%     MinionPro-TOsF &
%     m, sb, b (bx) &
%     n, it \\
%     \addlinespace
%     \acro{U} &
%     MinionPro-Ornaments &
%     m, sb, b (bx) &
%     n, it (sl) \\
%     \bottomrule
%   \end{tabular}
% }
%
% \StopEventually{}
%
% \section{The main style file}
%
%    \begin{macrocode}
%<*style>
%\RequirePackage{MinionPro-Protrude}
%
%\DeclareOption{protrude}{\enableprotruding}
%    \end{macrocode}
%
% \subsection{Options}
%
% \subsubsection{Font sets}
% The package \pkg{MinionPro-FontDef} adapts the font definitions to the
% requested font set. So we simply pass on the relevant options\?; only
% MinionPro integrals are handled here in \pkg{MinionPro}.
%    \begin{macrocode}
\newcommand\Mn@minionint@opticals{-NoOpticals}
\newcommand\Mn@minionint@bold{-Semibold}
\DeclareOption{slides}{%
  \def\Mn@minionint@opticals{-NoOpticals}%
  \PassOptionsToPackage{slides}{MinionPro-FontDef}}
\DeclareOption{noopticals}{%
  \def\Mn@minionint@opticals{-NoOpticals}%
  \PassOptionsToPackage{noopticals}{MinionPro-FontDef}}
\DeclareOption{opticals}{%
  \def\Mn@minionint@opticals{}%
  \PassOptionsToPackage{opticals}{MinionPro-FontDef}}
\DeclareOption{smallfamily}{%
  \def\Mn@minionint@bold{-Bold}%
  \PassOptionsToPackage{smallfamily}{MinionPro-FontDef}}
\DeclareOption{medfamily}{%
  \def\Mn@minionint@bold{-Semibold}%
  \PassOptionsToPackage{medfamily}{MinionPro-FontDef}}
\DeclareOption{fullfamily}{%
  \def\Mn@minionint@bold{-Semibold}%
  \PassOptionsToPackage{fullfamily}{MinionPro-FontDef}}
%    \end{macrocode}
%
% \subsubsection{Figure style}
%
%    \begin{macrocode}
\newcommand\Mn@Text@FigA{}
\newcommand\Mn@Text@FigB{OsF}
\newcommand\Mn@Text@Fig{\Mn@Text@FigA\Mn@Text@FigB}
\newcommand\Mn@Math@Fig{OsF}
\newcommand\Mn@Text@Family{MinionPro-\Mn@Text@Fig}
\newcommand\Mn@Math@Family{MinionPro-\Mn@Math@Fig}
\newcommand\Mn@Math@TFamily{MinionPro-T\Mn@Math@Fig}
\newcommand\Mn@Math@GenericFamily{MinionPro-TOsF}
%    \end{macrocode}
% 
%    \begin{macrocode}
\DeclareOption{textosf}{\def\Mn@Text@FigB{OsF}}
\DeclareOption{textlf} {\def\Mn@Text@FigB{LF}}
\DeclareOption{mathosf}{\def\Mn@Math@Fig{OsF}}
\DeclareOption{mathlf} {\def\Mn@Math@Fig{LF}}
\DeclareOption{osf}{\ExecuteOptions{textosf,mathosf}}
\DeclareOption{lf} {\ExecuteOptions{textlf,mathlf}}
\DeclareOption{mathtabular}{\let\Mn@Math@Family\Mn@Math@TFamily}
%    \end{macrocode}
%
% \subsubsection{Calligraphic fonts}
%
% Most options are handled by \pkg{MnSymbol}.
%    \begin{macrocode}
\DeclareOption{mnsy}{\PassOptionsToPackage{mnsy}{MnSymbol}}
\DeclareOption{cmsy}{\PassOptionsToPackage{cmsy}{MnSymbol}}
\DeclareOption{abx}{\PassOptionsToPackage{abx}{MnSymbol}}
%    \end{macrocode}
% This hook is going to be executed once the math versions have been set up.
%    \begin{macrocode}
\newcommand\Mn@load@cal{}
\DeclareOption{swash}{
  \def\Mn@load@cal{
    \DeclareMathAlphabet\mathcal     {T1}{\Mn@Math@Family} {m}{sw}
    \SetMathAlphabet\mathcal{bold}   {T1}{\Mn@Math@Family} {b}{sw}
    \SetMathAlphabet\mathcal{tabular}{T1}{\Mn@Math@TFamily}{m}{sw}
    \SetMathAlphabet\mathcal{boldtabular}{T1}{\Mn@Math@TFamily}{b}{sw}}
}
%    \end{macrocode}
%
% \subsubsection{Greek letters}
%
% |\Mn@Greek@Rm|, |\Mn@Greek@Mix|, and |\Mn@Greek@It| are defined below in
% section~\ref{sec:greek} before |\Mn@Greek@Shape| is executed.
%    \begin{macrocode}
\newcommand\Mn@Greek@Shape{}
\newcommand\Mn@Math@letters@shape{it}
\DeclareOption{frenchmath}{%
  \def\Mn@Greek@Shape{\Mn@Greek@Rm}%
  \def\Mn@Math@letters@shape{n}%
}
\DeclareOption{mixedgreek}{%
  \def\Mn@Greek@Shape{\Mn@Greek@Mix}%
  \def\Mn@Math@letters@shape{it}%
}
\DeclareOption{italicgreek}{%
  \def\Mn@Greek@Shape{\Mn@Greek@It}%
  \def\Mn@Math@letters@shape{it}%
}
%    \end{macrocode}
%
% \subsubsection{Blackbord bold and fraktur fonts}
%
%    \begin{macrocode}
\newcommand\Mn@load@amsbb{
  \let\mathbb\undefined
  \DeclareMathAlphabet\mathbb{U}{msb}{m}{n}}
\newcommand\Mn@load@pazobb{
  \let\mathbb\undefined
  \DeclareFontFamily{T1}{fplmbb}{}
  \DeclareFontShape{T1}{fplmbb}{m}{n}{ <->s*[0.92] fplmbb }{}
  \DeclareMathAlphabet\mathbb{T1}{fplmbb}{m}{n}}
%    \end{macrocode}
%
%    \begin{macrocode}
\newcommand\Mn@load@wbfrak{
  \let\mathfrak\undefined
  \DeclareMathAlphabet\mathfrak     {T1}{DS-Wartburg-Fraktur}{m}{n}
  \SetMathAlphabet\mathfrak{bold}   {T1}{DS-Wartburg-Fraktur}{b}{n}
  \SetMathAlphabet\mathfrak{tabular}{T1}{DS-Wartburg-Fraktur}{m}{n}
  \SetMathAlphabet\mathfrak{boldtabular}{T1}{DS-Wartburg-Fraktur}{b}{n}}
\newcommand\Mn@load@eufrak{
  \RequirePackage{eufrak}}
%    \end{macrocode}
%
%    \begin{macrocode}
\DeclareOption{amsbb} {\let\Mn@load@bb\Mn@load@amsbb}
\DeclareOption{pazobb}{\let\Mn@load@bb\Mn@load@pazobb}
\DeclareOption{wbfrak}{\let\Mn@load@frak\Mn@load@wbfrak}
\DeclareOption{eufrak}{\let\Mn@load@frak\Mn@load@eufrak}
%    \end{macrocode}
%
% \subsubsection{Integrals}
%
%    \begin{macrocode}
\newcommand\Mn@load@integrals{}
\DeclareOption{minionint}{\def\Mn@load@integrals{\Mn@Decl@Minion@Ints}}
%    \end{macrocode}
%
% \subsection{Optical footnote marks}
%
%    \begin{macrocode}
\DeclareOption{opticalfootnotes}{%
  \def\@makefnmark{%
    \begingroup
    \normalfont
    \fontfamily{MinionPro-Ornaments}\fontencoding{U}\selectfont
    \@thefnmark
    \endgroup}}
%    \end{macrocode}
% 
% \subsubsection{Defaults}
%
%    \begin{macrocode}
\ExecuteOptions{osf,mixedgreek,amsbb,eufrak}
\ProcessOptions\relax
%    \end{macrocode}
%
% \subsection{Font declarations}
%
%    \begin{macrocode}
\newcommand\origvdots{}
\let\origvdots\vdots
\RequirePackage{MnSymbol,MinionPro-FontDef}
%    \end{macrocode}
% By default, we use |sb| for the bold series. If |MinionPro-Semibold| is not
% available this might internally be mapped to |MinionPro-Bold| (see
% \pkg{MinionPro-FontDef}). 
%    \begin{macrocode}
\renewcommand\rmdefault{\Mn@Text@Family}
\renewcommand\bfdefault{sb}
%    \end{macrocode}
%
% \subsubsection{Math versions}
%
% Redefine the standard math versions |normal| and |bold|.
%    \begin{macrocode}
\DeclareSymbolFont{operators}      {T1}{\Mn@Math@Family} {m}{n}
\DeclareSymbolFont{letters}       {OML}{\Mn@Math@GenericFamily} 
                                       {m}{\Mn@Math@letters@shape}
\SetSymbolFont{operators}{bold}    {T1}{\Mn@Math@Family} {b}{n}
\SetSymbolFont{letters}  {bold}   {OML}{\Mn@Math@GenericFamily}
                                       {b}{\Mn@Math@letters@shape}
\DeclareMathAlphabet\mathbf        {T1}{\Mn@Math@Family} {b}{n}
\DeclareMathAlphabet\mathit        {T1}{\Mn@Math@Family} {m}{it}
\SetMathAlphabet\mathit  {bold}    {T1}{\Mn@Math@Family} {b}{it}
%    \end{macrocode}
% Extra math versions |tabular| and |boldtabular|, which use tabular figures
% instead of proportional ones. These math versions can be useful in tables
% (cf.\ section~\ref{sec:dcolumn}).
%    \begin{macrocode}
\DeclareMathVersion{tabular}
\SetSymbolFont{operators}{tabular} {T1}{\Mn@Math@TFamily}{m}{n}
\SetSymbolFont{letters}  {tabular}{OML}{\Mn@Math@GenericFamily}
                                       {m}{\Mn@Math@letters@shape}
\DeclareMathVersion{boldtabular}
\SetSymbolFont{operators}{boldtabular} {T1}{\Mn@Math@TFamily}{b}{n}
\SetSymbolFont{letters}  {boldtabular}{OML}{\Mn@Math@GenericFamily}
                                           {b}{\Mn@Math@letters@shape}
\SetMathAlphabet\mathit  {boldtabular} {T1}{\Mn@Math@TFamily}{b}{it}
%    \end{macrocode}
%
%    \begin{macrocode}
\DeclareMathAccent{\grave}   {\mathalpha}{operators}{0}
\DeclareMathAccent{\acute}   {\mathalpha}{operators}{1}
\DeclareMathAccent{\hat}     {\mathalpha}{operators}{2}
\DeclareMathAccent{\tilde}   {\mathalpha}{operators}{3}
\DeclareMathAccent{\ddot}    {\mathalpha}{operators}{4}
\DeclareMathAccent{\mathring}{\mathalpha}{operators}{6}
\DeclareMathAccent{\check}   {\mathalpha}{operators}{7}
\DeclareMathAccent{\breve}   {\mathalpha}{operators}{8}
\DeclareMathAccent{\bar}     {\mathalpha}{operators}{9}
\DeclareMathAccent{\dot}     {\mathalpha}{operators}{10}
%    \end{macrocode}
% Execute the hooks set up above to load the various math alphabets.
%    \begin{macrocode}
\Mn@load@bb
\Mn@load@frak
\Mn@load@cal
%    \end{macrocode}
%
% \subsection{Font selection}
%
% The font selection commands such as |\figureversion|, |\textsw|, and
% |\textssc| are provided by the companion package \pkg{fontaxes}, which may be
% useful for other font families as well.
%
%    \begin{macrocode}
\RequirePackage{fontaxes}[2005/05/04]
%    \end{macrocode}
% We define an additional short hand for compatabilities sake.
%    \begin{macrocode}
\let\oldstylenums\textfigures
%    \end{macrocode}
%
% \subsection{Greek letters}
% \label{sec:greek}
%
% We provide math-mode commands for each Greek letter, both italic and upright.
% Furthermore, there are three commands to select the default version of the
% letters (all upright, all italic, or capitals upright and lowercase italic).
%
% While delaring the Greek letters we collect the uppercase and lowercase letters
% in two lists. (We distinguish them by the first letter of their name.)
% These lists are used to select the different versions.
%    \begin{macrocode}
\newcommand\Mn@greek@list@upper{}
\newcommand\Mn@greek@list@lower{}
\let\Mn@greek@list@upper\@gobble
\let\Mn@greek@list@lower\@gobble
%    \end{macrocode}
% This macro holds one of the two list names. 
%    \begin{macrocode}
\newcommand\Mn@greek@list{}
\newcommand*\Mn@greek@letter[3]{%
  \expandafter\DeclareMathSymbol
  \expandafter{\csname it#1\endcsname}{\mathord}{letters}{#2}%
  \expandafter\DeclareMathSymbol
  \expandafter{\csname up#1\endcsname}{\mathord}{letters}{#3}%
  \edef\@tempa{`\@car#1\@nil}%
  \edef\Mn@greek@list{\expandafter\noexpand\csname
    Mn@greek@list@\ifnum\uccode\@tempa=\@tempa upper\else lower\fi\endcsname}%
  \expandafter\edef\Mn@greek@list{\Mn@greek@list,#1}%
}
%    \end{macrocode}
% We can now declare the Greek letters (left italic, right upright).
%    \begin{macrocode}
\Mn@greek@letter{Gamma}         {"80}{"00}
\Mn@greek@letter{Delta}         {"81}{"01}
\Mn@greek@letter{Theta}         {"82}{"02}
\Mn@greek@letter{Lambda}        {"83}{"03}
\Mn@greek@letter{Xi}            {"84}{"04}
\Mn@greek@letter{Pi}            {"85}{"05}
\Mn@greek@letter{Sigma}         {"86}{"06}
\Mn@greek@letter{Upsilon}       {"87}{"07}
\Mn@greek@letter{Phi}           {"88}{"08}
\Mn@greek@letter{Psi}           {"89}{"09}
\Mn@greek@letter{Omega}         {"8A}{"0A}
\Mn@greek@letter{alpha}         {"0B}{"8B}
\Mn@greek@letter{beta}          {"0C}{"8C}
\Mn@greek@letter{gamma}         {"0D}{"8D}
\Mn@greek@letter{delta}         {"0E}{"8E}
\Mn@greek@letter{epsilon}       {"0F}{"8F}
\Mn@greek@letter{zeta}          {"10}{"90}
\Mn@greek@letter{eta}           {"11}{"91}
\Mn@greek@letter{theta}         {"12}{"92}
\Mn@greek@letter{iota}          {"13}{"93}
\Mn@greek@letter{kappa}         {"14}{"94}
\Mn@greek@letter{lambda}        {"15}{"95}
\Mn@greek@letter{mu}            {"16}{"96}
\Mn@greek@letter{nu}            {"17}{"97}
\Mn@greek@letter{xi}            {"18}{"98}
\Mn@greek@letter{pi}            {"19}{"99}
\Mn@greek@letter{rho}           {"1A}{"9A}
\Mn@greek@letter{sigma}         {"1B}{"9B}
\Mn@greek@letter{tau}           {"1C}{"9C}
\Mn@greek@letter{upsilon}       {"1D}{"9D}
\Mn@greek@letter{phi}           {"1E}{"9E}
\Mn@greek@letter{chi}           {"1F}{"9F}
\Mn@greek@letter{psi}           {"20}{"A0}
\Mn@greek@letter{omega}         {"21}{"A1}
\Mn@greek@letter{varepsilon}    {"22}{"A2}
\Mn@greek@letter{vartheta}      {"23}{"A3}
\Mn@greek@letter{varpi}         {"24}{"A4}
\Mn@greek@letter{varrho}        {"25}{"A5}
\Mn@greek@letter{varsigma}      {"26}{"A6}
\Mn@greek@letter{varphi}        {"27}{"A7}
%    \end{macrocode}
% Some of the following symbols are not really greek letters but are treated in
% the same way.
%    \begin{macrocode}
\Mn@greek@letter{varbeta}       {"B0}{"A8}
\Mn@greek@letter{varkappa}      {"B1}{"A9}
\Mn@greek@letter{backepsilon}   {"B2}{"AA}
\Mn@greek@letter{varbackepsilon}{"B3}{"AB}
\Mn@greek@letter{digamma}       {"B4}{"AC}
\Mn@greek@letter{hbar}          {"B5}{"AD}
\Mn@greek@letter{eth}           {"B6}{"AE}
\Mn@greek@letter{partial}       {"40}{"C0}
\Mn@greek@letter{ell}           {"60}{"E0}
%    \end{macrocode}
% Go through a list of greek letters |#2| and |\let| them be their
% |#1|-prefixed variants.
%    \begin{macrocode}
\newcommand*\Mn@greek@select[2]{%
  \expandafter\let\expandafter\Mn@greek@list\csname Mn@greek@list@#2\endcsname
  \@for\@tempa:=\Mn@greek@list\do{%
    \expandafter\let\csname\@tempa\expandafter\endcsname
    \csname#1\@tempa\endcsname
  }%
}
\newcommand*\Mn@Greek@Rm{%
  \Mn@greek@select{up}{upper}%
  \Mn@greek@select{up}{lower}%
}
\newcommand*\Mn@Greek@It{%
  \Mn@greek@select{it}{upper}%
  \Mn@greek@select{it}{lower}%
}
\newcommand*\Mn@Greek@Mix{%
  \Mn@greek@select{up}{upper}%
  \Mn@greek@select{it}{lower}%
}
%    \end{macrocode}
% Finally initialise the Greek letters.
%    \begin{macrocode}
\Mn@Greek@Shape
%    \end{macrocode}
%
% \subsection{Additional symbols}
%
% Some symbols missing from MnSymbol can be taken from MinionPro.
%
%    \begin{macrocode}
\DeclareMathSymbol{\slashedzero}{\mathord}{letters}{"AF}
\DeclareMathSymbol{\lozenge}    {\mathord}{letters}{"FD}
\DeclareMathSymbol{\varsmallint}{\mathord}{letters}{"FE}
%    \end{macrocode}
%    \begin{macrocode}
\newcommand*\Mn@fraction[2]{%
  \DeclareTextSymbol       {#1}{TS1}{#2}%
  \DeclareTextSymbolDefault{#1}{TS1}%
}
\Mn@fraction{\textzeronumerator}        {192}
\Mn@fraction{\textonenumerator}         {193}
\Mn@fraction{\texttwonumerator}         {194}
\Mn@fraction{\textthreenumerator}       {195}
\Mn@fraction{\textfournumerator}        {196}
\Mn@fraction{\textfivenumerator}        {197}
\Mn@fraction{\textsixnumerator}         {198}
\Mn@fraction{\textsevennumerator}       {199}
\Mn@fraction{\texteightnumerator}       {200}
\Mn@fraction{\textninenumerator}        {201}
\Mn@fraction{\textzerodenominator}      {202}
\Mn@fraction{\textonedenominator}       {203}
\Mn@fraction{\texttwodenominator}       {204}
\Mn@fraction{\textthreedenominator}     {205}
\Mn@fraction{\textfourdenominator}      {206}
\Mn@fraction{\textfivedenominator}      {207}
\Mn@fraction{\textsixdenominator}       {208}
\Mn@fraction{\textsevendenominator}     {209}
\Mn@fraction{\texteightdenominator}     {210}
\Mn@fraction{\textninedenominator}      {211}
\Mn@fraction{\textcommanumerator}       {216}
\Mn@fraction{\textperiodnumerator}      {217}
\Mn@fraction{\textparenleftnumerator}   {218}
\Mn@fraction{\textparenrightnumerator}  {219}
\Mn@fraction{\textcommadenominator}     {220}
\Mn@fraction{\textperioddenominator}    {221}
\Mn@fraction{\textparenleftdenominator} {222}
\Mn@fraction{\textparenrightdenominator}{223}
\Mn@fraction{\textonethird}             {224}
\Mn@fraction{\texttwothirds}            {225}
\Mn@fraction{\textoneeighth}            {226}
\Mn@fraction{\textthreeeighths}         {227}
\Mn@fraction{\textfiveeighths}          {228}
\Mn@fraction{\textseveneighths}         {229}
%    \end{macrocode}
% Archaic Greek letters not provided by MinionPro
%    \begin{macrocode}
%\def\Qoppa{\reflectbox{P}}
%\def\Sampi{\begingroup\fontfamily{cmr}\fontencoding{LGR}\selectfont\char23\endgroup}
\let\Stigma\stigma
\AtBeginDocument{
  \UndeclareTextCommand{\textvisiblespace}{T1}%
  \UndeclareTextCommand{\textcompwordmark}{T1}%
  \UndeclareTextCommand{\textsterling}{T1}%
  \UndeclareTextCommand{\j}{T1}%
  \UndeclareTextCommand{\j}{LY1}%
}
%    \end{macrocode}
% For testing purposes (new OML fonts)
%    \begin{macrocode}
\@for\Mn@alpha:=%
  a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,%
  A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z%
\do{%
  \expandafter\DeclareMathSymbol\expandafter{\csname it\Mn@alpha\endcsname}
    {\mathalpha}{letters}{\expandafter`\Mn@alpha}%
  \@tempcnta=\expandafter`\Mn@alpha
  \advance\@tempcnta 128
  \edef\Mn@tempa{\the\@tempcnta}%
  \expandafter\DeclareMathSymbol\expandafter{\csname up\Mn@alpha\endcsname}
    {\mathalpha}{letters}{\Mn@tempa}%
}
\DeclareMathSymbol{\itimath}{\mathord}{letters}{"7B}
\DeclareMathSymbol{\upimath}{\mathord}{letters}{"FB}
\DeclareMathSymbol{\itjmath}{\mathord}{letters}{"7C}
\DeclareMathSymbol{\upjmath}{\mathord}{letters}{"FC}
%    \end{macrocode}
% make vdots available in textmode
%    \begin{macrocode}
\newcommand\Mnvdots{}
\let\Mnvdots\vdots
\renewcommand{\vdots}{\ifmmode\Mnvdots\else\origvdots\fi}
%    \end{macrocode}
%
% \subsection{Integral symbols}
%
% We can also replace the integral signs from MnSymbol by those of MinionPro.
% The following definitions provide this as an option.
%    \begin{macrocode}
\newcommand\Mn@Decl@Minion@Ints{%
%    \end{macrocode}
% Replace |MnSymbolF| by |MnSymbolFI|.
%    \begin{macrocode}
  \DeclareFontFamily{U}{MnSymbolFI}{}
  \DeclareFontShape{U}{MnSymbolFI}{m}{it}{
      <-6>  MnSymbolFI\Mn@minionint@opticals5
     <6-7>  MnSymbolFI\Mn@minionint@opticals6
     <7-8>  MnSymbolFI\Mn@minionint@opticals7
     <8-9>  MnSymbolFI\Mn@minionint@opticals8
     <9-10> MnSymbolFI\Mn@minionint@opticals9
    <10-12> MnSymbolFI\Mn@minionint@opticals10
    <12->   MnSymbolFI\Mn@minionint@opticals12
  }{}
  \DeclareFontShape{U}{MnSymbolFI}{b}{it}{
      <-6>  MnSymbolFI\Mn@minionint@bold\Mn@minionint@opticals5
     <6-7>  MnSymbolFI\Mn@minionint@bold\Mn@minionint@opticals6
     <7-8>  MnSymbolFI\Mn@minionint@bold\Mn@minionint@opticals7
     <8-9>  MnSymbolFI\Mn@minionint@bold\Mn@minionint@opticals8
     <9-10> MnSymbolFI\Mn@minionint@bold\Mn@minionint@opticals9
    <10-12> MnSymbolFI\Mn@minionint@bold\Mn@minionint@opticals10
    <12->   MnSymbolFI\Mn@minionint@bold\Mn@minionint@opticals12
  }{}
%    \end{macrocode}
%
%    \begin{macrocode}
  \DeclareSymbolFont{symbols}  {U}{MnSymbolFI}{m}{it}
  \SetSymbolFont{symbols}{bold}{U}{MnSymbolFI}{b}{it}
%    \end{macrocode}
% Make the original integral symbols available as |\var|\dots.
%    \begin{macrocode}
  \let\varint\tint
  \let\variint\tiint
  \let\variiint\tiiint
  \let\variiiint\tiiiint
  \let\varidotsint\tidotsint
  \let\varlandupint\tlandupint
  \let\varlanddownint\tlanddownint
  \let\varstrokedint\tstrokedint
  \let\varoint\toint
  \let\varoiint\toiint
  \let\varrcirclerightint\trcirclerightint
  \let\varlcirclerightint\tlcirclerightint
  \let\varrcircleleftint\trcircleleftint
  \let\varlcircleleftint\tlcircleleftint
  \let\varsumint\tsumint
%    \end{macrocode}
% Replace the symbols with the new integrals.
%    \begin{macrocode}
  \DeclareMathSymbol\tint            \mathop{symbols}{112}
  \DeclareMathSymbol\tiint           \mathop{symbols}{114}
  \DeclareMathSymbol\tiiint          \mathop{symbols}{116}
  \DeclareMathSymbol\tiiiint         \mathop{symbols}{118}
  \DeclareMathSymbol\tidotsint       \mathop{symbols}{120}
  \DeclareMathSymbol\tlandupint      \mathop{symbols}{122}
  \DeclareMathSymbol\tlanddownint    \mathop{symbols}{124}
  \DeclareMathSymbol\tstrokedint     \mathop{symbols}{126}
  \DeclareMathSymbol\toint           \mathop{symbols}{128}
  \DeclareMathSymbol\toiint          \mathop{symbols}{130}
  \DeclareMathSymbol\trcirclerightint\mathop{symbols}{132}
  \DeclareMathSymbol\tlcirclerightint\mathop{symbols}{134}
  \DeclareMathSymbol\trcircleleftint \mathop{symbols}{136}
  \DeclareMathSymbol\tlcircleleftint \mathop{symbols}{138}
  \DeclareMathSymbol\tsumint         \mathop{symbols}{140}
  \let\intop\tint
  \let\ointop\toint
}
%    \end{macrocode}
%
%    \begin{macrocode}
\Mn@load@integrals
%    \end{macrocode}
%
% \subsection{Logos}
%
% Correct logos.
%    \begin{macrocode}
\def\TeX{T\kern-.1667em\lower.4ex\hbox{E}\kern-.125emX\@}
\DeclareRobustCommand{\LaTeX}{L\kern-.32em%
        {\sbox\z@ T%
         \vbox to\ht\z@{\hbox{\check@mathfonts
                              \fontsize\sf@size\z@
                              \math@fontsfalse\selectfont
                              A}%
                        \vss}%
        }%
        \kern-.15em%
        \TeX}
%    \end{macrocode}
%
% \subsection{AMS}
%
% Fix a bug in \pkg{amsmath.sty} which does not support
% math fonts without a skew char.
%    \begin{macrocode}
\def\macc@set@skewchar#1{%
  \begingroup
  \ifnum\mathgroup=\m@ne \let\@tempa\@ne
  \else
    \ifnum\skewchar\textfont\mathgroup=\m@ne \let\@tempa\@ne
    \else \let\@tempa\mathgroup
    \fi
  \fi
  \count@=\skewchar\textfont\@tempa
  \ifnum\count@=\m@ne
    \endgroup
    \def\macc@skewchar{}
  \else
    \advance\count@"7100
    \edef\@tempa{\endgroup
      \mathchardef\noexpand\macc@skewchar=\number\count@\relax}%
    \@tempa
  \fi
  #1%
}
%    \end{macrocode}
% Make the changes take effect. This concludes the main style file.
%    \begin{macrocode}
\normalfont
%</style>
%    \end{macrocode}
%
% \section{Support for character protrusion}
%
% The \pkg{microtype} configuration. All four MinionPro families use the same
% file (cf.\ section~\ref{sec:fontdef}).
%    \begin{macrocode}
%<*mtcfg>
\SetProtrusion
  [ name     = MinionPro-OT1-Roman ]
  { encoding = OT1,
    family   = {MinionPro-OsF,MinionPro-LF,MinionPro-TOsF,MinionPro-TLF},
    shape    = n }
  {
      A = {40,40},
      F = {  ,60},
      J = {90,  },
      K = {  ,50},
      L = {  ,60},
      T = {50,50},
      V = {40,40},
      W = {30,30},
      X = {50,50},
      Y = {50,50},
      k = {  ,60},
      r = {  ,80},
      t = {  ,100},
      v = {70,70},
      w = {40,40},
      x = {60,60},
      y = {70,70},
      ! = {70,180},
      ( = {60,30},    ) = {30,60},
      [ = {100,160},  ] = {160,100},
    {,} = {440,700},
      . = {660,700},
      : = {400,480},
      ; = {350,440},
      - = {700,700},
    \textendash       = {390,480},  \textemdash        = {220,270},
    \textquotedblleft = {380,250},  \textquotedblright = {250,380},
    \textquoteleft    = {670,450},  \textquoteright    = {450,670},
  }
%    \end{macrocode}
%
%    \begin{macrocode}
\SetProtrusion
  [ name     = MinionPro-T1-Roman,
    load     = MinionPro-OT1-Roman ]
  { encoding = T1,
    family   = {MinionPro-OsF,MinionPro-LF,MinionPro-TOsF,MinionPro-TLF},
    shape    = n }
  {
    023 = {  ,40}, % fft ligature
    032 = {  ,50}, % ft ligature
    191 = {30,30}, % Th ligature
    127 = {620,700}, % hyphen
    \AE = {40,  }, % AE
    \quotesinglbase = {670,670},  \quotedblbase   = {370,370},
    \guilsinglleft  = {500,360},  \guilsinglright = {360,500},
    \guillemotleft  = {320,230},  \guillemotright = {230,320},
  }
%    \end{macrocode}
%
%    \begin{macrocode}
\SetProtrusion
  [ name     = MinionPro-OT1-Italic]
  { encoding = OT1,
    family   = {MinionPro-OsF,MinionPro-LF,MinionPro-TOsF,MinionPro-TLF},
    shape    = {it,sl,sw} }
  {
      A = {120,50},
      B = {90,-50},
      C = {50,-60},
      D = {70,-30},
      E = {90,-50},
      F = {100,-40},
      G = {50,-60},
      H = {70,-40},
      I = {150,-90},
      J = {250,-130},
      K = {80,-50},
      L = {90,60},
      M = {60,-40},
      N = {70,-40},
      O = {70,-30},
      P = {70,-110},
      Q = {40,-40},
      R = {80,-50},
      S = {70,-70},
      T = {130,  },
      U = {70,-40},
      V = {120,30},
      W = {90,20},
      X = {50,  },
      Y = {160,  },
      Z = {50,-50},
      d = {60,-60},
      f = {  ,-190},
    027 = {  ,-70}, % ff ligature
      g = {-70,-70},
      i = {  ,-110},
    025 = {  ,-60}, % dotlessi
    028 = {  ,-60}, % fi ligature
    030 = {  ,-30}, % ffi ligature
      j = {-90,-150},
      p = {-40,  },
      r = {  ,80},
      t = {  ,100},
      v = {90,  },
      w = {60,10},
      x = {90,  },
      ! = {190,40},
      ( = {90,  },    ) = {90,  },
      [ = {90,90},    ] = {120,60},
    {,} = {210,680},
      . = {640,680},
      : = {380,430},
      ; = {   ,430},
      - = {750,750},
    \textquoteleft    = {690,140},  \textquoteright    = {470,230},
    \textendash       = {400,500},  \textemdash        = {220,280},
    \textquotedblleft = {520,130},  \textquotedblright = {520,130},
  }
%    \end{macrocode}
%
%    \begin{macrocode}
\SetProtrusion
  [ name     = MinionPro-T1-Italic,
    load     = MinionPro-OT1-Italic ]
  { encoding = T1,
    family   = {MinionPro-OsF,MinionPro-LF,MinionPro-TOsF,MinionPro-TLF},
    shape    = {it,sl,sw} }
  {
    023 = {  ,40}, % fft ligature
    032 = {  ,50}, % ft ligature
    191 = {80,30}, % Th ligature
    127 = {660,750}, % hyphen
    \AE = {90,-40}, % AE
    131 = {80,-30}, % Dcaron
    132 = {70,-40}, % Ecaron
    156 = {80,-60}, % IJ
    \OE = {50,-30}, % OE
    188 = {  ,-80}, % ij
    184 = {70,70}, % ydieresis
    253 = {70,70}, % yacute
    \quotesinglbase = {220,700},  \quotedblbase   = {130,400},
    \guilsinglleft  = {500,180},  \guilsinglright = {350,350},
    \guillemotleft  = {310,110},  \guillemotright = {230,230},
  }
%    \end{macrocode}
%
% We have no protruding values for small caps yet. The following stubs are
% unnecessary at the moment, but they are here as a reminder.
%
%    \begin{macrocode}
\SetProtrusion
  [ name     = MinionPro-OT1-Smallcaps ]
  { encoding = OT1,
    family   = {MinionPro-OsF,MinionPro-LF,MinionPro-TOsF,MinionPro-TLF},
    shape    = {sc,ssc} }
  {}
%    \end{macrocode}
%
%    \begin{macrocode}
\SetProtrusion
  [ name     = MinionPro-T1-Smallcaps,
    load     = MinionPro-OT1-Smallcaps ]
  { encoding = T1,
    family   = {MinionPro-OsF,MinionPro-LF,MinionPro-TOsF,MinionPro-TLF},
    shape    = {sc,ssc} }
  {}
%    \end{macrocode}
%
%    \begin{macrocode}
\SetProtrusion
  [ name     = MinionPro-OT1-SmallcapsItalic ]
  { encoding = OT1,
    family   = {MinionPro-OsF,MinionPro-LF,MinionPro-TOsF,MinionPro-TLF},
    shape    = {scit,sscit} }
  {}
%    \end{macrocode}
%
%    \begin{macrocode}
\SetProtrusion
  [ name     = MinionPro-T1-SmallcapsItalic,
    load     = MinionPro-OT1-SmallcapsItalic ]
  { encoding = T1,
    family   = {MinionPro-OsF,MinionPro-LF,MinionPro-TOsF,MinionPro-TLF},
    shape    = {scit,sscit} }
  {}
%</mtcfg>
%    \end{macrocode}
%
% \section{Font definition files}
% \label{sec:fontdef}
%
% Since alle the font definitions look the same we introduce macros to ease the
% configuration. These macros are stored in the file
% \file{MinionPro-FontDef.sty} which is included by every \acro{FD} file.
% Note that \file{MinionPro-FontDef.sty} will be included several times and
% that we do not know in which context the code is executed. Therefore, we have
% to define all non-private commands as globals.
%
% \makeatletter
% \newcommand*\exampleconfig[2]{%
%   \begin{quote}\ttfamily
%   \expandafter\string\csname Mn@config@#1@#2\endcsname\par
%   \expandafter\expandafter\expandafter\strip@prefix
%   \expandafter\meaning\csname Mn@config@#1@#2\endcsname\par
%   \edef\@tempa{\Mn@UseConfig{#1}{#2}}%
%   \expandafter\strip@prefix\meaning\@tempa
%   \end{quote}%
% }%
% \makeatother
%
% Since this package should be loadable in an \acro{FD} file we have to
% avoid all |\preambleonly| commands.
% Therefore, we use |\ProvidesFile| instead of |\ProvidesPackage|.
%
% We add a guard so that this file is executed only once even if it is included
% multiple times.
%    \begin{macrocode}
%<*fontdef>
\ifx\Mn@DeclareFontShape\@undefined\else\endinput\fi
%    \end{macrocode}
% We distinguish between being loaded directly or via |\usepackage| in the
% preamble by checking |\@nodocument|.
%    \begin{macrocode}
\ifx\@nodocument\relax
  \input{otfontdef.sty}
\else
  \NeedsTeXFormat{LaTeX2e}
  \RequirePackage{otfontdef}
\fi
%    \end{macrocode}
% Reset |\escapechar| (which is set to $-1$ in \acro{FD} files) to make
% |\newcommand| work. The additional group does not harm\?; we have to
% make the important commands global anyway.
%    \begin{macrocode}
\ifx\@nodocument\relax
  \begingroup\escapechar`\\
\fi
%    \end{macrocode}
% These are the default values if it is impossible to process options.
%    \begin{macrocode}
\newcommand\Mn@option@opticals{noopticals}
\newcommand\Mn@option@fontset{smallfamily}
\newdimen\Mn@option@normalsize
\global\Mn@option@normalsize10pt
%    \end{macrocode}
% Whether we should adapt the configuration to the |\normalsize| of the
% document. This switch is only needed locally.
%    \begin{macrocode}
\newif\ifMn@option@normalsize
\Mn@option@normalsizetrue
%    \end{macrocode}
%
%    \begin{macrocode}
\ifx\@nodocument\relax\else
  \DeclareOption{slides}     {\let\Mn@option@opticals\CurrentOption}
  \DeclareOption{opticals}   {\let\Mn@option@opticals\CurrentOption}
  \DeclareOption{noopticals} {\let\Mn@option@opticals\CurrentOption}
  \DeclareOption{smallfamily}{\let\Mn@option@fontset\CurrentOption}
  \DeclareOption{medfamily}  {\let\Mn@option@fontset\CurrentOption}
  \DeclareOption{fullfamily} {\let\Mn@option@fontset\CurrentOption}
  \DeclareOption{normalsize}  {\Mn@option@normalsizetrue}
  \DeclareOption{nonormalsize}{\Mn@option@normalsizefalse}
  \ExecuteOptions{smallfamily,noopticals,normalsize}
  \ProcessOptions\relax
\fi
%    \end{macrocode}
% The method to determine the main font size is inspired by \pkg{microtype}'s
% implementation.
%    \begin{macrocode}
\ifMn@option@normalsize
  \begingroup
  \def\set@fontsize#1#2#3#4\@nil{%
    \@defaultunits\global\Mn@option@normalsize#2pt\relax\@nnil}%
  \normalsize\@nil
  \endgroup
\fi
%    \end{macrocode}
% We use |\otf@makeglobal| from \pkg{otfontdef} to ``export'' the definitions
% that are needed globally.
%    \begin{macrocode}
\otf@makeglobal{Mn@option@opticals}
\otf@makeglobal{Mn@option@fontset}
\ifx\@nodocument\relax\else
  \PackageInfo{MinionPro-FontDef}{%
    Configuration:\space\Mn@option@fontset,\space\Mn@option@opticals,\space
    normalsize=\the\Mn@option@normalsize}%
\fi
%    \end{macrocode}
% 
% \subsubsection{Configuration database}
%
%    \begin{macrocode}
\newcount\Mn@config@cnt
\Mn@config@cnt=0
\newcommand\Mn@curr@config{Mn@config@\romannumeral\Mn@config@cnt}
%    \end{macrocode}
% These commands help in setting up the configuration database. They do not
% need to be global. But the config database itself has to be.
%
% |#3| is added to all instances listed in |#2| of configuration class |#1|.
% |#3| is read with \acro{NFSS} catcodes.
%    \begin{macrocode}
\newcommand\Mn@AddToConfig{%
  \begingroup
  \nfss@catcodes
  \expandafter\endgroup
  \Mn@AddToConfig@
}
\newcommand\Mn@AddToConfig@[3]{%
  \advance\Mn@config@cnt\@ne
  \@namedef{\Mn@curr@config}{#3}%
  \otf@makeglobal{\Mn@curr@config}
%<debug&show>\expandafter\show\csname\Mn@curr@config\endcsname
  \@for\Mn@tempa:=#2\do{%
    \@ifundefined{Mn@config@#1@\Mn@tempa}{%
      \@temptokena{}%
    }{%
      \@temptokena\expandafter\expandafter\expandafter
        {\csname Mn@config@#1@\Mn@tempa\endcsname}%
    }%
    \@expandtwoargs\@namedef{Mn@config@#1@\Mn@tempa}{%
      \the\@temptokena
      \expandafter\noexpand\csname\Mn@curr@config\endcsname
    }%
    \otf@makeglobal{Mn@config@#1@\Mn@tempa}% perhaps defer to only execute once
%<debug&show>\expandafter\show\csname Mn@config@#1@\Mn@tempa\endcsname
  }%
}
%    \end{macrocode}
% Let us look at an example how the configuration database looks internally for
% $(|shape|, |sw|)$, which is specified below in three steps. The following
% lines show different depths of expansion of the macro |\Mn@config@shape@sw|,
% which finally yields the complete configuration\?:
% \exampleconfig{shape}{sw}
% 
% The following commands are used in the |Declare...Family| commands to access
% the previously built configuration database. They must be expandable. |#3| is
% used as a default if no entry is found in the database.
%    \begin{macrocode}
\newcommand\Mn@UseConfig[2]{%
  \Mn@UseConfigOrDefault{#1}{#2}{}%
}
\newcommand\Mn@UseConfigOrDefault[3]{%
  \@ifundefined{Mn@config@#1@#2}{#3}%
    {\@nameuse{Mn@config@#1@#2}}%
}
\otf@makeglobal{Mn@UseConfig}
\otf@makeglobal{Mn@UseConfigOrDefault}
%    \end{macrocode}
% Here comes the configuration.
%    \begin{macrocode}
\Mn@AddToConfig{opticals}{opticals}{
      <-8.5>  otf* [optical=Capt]
   <8.5-13.1> otf* [optical=Text]
  <13.1-20>   otf* [optical=Subh]
    <20->     otf* [optical=Disp]
}
\Mn@AddToConfig{opticals}{noopticals}{
      <->     otf* [optical=Text]
}
\Mn@AddToConfig{opticals}{slides}{
      <->     otf* [optical=Capt]
}
%    \end{macrocode}
%
%    \begin{macrocode}
\ifdim\Mn@option@normalsize<10.1pt
  \Mn@AddToConfig{fontset/weight}{fullfamily/m}{
        <-6>    otf* [weight=Semibold]
       <6-8.5>  otf* [weight=Medium]
     <8.5->     otf* [weight=Regular]
  }
\else
  \Mn@AddToConfig{fontset/weight}{fullfamily/m}{
        <-6>    otf* [weight=Semibold]
       <6-10.1> otf* [weight=Medium]
    <10.1->     otf* [weight=Regular]
  }
\fi
\Mn@AddToConfig{fontset/weight}{medfamily/m}{
      <-6>    otf* [weight=Semibold]
     <6->     otf* [weight=Regular]
}
\Mn@AddToConfig{fontset/weight}{smallfamily/m}{
      <->     otf* [weight=Regular]
}
%
\Mn@AddToConfig{fontset/weight}{fullfamily/sb,medfamily/sb}{
      <-6>    otf* [weight=Bold]
     <6->     otf* [weight=Semibold]
}
\Mn@AddToConfig{fontset/weight}{smallfamily/sb}{
      <->     otf* [weight=Bold]
}
%
\Mn@AddToConfig{weight}{b}{
      <->     otf* [weight=Bold]
}
%    \end{macrocode}
%
%    \begin{macrocode}
\Mn@AddToConfig{shape}{ssc,sscit}{
      <->     otf* [spacing=l2]
}
\Mn@AddToConfig{shape}{n,it,sw,sc,scit}{
      <-8>    otf* [spacing=l1]
}
\Mn@AddToConfig{encoding/shape}{U/n,U/it}{
      <->     otf* [spacing=]
}
%
\Mn@AddToConfig{shape}{sc,ssc,scit,sscit}{
      <->     otf* [variant=sc]
}
\Mn@AddToConfig{shape}{sw}{
      <->     otf* [variant=swash]
}
%    \end{macrocode}
%
%    \begin{macrocode}
\Mn@AddToConfig{encoding/shape}{OML/it}{
      <->     otf* [shape=Mixed, figures=] MinionPro
}
\Mn@AddToConfig{encoding/shape}{OML/n}{
      <->     otf* [shape=MixedUp, figures=] MinionPro
}
\Mn@AddToConfig{shape}{it,scit,sscit,sw}{
      <->     otf* MinionPro-It
}
\Mn@AddToConfig{shape}{n,sc,ssc}{
      <->     otf* MinionPro
}
%    \end{macrocode}
%    
%    \begin{macrocode}
\Mn@AddToConfig{series-sub}{bx}{b}
\Mn@AddToConfig{shape-sub}{sl}{it}
\Mn@AddToConfig{shape-sub}{scsl}{scit}
\Mn@AddToConfig{shape-sub}{sscsl}{sscit}
\Mn@AddToConfig{shape-sub}{scsw}{scit}
\Mn@AddToConfig{shape-sub}{sscsw}{sscit}
%    \end{macrocode}
% 
% \subsubsection{Declaration of font families and shapes}
%
%    \begin{macrocode}
\newcommand\Mn@DeclareFontShape[6][]{%
  \edef\@tempa{%
    \Mn@UseConfig{series-sub}{#4}\Mn@UseConfig{shape-sub}{#5}}%
  \ifx\@tempa\@empty
    \DeclareFontShape{#2}{#3-#6}{#4}{#5}{%
      \Mn@UseConfig{opticals}      {\Mn@option@opticals}%
      \Mn@UseConfig{fontset/weight}{\Mn@option@fontset/#4}%
      \Mn@UseConfig{weight}        {#4}%
      \Mn@UseConfig{encoding/shape}{#2/#5}%
      \Mn@UseConfig{shape}         {#5}%
    }{}%
  \else
    \DeclareFontShape{#2}{#3-#6}{#4}{#5}{%
      <->ssub*#3-#6%
      /\Mn@UseConfigOrDefault{series-sub}{#4}{#4}%
      /\Mn@UseConfigOrDefault{shape-sub}{#5}{#5}%
    }{}%
  \fi
}
\otf@makeglobal{Mn@DeclareFontShape}
\otf@makeglobal{\string\Mn@DeclareFontShape}
%    \end{macrocode}
% |#2| contains the encoding, |#3| the family, and |#1| a list of figure
% versions (or |Ornament|).
%    \begin{macrocode}
\newcommand*\Mn@DeclareLargeFontFamily[3][LF,OsF,TLF,TOsF]{%
  \Mn@DeclareFontFamily{#1}{#2}{#3}
    {m,sb,b,bx} {n,it,sc,ssc,scit,sscit,sw,scsl,scsw,sscsl,sscsw,sl}%
}
\newcommand*\Mn@DeclareSmallFontFamily[3][LF,OsF,TLF,TOsF]{%
  \Mn@DeclareFontFamily{#1}{#2}{#3}
    {m,sb,b,bx} {n,it,sl}%
}
\newcommand*\Mn@DeclareMathFontFamily[3][TOsF]{%
  \Mn@DeclareFontFamily[\skewchar\font=255]{#1}{#2}{#3}
    {m,sb,b,bx} {n,it}%
}
%    \end{macrocode}
% An additional macro |\csname\string\foo\endcsname| is generated by
% |\newcommand| for processing an optional argument of |\foo|.
%    \begin{macrocode}
\otf@makeglobal{Mn@DeclareLargeFontFamily}
\otf@makeglobal{\string\Mn@DeclareLargeFontFamily}
\otf@makeglobal{Mn@DeclareSmallFontFamily}
\otf@makeglobal{\string\Mn@DeclareSmallFontFamily}
\otf@makeglobal{Mn@DeclareMathFontFamily}
\otf@makeglobal{\string\Mn@DeclareMathFontFamily}
%    \end{macrocode}
%
%    \begin{macrocode}
\newcommand*\Mn@DeclareFontFamily[6][]{%
  \@for\Mn@variant:=#2\do{%
    \DeclareFontFamily {#3}{#4-\Mn@variant}{#1}%
  }%
  \Mn@DeclareFontShapes{#3}{#4}
    {#5} {#6} {#2}%
}
\otf@makeglobal{Mn@DeclareFontFamily}
\otf@makeglobal{\string\Mn@DeclareFontFamily}
%    \end{macrocode}
%
%    \begin{macrocode}
\newcommand*\Mn@DeclareFontShapes[5]{%
  \@for\Mn@series:=#3\do{%
    \@for\Mn@shape:=#4\do{%
      \@for\Mn@variant:=#5\do{%
	\Mn@DeclareFontShape{#1}{#2}{\Mn@series}{\Mn@shape}{\Mn@variant}%
      }%
    }%
  }%
}
\otf@makeglobal{Mn@DeclareFontShapes}
%    \end{macrocode}
%
%    \begin{macrocode}
\ifx\@nodocument\relax
  \endgroup
\fi
%    \end{macrocode}
%    \begin{macrocode}
%<*debug>
\newcommand\old@DeclareFontFamily{}
\let\old@DeclareFontFamily\DeclareFontFamily
\renewcommand\DeclareFontFamily[3]{
  \begingroup\escapechar`\\%
  \edef\@tempa{\noexpand\DeclareFontFamily{#1}{#2}}%
  \@temptokena\expandafter{\@tempa{#3}}%
  \message{\the\@temptokena}%
  \endgroup
  \old@DeclareFontFamily{#1}{#2}{#3}%
}
\newcommand\old@DeclareFontShape{}
\let\old@DeclareFontShape\DeclareFontShape
\renewcommand\DeclareFontShape[6]{
  \begingroup\escapechar`\\%
  \edef\@tempa{\noexpand\DeclareFontShape{#1}{#2}{#3}{#4}{#5}}%
  \@temptokena\expandafter{\@tempa{#6}}%
  \message{\the\@temptokena}%
  \endgroup
  \old@DeclareFontShape{#1}{#2}{#3}{#4}{#5}{#6}%
}
%</debug>
%    \end{macrocode}
%
% We define font family aliases so that we can place all configurations for
% the MinionPro family variants into one \pkg{microtype} file\?:
% \file{mt-MinionPro.cfg}. We use \pkg{microtype}'s hook if \pkg{microtype}
% has not been loaded yet (which it should not have been)\?; otherwise we can
% execute the alias definitions directly.
%    \begin{macrocode}
\gdef\Mn@MicroType@Aliases{%
  \DeclareMicroTypeAlias{MinionPro-LF}{MinionPro}%
  \DeclareMicroTypeAlias{MinionPro-OsF}{MinionPro}%
  \DeclareMicroTypeAlias{MinionPro-TLF}{MinionPro}%
  \DeclareMicroTypeAlias{MinionPro-TOsF}{MinionPro}%
}
\@ifundefined{MicroType@Hook}{%
  \global\let\MicroType@Hook\Mn@MicroType@Aliases
}{%
  \g@addto@macro\MicroType@Hook{\Mn@MicroType@Aliases}%
}%
\@ifundefined{DeclareMicroTypeAlias}{}{\Mn@MicroType@Aliases}%
%</fontdef>
%    \end{macrocode}
%
% Using these macros the various \acro{FD} files become simple one-liners.
%
%    \begin{macrocode}
%<*fd>
\input{MinionPro-FontDef.sty}%
%<Uorn> \Mn@DeclareSmallFontFamily[Ornaments]{U}{MinionPro}
%<LGR>  \Mn@DeclareSmallFontFamily{LGR}{MinionPro}
%<OML>  \Mn@DeclareMathFontFamily{OML}{MinionPro}
%<OT1>  \Mn@DeclareLargeFontFamily{OT1}{MinionPro}
%<T1>   \Mn@DeclareLargeFontFamily{T1}{MinionPro}
%<LY1>  \Mn@DeclareLargeFontFamily{LY1}{MinionPro}
%<T5>   \Mn@DeclareLargeFontFamily{T5}{MinionPro}
%<T2A>  \Mn@DeclareSmallFontFamily{T2A}{MinionPro}
%<T2B>  \Mn@DeclareSmallFontFamily{T2B}{MinionPro}
%<T2C>  \Mn@DeclareSmallFontFamily{T2C}{MinionPro}
%<TS1>  \Mn@DeclareLargeFontFamily{TS1}{MinionPro}
%<X2>   \Mn@DeclareSmallFontFamily{X2}{MinionPro}
%<OT2>  \Mn@DeclareSmallFontFamily{OT2}{MinionPro}
%</fd>
%    \end{macrocode}
%
% \CheckSum{0}
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
% \Finale
\endinput
% vim:set ft=tex:
