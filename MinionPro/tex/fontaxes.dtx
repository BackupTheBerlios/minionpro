% \CheckSum{690}
%\iffalse
%<*driver>
\ProvidesFile{fontaxes.dtx}
%</driver>
%<package>\ProvidesPackage{fontaxes}
%<*driver|package>
[2005/04/28 v0.1a Font selection axes]
%</driver|package>
%<*driver>
\documentclass[draft]{ltxdoc}
\usepackage{array,booktabs}
\newcommand*\pkg[1]{\textsf{#1}}
\newcommand*\acro[1]{#1}
\newcommand*\axis[1]{\textit{#1}}
\begin{document}
\DocInput{fontaxes.dtx}
\end{document}
%</driver>
%\fi
% 
% \GetFileInfo{fontaxes.dtx}
% \title{Axes, axes, axes}
% \author{Andreas B\"uhmann}
% \date{\fileversion\ -- \filedate}
% \maketitle
%
% \begin{abstract}
%   The package \pkg{fontaxes} simulates multiple independent font selection
%   axes on top of certain single \acro{NFSS} axes: \axis{base family},
%   \axis{figure style}, and \axis{figure alignment} on top of \axis{family};
%   \axis{primary shape} and \axis{secondary shape} on top of \axis{shape};
%   and \axis{math weight} and \axis{math figure alignment} on top of
%   \axis{math version}.
% \end{abstract}
% 
% \tableofcontents
%
% \section{Usage}
% 
% \subsection{Shape}
%
% This package splits \LaTeX's single shape axis in two: the primary shape
% axis (|n|, |it|, etc.) and the secondary shape axis (|nosc|, |sc|,
% etc.)\footnote{Still lacking better names.}.
%
% \DescribeMacro\upshape %
% \DescribeMacro\itshape %
% \DescribeMacro\slshape %
% \DescribeMacro\swshape %
% The customary commands |\upshape|, |\itshape|, and |\slshape| are redefined
% to access the primary axis only. For access to a swash shape the command
% |\swshape| is added.
%
% \DescribeMacro\noscshape %
% \DescribeMacro\scshape %
% \DescribeMacro\sscshape %
% The commands |\scshape| and |\sscshape| (spaced small caps) access the
% secondary axis. To return from any small-caps shape to ``no small caps'' a
% command |\noscshape| is introduced\footnote{The name \cmd\noscshape\ has
%   been taken from the \pkg{slantsc} package.}.
%
% \DescribeMacro\fontprimaryshape %
% \DescribeMacro\fontsecondaryshape %
% All these commands update the shape axes using the low-level commands
% |\fontprimaryshape|\marg{value} and |\fontsecondaryshape|\marg{value}.
%
% \DescribeMacro\swdefault %
% \DescribeMacro\sscdefault %
% \DescribeMacro\noscdefault %
% If you would like to change which values are used by the various commands
% |\|\meta{abbr}|shape|, redefine the corresponding |\|\meta{abbr}|default|.
% The additional |\swdefault|, |\sscdefault|, and |\noscdefault| are provided
% with their default values |sw|, |ssc|, and |nosc|.
% 
% \subsection{Figure version}
%
% Different figure versions are often implemented as additional families
% (e.g., |MinionPro|$\{|-OsF|, |-LF|, |-TOsF|, |-TLF|\}$; or |pplj|, |pplx|).
% This package splits off the axes \axis{figure style} and \axis{figure
%   alignment}, which leaves the \axis{base family} (|MinionPro| or |ppl|).
% 
% \DescribeMacro\oldstylefigures %
% \DescribeMacro\liningfigures %
% \DescribeMacro\tabularfigures %
% \DescribeMacro\proportionalfigures %
% The package knows two figure styles, accessible via |\oldstylefigures| and
% |\liningfigures|, and two modes of figure alignment, accessible via the
% switches |\tabularfigures| and |\proportionalfigures|.
% 
% \DescribeMacro\fontfigurestyle %
% \DescribeMacro\fontfigurealignment %
% Additionally, you can access both axes directly using the low-level commands
% |\fontfigurestyle|\marg{value} and |\fontfigurealignment|\marg{value}.
%
% \DescribeMacro\fontbasefamily %
% If you want to change the font family without changing the figure version,
% use |\fontbasefamily|\marg{value}. (All these commands require a succeeding
% |\selectfont| to make the changes take effect, just as the standard
% \acro{NFSS} axes do.)
%
% For choosing the figure versions to be used in math mode you can use the
% corresponding axis \axis{math figure alignment}. Note, there currently is no
% means for changing the figure style used in math.
% 
% \subsection{Math version}
%
% \DescribeMacro\boldmath %
% \DescribeMacro\unboldmath %
% By default, \LaTeX\ provides two math versions, |normal| and |bold|, as well
% as commands |\boldmath| and |\unboldmath| for switching between them. This
% package redefines these commands to operate on the axis \axis{math weight}.
% 
% \DescribeMacro\tabularmath %
% \DescribeMacro\proportionalmath %
% A second axis \axis{math figure alignment} is introduced that allows you to
% switch between |tabular| and |proportional| figures using |\tabularmath| and
% |\proportionalmath|. (This assumes the presence of additional math versions
% |tabular| and |boldtabular|. \pkg{fontaxes} will copy the setups of math
% versions |normal| and |bold| at the end of the preamble in case you do not
% provide your own declarations.)
%
% \DescribeMacro\mathweight %
% \DescribeMacro\mathfigurealignment %
% You can directly assign values to the axes using the low-level commands
% |\mathweight|\marg{value} and |\mathfigurealignment|\marg{value}.
%
% \bigskip %
% Table~\ref{tab:cmds} summarizes which commands set which values on which
% axes.\par
% \newcommand\nextaxis{\addlinespace[1\jot]}% %\begin{table}%
% \begin{tabular}{@{}lll@{}}
% \toprule
% command & axis & value\\
% \midrule
% |\upshape| & |\fontprimaryshape| & |\updefault| \\
% |\itshape| &                     & |\itdefault| \\
% |\slshape| &                     & |\sldefault| \\
% |\swshape| &                     & |\swdefault| \\
% \nextaxis
% |\noscshape| & |\fontsecondaryshape| & |\noscdefault| \\
% |\scshape|   &                       & |\scdefault| \\
% |\sscshape|  &                       & |\sscdefault| \\
% \midrule
% |\oldstylefigures| & |\fontfigurestyle|     & |oldstyle| \\  
% |\liningfigures|   &                        & |lining| \\
% \nextaxis
% |\tabularfigures|  & |\fontfigurealignment| & |tabular| \\
% |\proportionalfigures| &                    & |proportional| \\
% \nextaxis
% ---                & |\fontbasefamily| \\
% \midrule
% |\boldmath|    & |\mathweight|          & |bold| \\
% |\unboldmath|  &                        & |normal| \\
% \nextaxis
% |\tabularmath| & |\mathfigurealignment| & |tabular| \\
% |\proportionalmath| &                   & |proportional| \\
% \bottomrule
% \end{tabular}
% \caption{Author commands set values on axes}
% \label{tab:cmds}
% \end{table}
% 
% \subsection{Additional commands}
%
% \DescribeMacro\textsw %
% \DescribeMacro\textssc %
% \DescribeMacro\textnosc %
% \DescribeMacro\figoldstyle %
% \DescribeMacro\figlining %
% \DescribeMacro\figtabular %
% \DescribeMacro\figproportional %
% Similar to the well-known |\textit|, |\textsc|, etc., this package provides
% the following commands that apply the font change to their argument only.
% For example, |\textsw|\marg{text} is roughly equivalent to |{\swshape|
%   \meta{text}|}| (but automatically adds italic corrections).
% 
% \medskip\noindent
% \begin{tabular}{@{}ll@{}}
% command & corresponding switch(es) \\
% \nextaxis
% |\textsw|           & |\swshape| \\
% |\textssc|          & |\sscshape| \\
% |\textnosc|         & |\noscshape| \\
% \nextaxis
% |\figoldstyle|     & |\oldstylefigures| \\
% |\figlining|       & |\liningfigures| \\
% |\figtabular|      & |\tabularfigures \tabularmath| \\
% |\figproportional| & |\proportionalfigures \proportionalmath| \\
% \end{tabular}
% 
% \medskip %
% \DescribeMacro\figureversion %
% The command |\figureversion|\marg{options} allows easy switching of multiple
% aspects of figures simultaneously. It takes as an argument a comma-separated
% list of one or more of the following options:
% 
% \medskip\noindent
% \begin{tabular}{@{}ll@{}}
% option & effect \\
% \nextaxis
% |text|, |oldstyle|, |osf|\footnotemark & |\oldstylefigures| \\
% |lining|, |lf|    & |\liningfigures| \\
% |tabular|         & |\tabularfigures \tabularmath| \\
% |proportional|    & |\proportionalfigures \proportionalmath| \\
% \end{tabular}
% \footnotetext{Which names to choose is still being discussed.}
% 
% \section{Naming conventions}
%
% How to name your font families and shapes so they will work with this
% package. (To be done \dots)
%
% \StopEventually{}
%
% \section{Implementation}
%
% \subsection{High-level author commands (Level 1)}
%
% \subsubsection{Shape}
%
% \begin{macro}{\upshape}
% \begin{macro}{\itshape}
% \begin{macro}{\slshape}
% \begin{macro}{\swshape}
%   Axis 1: primary shape
%    \begin{macrocode}
%<*package>
\DeclareRobustCommand\upshape{\not@math@alphabet\upshape\relax
  \fontprimaryshape\updefault\selectfont}
\DeclareRobustCommand\itshape{\not@math@alphabet\itshape\mathit
  \fontprimaryshape\itdefault\selectfont}
\DeclareRobustCommand\slshape{\not@math@alphabet\slshape\relax
  \fontprimaryshape\sldefault\selectfont}
\DeclareRobustCommand\swshape{\not@math@alphabet\swshape\relax
  \fontprimaryshape\swdefault\selectfont}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\scshape}
% \begin{macro}{\sscshape}
% \begin{macro}{\noscshape}
%   Axis 2: secondary shape
%    \begin{macrocode}
\DeclareRobustCommand\scshape{\not@math@alphabet\scshape\relax
  \fontsecondaryshape\scdefault\selectfont}
\DeclareRobustCommand\sscshape{\not@math@alphabet\sscshape\relax
  \fontsecondaryshape\sscdefault\selectfont}
\DeclareRobustCommand\noscshape{\not@math@alphabet\noscshape\relax
  \fontsecondaryshape\noscdefault\selectfont}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% 
% \begin{macro}{\swdefault}
% \begin{macro}{\noscdefault}
% \begin{macro}{\sscdefault}
%    \begin{macrocode}
\providecommand\swdefault{sw}
\providecommand\noscdefault{nosc}
\providecommand\sscdefault{ssc}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\textsw}
% \begin{macro}{\textssc}
% \begin{macro}{\textnosc}
%    \begin{macrocode}
\DeclareTextFontCommand{\textsw}{\swshape}
\DeclareTextFontCommand{\textssc}{\sscshape}
\DeclareTextFontCommand{\textnosc}{\noscshape}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \subsubsection{Figure version}
%
% \begin{macro}{\oldstylefigures}
% \begin{macro}{\liningfigures}
%   Axis 1: figure style
%    \begin{macrocode}
\def\oldstylefigures{\@nomath\oldstylefigures
  \fontfigurestyle{oldstyle}\selectfont}
\def\liningfigures{\@nomath\liningfigures
  \fontfigurestyle{lining}\selectfont}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\tabularfigures}
% \begin{macro}{\proportionalfigures}
%   Axis 2: figure alignment
%    \begin{macrocode}
\def\tabularfigures{\@nomath\tabularfigures
  \fontfigurealignment{tabular}\selectfont}
\def\proportionalfigures{\@nomath\proportionalfigures
   \fontfigurealignment{proportional}\selectfont}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\figureversion}
% \changes{v0.2}{2005/04/28}{Alternative option |text| (same as |oldstyle|)}
% This code originally appeared in the package \pkg{MinionPro}. I have adapted
% it to work within \pkg{fontaxes}' framework and also changed some option
% names.
%    \begin{macrocode}
\newcommand\fa@fv@prefix{fa@fv@switch@}
\newcommand*\fa@fv@newoption[1]
  {\expandafter\newcommand\csname\fa@fv@prefix #1\endcsname}
\fa@fv@newoption{lining}      {\liningfigures}
\fa@fv@newoption{lf}          {\liningfigures}
\fa@fv@newoption{oldstyle}    {\oldstylefigures}
\fa@fv@newoption{osf}         {\oldstylefigures}
\fa@fv@newoption{text}        {\oldstylefigures}
\fa@fv@newoption{tabular}     {\tabularfigures\tabularmath}
\fa@fv@newoption{proportional}{\proportionalfigures\proportionalmath}
%    \end{macrocode}
% We simply iterate over the list of figure versions specified in the argument
% to |\figureversion| and check if we have specified a matching option.
%    \begin{macrocode}
\newcommand\fa@fv@list{}
\newcommand\fa@fv{}
\DeclareRobustCommand*\figureversion[1]{%
  \edef\fa@fv@list{\zap@space#1 \@empty}%
  \@for\fa@fv:=\fa@fv@list\do{%
    \@ifundefined{\fa@fv@prefix\fa@fv}{%
      \PackageWarning{fontaxes}%
      {Unknown figure style `\fa@fv' specified as the argument to
       \string\figureversion.\MessageBreak Figure style not changed.}%
    }{%
      \@nameuse{\fa@fv@prefix\fa@fv}%
    }%
  }%
}
%    \end{macrocode}
% We have made |\figureversion| robust to protect it in moving arguments
% (e.g., section titles). Additionally, we want it to simply be ignored when
% hyperref is building \acro{PDF} strings (e.g., for bookmarks). The same is
% true for similar commands, but we only include a selection of them (only the
% forms with arguments).
%    \begin{macrocode}
\AtBeginDocument{
  \@ifpackageloaded{hyperref}{%
    \pdfstringdefDisableCommands{%
      \let\figureversion\@gobble
      \let\figoldstyle\@firstofone
      \let\figlining\@firstofone
      \let\figtabular\@firstofone
      \let\figproportional\@firstofone
      \let\textsw\@firstofone
      \let\textssc\@firstofone
      \let\textnosc\@firstofone
    }%
  }{}%
}
%    \end{macrocode}
% \end{macro}
%
% \noindent Axis 3: base family |\fontbasefamily{...}|
%
% \begin{macro}{\figoldstyle}
% \begin{macro}{\figlining}
% \begin{macro}{\figtabular}
% \begin{macro}{\figproportional}
%    \begin{macrocode}
\DeclareTextFontCommand{\figoldstyle}{\oldstylefigures}
\DeclareTextFontCommand{\figlining}{\liningfigures}
\DeclareTextFontCommand{\figtabular}{\tabularfigures\tabularmath}
\DeclareTextFontCommand{\figproportional}
  {\proportionalfigures\proportionalmath}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \subsubsection{Math version}
% 
% \begin{macro}{\boldmath}
% \begin{macro}{\unboldmath}
% Axis 1: weight
%    \begin{macrocode}
\def\boldmath{\@nomath\boldmath
  \mathweight{bold}}
\def\unboldmath{\@nomath\unboldmath
  \mathweight{normal}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\tabularmath}
% \begin{macro}{\proportionalmath}
% Axis 2: figure alignment
%    \begin{macrocode}
\def\tabularmath{\@nomath\tabularmath
  \mathfigurealignment{tabular}}
\def\proportionalmath{\@nomath\proportionalmath
  \mathfigurealignment{proportional}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \subsection{Low-level author commands (Level 2)}
%
% \begingroup\parindent0pt\obeylines
% |\mathweight{bold,normal}| sets |\mathversion|
% |\mathfigurealignment{tabular,proportional}| sets |\mathversion|
%
% |\fontfigurestyle{oldstyle,lining}| sets |\fontfamily|
% |\fontfigurealignment{tabular,proportional}| sets |\fontfamily|
% |\fontbasefamily{...}| sets |\fontfamily|
%
% |\fontprimaryshape{n,it,sl,sw}| sets |\fontshape|
% |\fontsecondaryshape{nosc,sc,ssc}| sets |\fontshape|
% \endgroup
% 
% \begin{macro}{\mathweight}
% \begin{macro}{\mathfigurealignment}
%    \begin{macrocode}
\DeclareRobustCommand\mathweight[1]{%
  \fa@get@math \edef\fa@math@weight{#1}\fa@set@math}
\DeclareRobustCommand\mathfigurealignment[1]{%
  \fa@get@math \edef\fa@math@align{#1}\fa@set@math}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\fontfigurestyle}
% \begin{macro}{\fontfigurealignment}
% \begin{macro}{\fontbasefamily}
%    \begin{macrocode}
\DeclareRobustCommand\fontfigurestyle[1]{%
  \fa@get@family \edef\fa@family@style{#1}\fa@set@family}
\DeclareRobustCommand\fontfigurealignment[1]{%
  \fa@get@family \edef\fa@family@align{#1}\fa@set@family}
\DeclareRobustCommand\fontbasefamily[1]{%
  \fa@get@family \edef\fa@family@base{#1}\fa@set@family}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\fontprimaryshape}
% \begin{macro}{\fontsecondaryshape}
%    \begin{macrocode}
\DeclareRobustCommand\fontprimaryshape[1]{%
  \fa@get@shape \edef\fa@shape@one{#1}\fa@set@shape}
\DeclareRobustCommand\fontsecondaryshape[1]{%
  \fa@get@shape \edef\fa@shape@two{#1}\fa@set@shape}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \subsection{Internals (Layer 3)}
% \begingroup\parindent0pt\obeylines
% |\fa@set@math| sets |\mathversion|
% |\fa@set@family| sets |\fontfamily|
% |\fa@set@shape| sets |\fontshape|
% \endgroup
%
% \begin{macro}{\fa@math@weight}
% \begin{macro}{\fa@math@align}
% \begin{macro}{\fa@family@base}
% \begin{macro}{\fa@family@style}
% \begin{macro}{\fa@family@align}
% \begin{macro}{\fa@shape@one}
% \begin{macro}{\fa@shape@two}
%   The macros that hold the current values of the axes (here with some
%   default values that will most certainly be overwritten during
%   initializiation; see |\fa@get@|\dots)
%    \begin{macrocode}
\newcommand*\fa@math@weight{normal}
\newcommand*\fa@math@align{proportional}
\newcommand*\fa@family@base{MinionPro}
\newcommand*\fa@family@style{oldstyle}
\newcommand*\fa@family@align{proportional}
\newcommand*\fa@shape@one{n}
\newcommand*\fa@shape@two{nosc}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\fa@set@math}
% \begin{macro}{\fa@set@family}
% \begin{macro}{\fa@set@shape}
%    \begin{macrocode}
\newcommand*\fa@set@math{%
  \fa@encode@math
  \mathversion{\fa@code}%
  \fa@save\math@version}
\newcommand*\fa@set@family{%
  \fa@encode@family
  \fontfamily{\fa@code}%
  \fa@save\f@family}
\newcommand*\fa@set@shape{%
  \fa@encode@shape
  \fontshape{\fa@code}%
  \fa@save\f@shape}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\fa@get@math}
% \begin{macro}{\fa@get@family}
% \begin{macro}{\fa@get@shape}
%   Check for changes: if changed, try to decode and update axes.
%    \begin{macrocode}
\newcommand*\fa@get@math{%
  \iffa@changed\math@version{%
    \fa@decode@{math}{\math@version}%
    \ifx\fa@edoc\relax\else
      \edef\fa@math@weight{\expandafter\@firstoftwo\fa@edoc}%
      \edef\fa@math@align{\expandafter\@secondoftwo\fa@edoc}%
    \fi
    \fa@save\math@version
  }{}%
}
%    \end{macrocode}
%
%    \begin{macrocode}
\newcommand*\fa@get@family{%
  \iffa@changed\f@family{%
    \let\fa@edoc\relax
    \expandafter\fa@split@family\f@family--\@nnil
    \ifx\fa@split@suffix\relax\else
      \fa@decode@{figures}{\fa@split@suffix}%
    \fi
    \ifx\fa@edoc\relax
%    \end{macrocode}
% Try alternative
%    \begin{macrocode}
      \expandafter\fa@split@familyalt\f@family
        \@empty\@empty\@empty\@empty\@nnil
      \ifx\fa@split@suffix\relax\else
        \fa@decode@{figuresalt}{\fa@split@suffix}%
      \fi
      \ifx\fa@edoc\relax
        \fa@warn@undecodable{family `\f@family'}%
        \edef\fa@family@base{\f@family}%
      \else
        \edef\fa@family@base{\fa@split@prefix}%
        \edef\fa@family@style{\expandafter\@firstoftwo\fa@edoc}%
%    \end{macrocode}
% Do not overwrite align (does not occur in alternative naming scheme)
%    \begin{macrocode}
      \fi
    \else
%    \end{macrocode}
% Store values
%    \begin{macrocode}
      \edef\fa@family@base{\fa@split@prefix}%
      \edef\fa@family@style{\expandafter\@firstoftwo\fa@edoc}%
      \edef\fa@family@align{\expandafter\@secondoftwo\fa@edoc}%
    \fi
  }{}%
}
%    \end{macrocode}
%    \begin{macrocode}
\newcommand*\fa@get@shape{%
  \iffa@changed\f@shape{%
    \fa@decode@{shape}{\f@shape}%
    \ifx\fa@edoc\relax\else
      \edef\fa@shape@one{\expandafter\@firstoftwo\fa@edoc}%
      \edef\fa@shape@two{\expandafter\@secondoftwo\fa@edoc}%
    \fi
    \fa@save\f@shape
  }{}%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \subsection{Encoding}
%
% \begin{macro}{\fa@encode@math}
% \begin{macro}{\fa@encode@family}
% \begin{macro}{\fa@encode@figures}
% \begin{macro}{\fa@encode@figuresalt}
% \begin{macro}{\fa@encode@shape}
%    \begin{macrocode}
\newcommand*\fa@encode@math{%
  \fa@encode@{math}{{\fa@math@weight}{\fa@math@align}}%
}
%    \end{macrocode}
% Default is concatenation
%    \begin{macrocode}
\newcommand*\fa@encode@math@default{%
  \edef\fa@code{\fa@math@weight\fa@math@align}}
%    \end{macrocode}
%
%    \begin{macrocode}
\newcommand*\fa@encode@family{%
  \fa@encode@{family}
    {{\fa@family@base}{\fa@family@style}{\fa@family@align}}%
}
%    \end{macrocode}
% Try different naming conventions
%    \begin{macrocode}
\newcommand*\fa@encode@family@default{%
  \fa@encode@figures
  \edef\fa@code{\fa@family@base-\fa@code}%
  \fa@check@family\fa@code
  \iffa@exists\else
    \fa@encode@figuresalt
    \edef\fa@code{\fa@family@base\fa@code}%
    \fa@check@family\fa@code
    \iffa@exists\else
      \edef\fa@code{\fa@family@base}%
    \fi
  \fi
}
%    \end{macrocode}
%
%    \begin{macrocode}
\newcommand*\fa@encode@figures{%
  \fa@encode@{figures}{{\fa@family@style}{\fa@family@align}}%
}
\newcommand*\fa@encode@figures@default{%
  \edef\fa@code{OsF}%
  \PackageWarning{fontaxes}{Unknown figure version 
    `\fa@family@style\space + \fa@family@align'\MessageBreak
    Encoding to `\fa@code'}%
}
%    \end{macrocode}
%
%    \begin{macrocode}
\newcommand*\fa@encode@figuresalt{%
  \fa@encode@{figuresalt}{{\fa@family@style}{\fa@family@align}}%
}
\newcommand*\fa@encode@figuresalt@default{%
  \PackageWarning{fontaxes}{Unknown figure version 
    `\fa@family@style\space + \fa@family@align'\MessageBreak
    Encoding to `\fa@code'}%
  \edef\fa@code{j}%
}
%    \end{macrocode}
%
%    \begin{macrocode}
\newcommand*\fa@encode@shape{%
  \fa@encode@{shape}{{\fa@shape@one}{\fa@shape@two}}%
}
%    \end{macrocode}
% Default is (reverse) concatenation
%    \begin{macrocode}
\newcommand*\fa@encode@shape@default{%
  \edef\fa@code{\fa@shape@two\fa@shape@one}%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\fa@encode@}
%    \begin{macrocode}
\newcommand*\fa@encode@[2]{%
  \@ifundefined{fa@encode@#1#2}
    {\@nameuse{fa@encode@#1@default}}
    {\edef\fa@code{\@nameuse{fa@encode@#1#2}}}%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fa@naming@exception}
%   To do: Add an user interface to specifying naming exceptions
%    \begin{macrocode}
\newcommand*\fa@naming@exception[3]{%
  \expandafter\edef\csname fa@encode@#1#2\endcsname{#3}%
}
%    \end{macrocode}
% The defaults |n| and |nosc| disappear when combined.
%    \begin{macrocode}
\fa@naming@exception{shape}{{n}{nosc}}{n}
\fa@naming@exception{shape}{{n}{sc}}{sc}
\fa@naming@exception{shape}{{n}{ssc}}{ssc}
\fa@naming@exception{shape}{{it}{nosc}}{it}
\fa@naming@exception{shape}{{sl}{nosc}}{sl}
\fa@naming@exception{shape}{{sw}{nosc}}{sw}
%    \end{macrocode}
% The defaults disappear in the concatenation. |boldtabular| is formed
% regularly.
%    \begin{macrocode}
\fa@naming@exception{math}{{normal}{proportional}}{normal}
\fa@naming@exception{math}{{normal}{tabular}}{tabular}
\fa@naming@exception{math}{{bold}{proportional}}{bold}
%    \end{macrocode}
% Provide abbreviations for font family suffixes.
%    \begin{macrocode}
\fa@naming@exception{figures}{{oldstyle}{proportional}}{OsF}
\fa@naming@exception{figures}{{oldstyle}{tabular}}{TOsF}
\fa@naming@exception{figures}{{lining}{proportional}}{LF}
\fa@naming@exception{figures}{{lining}{tabular}}{TLF}
%    \end{macrocode}
% The |j|/|x| naming convention does not know about different figure
% alignments. Let us silently ignore these.
%    \begin{macrocode}
\fa@naming@exception{figuresalt}{{oldstyle}{proportional}}{j}
\fa@naming@exception{figuresalt}{{oldstyle}{tabular}}{j}
\fa@naming@exception{figuresalt}{{lining}{proportional}}{x}
\fa@naming@exception{figuresalt}{{lining}{tabular}}{x}
%    \end{macrocode}
% \end{macro}
%
% \subsection{Decoding}
%
% Detect if |\mathversion|, |\fontshape|, |\fontfamily| have been used not
% under control of this package.
%
% \begin{macro}{\fa@family@style@domain}
% \begin{macro}{\fa@family@align@domain}
% \begin{macro}{\fa@shape@one@domain}
% \begin{macro}{\fa@shape@two@domain}
% \begin{macro}{\fa@math@weight@domain}
% \begin{macro}{\fa@math@align@domain}
%   Assuming a injective encoding function, we can construct decoding tables
%   when we know the function's domain. To do: Warn if decoding entries are
%   overwritten (if the function is not injective).
%    \begin{macrocode}
\newcommand*\fa@family@style@domain{oldstyle,lining}
\newcommand*\fa@family@align@domain{proportional,tabular}
%    \end{macrocode}
%    \begin{macrocode}
\newcommand*\fa@shape@one@domain{n,it,sl,sw}
\newcommand*\fa@shape@two@domain{nosc,sc,ssc}
%    \end{macrocode}
%    \begin{macrocode}
\newcommand*\fa@math@weight@domain{normal,bold}
\newcommand*\fa@math@align@domain{proportional,tabular}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\fa@create@decode@table}
% |#1| name, |#2|/|#3| axes
%    \begin{macrocode}
\newcommand*\fa@create@decode@table[3]{%
  \begingroup
  \edef\fa@foreach##1{%
    \noexpand\@for
    \expandafter\noexpand\csname fa@#2\endcsname:=%
    \csname fa@#2@domain\endcsname
    \noexpand\do{%
    \noexpand\@for
    \expandafter\noexpand\csname fa@#3\endcsname:=%
    \csname fa@#3@domain\endcsname
    \noexpand\do{##1}}%
  }%
  \fa@foreach{%
    \@nameuse{fa@encode@#1}%
    \global\expandafter\edef\csname fa@decode@#1{\fa@code}\endcsname{%
      {\@nameuse{fa@#2}}{\@nameuse{fa@#3}}}%
  }%
  \endgroup
}
%    \end{macrocode}
%
%    \begin{macrocode}
\fa@create@decode@table{figures}{family@style}{family@align}
\fa@create@decode@table{figuresalt}{family@style}{family@align}
\fa@create@decode@table{shape}{shape@one}{shape@two}
\fa@create@decode@table{math}{math@weight}{math@align}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fa@warn@undecodable}
%    \begin{macrocode}
\newcommand*\fa@warn@undecodable[1]{%
  \PackageWarning{fontaxes}{I don't know how to decode\MessageBreak #1}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fa@decode@}
% Interpret the decoding tables.
%    \begin{macrocode}
\newcommand*\fa@decode@[2]{%
  \@ifundefined{fa@decode@#1{#2}}{%
    \let\fa@edoc\relax
    \fa@warn@undecodable{shape `#2'}%
  }{\edef\fa@edoc{\@nameuse{fa@decode@#1{#2}}}}%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fa@save}
% \begin{macro}{\iffa@changed}
% Save states of macros for future comparison
%    \begin{macrocode}
\newcommand*\iffa@changed[1]{%
  \expandafter\ifx\csname fa@last@\string#1\endcsname#1%
    \expandafter\@secondoftwo
  \else
    \expandafter\@firstoftwo
  \fi
}
\newcommand*\fa@save[1]{%
  \expandafter\let\csname fa@last@\string#1\endcsname#1%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% 
% \subsection{Compatibility}
%
% If no math versions |tabular| and |boldtabular| are defined in the preamble,
% we provide defaults by copying the states of |normal| and |bold| (assuming,
% in turn, that these two exist).
%    \begin{macrocode}
\AtBeginDocument{%
  \fa@provide@mv@copy{tabular}{normal}%
  \fa@provide@mv@copy{boldtabular}{bold}%
}
%    \end{macrocode}
%
% \begin{macro}{\fa@provide@mv@copy}
% \changes{v0.2}{2005/04/28}{Provide default math versions by copy}
% Declare math version |#1| to be a copy of math version |#2| if |#1| does not
% exist already. To accomplish this we have to know that a math version's
% configuration is basically stored in a macro |\mv@|\meta{name} (which makes
% us dependent on the NFSS implementation; sigh \dots). 
%    \begin{macrocode}
\newcommand*\fa@provide@mv@copy[2]{%
  \@ifundefined{mv@#1}{%
    \DeclareMathVersion{#1}%
    \expandafter\let\csname mv@#1\expandafter\endcsname
      \csname mv@#2\endcsname
  }{}%
}
%    \end{macrocode}
% \end{macro}
% 
%
% \subsection{Tools}
%
% \begin{macro}{\fa@check@family}
% \begin{macro}{\iffa@exists}
%   Check if family switching would yield an existing shape.
%    \begin{macrocode}
\newif\iffa@exists
\newcommand*\fa@check@family[1]{%
  \begingroup
  \fontfamily{#1}\try@load@fontshape
  \expandafter
  \ifx\csname\curr@fontshape\endcsname\relax
    \aftergroup\fa@existsfalse
  \else
    \aftergroup\fa@existstrue
  \fi
  \endgroup
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\fa@split@prefix}
% \begin{macro}{\fa@split@suffix}
%   The results of splitting a family name.
%    \begin{macrocode}
\newcommand*\fa@split@prefix{}
\newcommand*\fa@split@suffix{}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\fa@split@family}
%   Font name contains one hyphen, split there
%    \begin{macrocode}
\newcommand*\fa@split@family{}
\def\fa@split@family#1-#2-#3\@nnil{%
  \let\fa@split@prefix\relax
  \let\fa@split@suffix\relax
  \def\@tempa{#3}%
  \ifx\@tempa\@empty\else
    \def\fa@split@suffix{#2}%
    \ifx\fa@split@suffix\@empty
      \let\fa@split@suffix\relax
    \else
      \def\fa@split@prefix{#1}%
    \fi
  \fi
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fa@split@familyalt}
%   Name consists of four characters, split off the last one
%    \begin{macrocode}
\newcommand*\fa@split@familyalt{}
\def\fa@split@familyalt#1#2#3#4#5\@nnil{%
  \let\fa@split@prefix\relax
  \let\fa@split@suffix\relax
  \edef\@tempa{#5}%
  \ifx\@tempa\@empty
    \ifx\@empty#4\else
      \def\fa@split@prefix{#1#2#3}%
      \def\fa@split@suffix{#4}%
    \fi
  \fi
}
%</package>
%    \end{macrocode}
% \end{macro}
%
% \subsection{Tests}
% 
% The file |test-fontaxes.tex| (docstrip target |test|) exercises some
% features of the package. Since it is rather ad-hoc code, it is not shown
% here. (It also requires the package \pkg{MinionPro}.)
%
% \Finale
% \endinput 
%
%    \begin{macrocode}
%<*test>
\documentclass[a4paper]{article}
\usepackage{MinionPro}
\usepackage[T1]{fontenc}

\usepackage{longtable}
\usepackage{fontaxes}
\usepackage{hyperref}

\makeatletter
\newcommand\showshape{\hphantom{\normalfont\textsuperscript{sscsw}}%
  \llap{\expandafter\normalfont\expandafter\textsuperscript
  \expandafter{\f@shape}}}

\newcommand\shapecmdlist{\upshape,\itshape,\slshape,\swshape,%
  \noscshape,\scshape,\sscshape}
\newcommand\reacheableshapes{}
\newtoks\tab
\newcommand\atab[1]{%
  \tab\expandafter{\the\tab#1}%
}
\newcommand\etab[1]{%
  \edef\line{#1}%
  \expandafter\atab\expandafter{\line}%
}
\newif\ifadded
\newcommand\testall{%
  \edef\reacheableshapes{\shapedefault}
  \addedtrue
  \@whilesw\ifadded\fi{%
    \addedfalse
    \@for\@sh:=\reacheableshapes\do{%
      \begingroup
	\fontshape\@sh\relax
	\@for\@cmd:=\shapecmdlist\do{%
	  \@cmd\relax
	  \@expandtwoargs\in@{,\f@shape,}{,\reacheableshapes,}%
	  \ifin@\else
	    \xdef\reacheableshapes{\reacheableshapes,\f@shape}%
	    \global\addedtrue
	  \fi
	}%
      \endgroup
    }%
  }
  \tab{\begin{longtable}[t]{ll}}
  \@for\@sh:=\reacheableshapes\do{%
    \etab{\noexpand\fontshape{\@sh}}%
    \atab{\selectfont\showshape Am Anfang &}%
    \etab{\noexpand\fontshape{\@sh}}%
    \atab{\begin{tabular}[t]{ll}}%
    \@for\@cmd:=\shapecmdlist\do{%
      \atab{\normalfont\ttfamily}%
      \etab{\expandafter\string\@cmd &
	\expandafter\noexpand\@cmd\noexpand\showshape war das Wort%
	\noexpand\\\relax}%
    }%
    \atab{\end{tabular} \\\relax}%
  }
  \atab{\end{longtable}\endgraf}%
  \the\tab
}

\makeatother
\parindent=0pt

\begin{document}

\section{Shape}
\subsection{Switches}
\fontbasefamily{MinionPro}\selectfont
\figureversion{oldstyle,proportional}%
\testall

\subsection{Text font commands}

\makeatletter
\def\amp{&}
\def\visible#1#2\\{%
  #1#2 \amp {\def\@tempa{#1}\edef\@tempa{\expandafter
  \strip@prefix\meaning\@tempa}\normalfont\ttfamily{\@tempa}}\\}
\makeatother
\begin{tabular}{ll}
Am \visible{\textit{Anfang \textsc{war}}} das Wort\\
Am \visible{\textsl{Anfang \textnosc{war}}} das Wort\\
Am \visible{\textsw{Anfang \textssc{war}}} das Wort\\
Am \visible{\textsc{Anfang \textsl{war}}} das Wort\\
Am \visible{\textssc{Anfang \textit{war}}} das Wort\\
\end{tabular}

\section{Figure version}

\tracingmacros=2
\begin{tabular}{lll}
\visible\oldstylefigures 12345 \visible\liningfigures 67890\\
\visible\oldstylefigures 12345 \visible\tabularfigures 67890\\
\visible\oldstylefigures 12345 \visible\proportionalfigures 67890\\
\visible\oldstylefigures 12345 \visible\oldstylefigures 67890\\
\visible\liningfigures 12345 \visible\liningfigures 67890\\
\visible\liningfigures 12345 \visible\tabularfigures 67890\\
\visible\liningfigures 12345 \visible\proportionalfigures 67890\\
\visible\liningfigures 12345 \visible\oldstylefigures 67890\\
\visible\tabularfigures 12345 \visible\liningfigures 67890\\
\visible\tabularfigures 12345 \visible\tabularfigures 67890\\
\visible\tabularfigures 12345 \visible\proportionalfigures 67890\\
\visible\tabularfigures 12345 \visible\oldstylefigures 67890\\
\visible{\tabularfigures\liningfigures}12345 
  \visible\liningfigures 67890\\
\visible{\tabularfigures\liningfigures}12345 
  \visible\tabularfigures 67890\\
\visible{\tabularfigures\liningfigures}12345 
  \visible\proportionalfigures 67890\\
\visible{\tabularfigures\liningfigures}12345 
  \visible\oldstylefigures 67890\\
\end{tabular}

\subsection{Switch base family}

\begingroup
\def\nums{1234567890\par}
\oldstylefigures MinionPro \nums
\fontbasefamily{ppl}\selectfont 
Palatino \nums
\liningfigures
lining \nums
\fontbasefamily{MinionPro}\selectfont
MinionPro \nums
\figureversion{lining,tabular}%
lining and tabular \nums
\fontbasefamily{ppl}\selectfont
Palatino \nums
\oldstylefigures
oldstyle \nums
\fontbasefamily{MinionPro}\selectfont
MinionPro again, should be oldstyle \emph{and tabular} \nums
\endgroup

\subsection{Text font commands}

\def\nums{t123 $m123$}
\begin{tabular}{lll}
\nums\quad\visible{(\figoldstyle{\nums})}\quad \nums\\
\nums\quad\visible{(\figlining{\nums})}\quad \nums\\
\nums\quad\visible{(\figtabular{\nums})}\quad \nums\\
\nums\quad\visible{(\figproportional{\nums})}\quad \nums\\
\nums\quad\visible{(\figtabular{\figlining{\nums}})}\quad \nums\\
\end{tabular}

\begingroup Same but start from lining tabular figures\par
\liningfigures\tabularfigures
\begin{tabular}{lll}
\nums\quad\visible{(\figoldstyle{\nums})}\quad \nums\\
\nums\quad\visible{(\figlining{\nums})}\quad \nums\\
\nums\quad\visible{(\figtabular{\nums})}\quad \nums\\
\nums\quad\visible{(\figproportional{\nums})}\quad \nums\\
\nums\quad\visible{(\figtabular{\figlining{\nums}})}\quad \nums\\
\end{tabular}
\endgroup

\subsection{In moving argument: o123 \figlining{l456} \figtabular{t789}
\figureversion{oldstyle,oldstyle,lining,oldstyle,proportional}op012
\textsw{Swash} \textssc{Spaced \textnosc{Small} Caps}}

\tableofcontents

\section{Math version}

\def\formula{$123 + a - \sqrt{\beta}$}
\begin{tabular}{lll}
\visible\unboldmath \formula\quad \visible\boldmath \formula\\
\visible\unboldmath \formula\quad \visible\tabularmath \formula\\
\visible\unboldmath \formula\quad \visible\proportionalmath \formula\\
\visible\unboldmath \formula\quad \visible\unboldmath \formula\\
\visible\boldmath \formula\quad \visible\boldmath \formula\\
\visible\boldmath \formula\quad \visible\tabularmath \formula\\
\visible\boldmath \formula\quad \visible\proportionalmath \formula\\
\visible\boldmath \formula\quad \visible\unboldmath \formula\\
\visible\tabularmath \formula\quad \visible\boldmath \formula\\
\visible\tabularmath \formula\quad \visible\tabularmath \formula\\
\visible\tabularmath \formula\quad \visible\proportionalmath \formula\\
\visible\tabularmath \formula\quad \visible\unboldmath \formula\\
\visible{\tabularmath\boldmath}\formula\quad \visible\boldmath \formula\\
\visible{\tabularmath\boldmath}\formula\quad \visible\tabularmath \formula\\
\visible{\tabularmath\boldmath}\formula\quad \visible\proportionalmath \formula\\
\visible{\tabularmath\boldmath}\formula\quad \visible\unboldmath \formula\\
\end{tabular}

\section{Recovery}

\makeatletter
\def\showfont{\edef\@tempa{\curr@fontshape}\hfill
{\normalfont\ttfamily\@tempa}}
\def\showmath{$123xyz$ \edef\@tempa{\math@version}\hfill
{\normalfont\ttfamily\@tempa}}
\makeatother

\begingroup
\scshape scshape \showfont\par
\fontshape{scit}\selectfont selecting scit explicitly \showfont\par
\sscshape Sscshape should adapt\showfont\par
\endgroup

\bigskip
\begingroup
\boldmath boldmath \showmath\par
\mathversion{tabular} selecting tabular explicitly \showmath\par
\boldmath boldmath \showmath\par
\endgroup

\bigskip
\begingroup
\fontfamily{MinionPro-LF}\selectfont selecting MinionPro-LF explicitly \showfont\par
\tabularfigures tabularfigures 1234 \showfont\par
\endgroup

\bigskip
\begingroup
\tabularfigures tabularfigures 1234 \showfont\par
\fontfamily{pplx}\selectfont selecting pplx explicitly \showfont\par
\oldstylefigures oldstylefigures 1234 \showfont\par
\fontbasefamily{MinionPro}\selectfont 
Back to MinionPro (is tabular still there?) 1234 \showfont\par
\fontfamily{ptm}\selectfont selecting ptm explicitly \showfont\par
\liningfigures liningfigures 1234 \showfont\par
\tabularfigures tabularfigures 1234 \showfont\par
\fontbasefamily{MinionPro}\selectfont Back \dots 1234 \showfont\par
\endgroup

\end{document}
%</test>
%    \end{macrocode}
